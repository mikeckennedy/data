{
  "alias": "video/2007/why-you-should-write-buggy-software-with-as-few-f-",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2007,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-01",
  "slug": "why-you-should-write-buggy-software-with-as-few-f-",
  "speakers": [],
  "summary": "Authors: Granger, Brian, Cal Poly San Luis Obispo\n\nTrack: General\n\nEveryone knows that in software, features are good and bugs are bad. If\nthis is the case, then it must follow that the best software will have\nthe most features and the fewest bugs. In this talk I will try to\nconvince you that this is a horrible way of thinking about software,\nespecially in the context of open source projects. To accomplish this\ngoal, I will use the development of the IPython Notebook as a case study\nin software engineering. I will describe what we learned in our numerous\nmissteps, what we did right and how the eventual success of the IPython\nNotebook radically changed how I view software development. This will\nclarify why feature and complexity creep need to be actively guarded\nagainst and how a well defined scope can help in that battle. I will\npropose an informal framework for evaluating new feature requests and\ndiscuss the social/community aspects of saying no to new features within\na project. Finally, I will try to convince you that bugs are a sign of\nquality software and a healthy community. If I am successful, you will\nwant to go home and write buggy software with as few features as\npossible.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/OrpPDkZef5I/hqdefault.jpg",
  "title": "Why you should write buggy software with as few features as possible; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OrpPDkZef5I"
    }
  ]
}
