{
  "alias": "video/1197/copperhead-data-parallel-python",
  "category": "SciPy 2012",
  "copyright_text": "CC BY-SA",
  "description": "Copperhead is a data parallel language embedded in Python, which aims to\nprovide both a productive programming environment as well as excellent\ncomputational efficiency on heterogeneous parallel hardware. Copperhead\nprograms are written in a small, restricted subset of Python, using\nstandard constructs like map and reduce, along with traditional data\nparallel primitives like scan and sort. Copperhead programs are written\nin standard Python modules and interoperate with existing Python\nnumerical and visualization libraries such as NumPy, SciPy, and\nMatplotlib. The Copperhead runtime compiles Copperhead programs to\ntarget either CUDA-enabled GPUs or multicore CPUs using OpenMP or\nThreading Building Blocks. On several example applications from Computer\nVision and Machine Learning, Copperhead programs achieve between 45-100%\nof the performance of hand-coded CUDA code, running on NVIDIA GPUs. In\nthis talk, we will discuss the subset of Python that forms the\nCopperhead language, the open source Copperhead runtime and compiler,\nand selected example programs.\n",
  "duration": null,
  "id": 1197,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2012-07-18",
  "slug": "copperhead-data-parallel-python",
  "speakers": [
    "Bryan Catanzaro"
  ],
  "summary": "",
  "tags": [
    "hpc"
  ],
  "thumbnail_url": "https://i3.ytimg.com/vi/FpDVyAwz2qM/hqdefault.jpg",
  "title": "Copperhead: Data Parallel Python",
  "videos": [
    {
      "type": "mp4",
      "url": "http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/Copperhead_Data_Parallel_Python.mp4?Signature=laRgCy3mlIsaXoYCTKhlhu6Orck%3D&Expires=1346380548&AWSAccessKeyId=FEWGReWX3QbNk0h3"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtube.com/watch?v=FpDVyAwz2qM"
    }
  ]
}
