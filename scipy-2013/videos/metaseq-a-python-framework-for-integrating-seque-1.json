{
  "alias": "video/2081/metaseq-a-python-framework-for-integrating-seque-1",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2081,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-01",
  "slug": "metaseq-a-python-framework-for-integrating-seque-1",
  "speakers": [],
  "summary": "metaseq: a Python framework for integrating high-throughput sequencing\nanalyses\n\nAuthors: Dale, Ryan, National Institute of Diabetes and Digestive and\nKidney Diseases, National Institutes of\n\nTrack: Bioinformatics\n\nmetaseq is a Python package that ties together a growing ecosystem of\nbioinformatics Python tools and file formats, focusing on flexibility\nand interactive exploration of high-throughput sequencing data (e.g.,\nChIP-seq, RNA-seq, and RIP-seq).\n\nThis talk will use a worked example to illustrate some practical\nbioinformatics applications of metaseq's features. For example, its\nfiletype adapters provide random-access, uniform support for\ncommonly-used formats (BAM, bigBed/bigWig, and, via tabix, any\ntab-delimited format). Combined with multiprocessing and a rebinning\nroutine compiled by Cython, this allows relatively rapid population of\nNumPy arrays of binned signal over thousands of genes (or other features\nof interest).\n\nmetaseq's \"mini-browser\" framework connects these arrays -- or any other\nplot that considers genomic intervals, such as scatterplots of control\nvs treatment RNA-seq signal -- via callbacks to interactive creation of\nmatplotlib figures that show the local genomic signal and gene models.\nAlternatively, callbacks can upload data and display them in the UCSC\ngenome browser for further visualization alongside the wealth of\npublicly available data.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/w7wgIZJsUUI/hqdefault.jpg",
  "title": "metaseq: a Python framework for integrating sequencing analyses; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=w7wgIZJsUUI"
    }
  ]
}
