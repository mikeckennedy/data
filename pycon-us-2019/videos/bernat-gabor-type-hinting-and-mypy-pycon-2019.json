{
  "copyright_text": null,
  "description": "Type hinting for Python (as a linter tool) came out in September 2015 as\npart of Python 3.5 (and was championed by Guido himself). Since then,\nvariable annotations (plus, more recently, protocols) improved its\ncapabilities even further. Over the last two years, tools, such as mypy,\ncould build on top of it. Slowly, these annotations have emerged from a\nproof of concept state (e.g., mypy API planning) to becoming a stable\nfeature.\n\nIn this presentation, I'll tell my story of using type hints for both\nadding type hinting and checking type correctness for a library\nsupporting both Python 2 and 3 and reusing this information to insert\ntype data into the generated Sphinx documentation automatically.\n",
  "duration": 1873,
  "language": "eng",
  "recorded": "2019-05-04T14:35:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/198/"
    }
  ],
  "speakers": [
    "Bernat Gabor"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/hTrjTAPnA_k/maxresdefault.jpg",
  "title": "Type hinting (and mypy)",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=hTrjTAPnA_k"
    }
  ]
}
