{
  "copyright_text": null,
  "description": "Questions and confusion about the Python packaging ecosystem abound.\nWhat is this ``setup.py`` file? What's the difference between wheels and\neggs? Do I use setuptools or distutils? Why should I use twine? Do I put\nmy projects dependencies in a ``requirements.txt`` or in ``setup.py``?\nHow do I just get my module up on PyPI? Should I use ``pip`` or\n``conda``? Wait, what is Warehouse? This talk will identify the key\ntools one might encounter when trying to distribute Python software,\nwhat they are used for, why they exist, and their history (including\nwhere their weird names come from). In addition, we'll see how they all\nwork together, what it takes to make them work, and what the future has\nin store for Python packaging.Presenter(s): Speaker: Dustin Ingram,\nPython Packaging Authority\n",
  "duration": 1696,
  "language": "eng",
  "recorded": "2018-07-11",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://scipy2018.scipy.org/ehome/299527/721463/"
    },
    {
      "label": "Conference slides",
      "url": "https://github.com/deniederhut/Slides-SciPyConf-2018"
    }
  ],
  "speakers": [
    "Dustin Ingram"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/na0hQI5Ep5E/maxresdefault.jpg",
  "title": "Inside the Cheeseshop: How Python Packaging Works",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=na0hQI5Ep5E"
    }
  ]
}
