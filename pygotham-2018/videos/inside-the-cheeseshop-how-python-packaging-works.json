{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Questions and confusion about the Python packaging ecosystem abound. What is\nthis `setup.py` file? What\u2019s the difference between wheels and eggs? Do I use\nsetuptools or distutils? Why should I use twine? Do I put my projects\ndependencies in a `requirements.txt` or in `setup.py`? How do I just get my\nmodule up on PyPI? Wait, what is Warehouse?\n\nThis talk will identify the key tools one might encounter when trying to\ndistribute Python software, what they are used for, why they exist, and\ntheir history (including where their weird names come from). In addition,\nwe\u2019ll see how they all work together, what it takes to make them work, and\nwhat the future has in store for Python packaging.\n\n## Who and Why\n\nThis talk is for any Pythonista that has been confused by Python Packaging\n(read: everyone).\n\nThis talk requires that the audience has just the slightest familiarity with\nhow Python Packaging works \u2013 that you need to upload your source code, that\nthere are a few popular and familiar tools, and that they are all a little\nconfusing. Attendees do not need to be publishers of Python Packages but\nlikely will be people interested in publishing someday.\n\nAfter watching this talk, attendees should have a significant amount of\ntheir confusion about the Python packaging ecosystem resolved, and should be\nable to make informed, reasonable decisions when they want to publish a\npackage (without having to be told step by step instructions, or given\nextremely opinionated advice).",
  "duration": 1500,
  "language": "eng",
  "recorded": "2018-10-06",
  "related_urls": [
    "https://2018.pygotham.org/talks/inside-the-cheeseshop-how-python-packaging-works/"
  ],
  "speakers": [
    "Dustin Ingram"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/m7J1IAaNHQ8/maxresdefault.jpg",
  "title": "Inside the Cheeseshop: How Python Packaging Works",
  "videos": [
    {
      "type": "youtube",
      "url": "https://youtu.be/m7J1IAaNHQ8"
    }
  ]
}
