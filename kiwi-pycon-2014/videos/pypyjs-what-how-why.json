{
  "alias": "video/3218/pypyjs-what-how-why",
  "category": "Kiwi PyCon 2014",
  "copyright_text": "CC",
  "description": "**Audience level**\n\nIntermediate\n\n**Description**\n\nPyPy.js is an experiment in building a fast and compliant in-browser\npython interpreter, by compiling PyPy into javascript and retargeting\nits JIT to emit asmjs code at runtime. This talk will demonstrate the\ncombination of technologies that make such a thing possible, the results\nachieved so far, and the challenges that still remain when taking python\nonto javascript's home turf.\n\n**Abstract**\n\nPyPy.js is an experiment in building a fast, compliant, in-browser\npython interpreter. By compiling the PyPy interpreter into javascript,\nand retargeting its JIT compiler to emit asmjs code at runtime, it is\npossible to run python code in the browser at speeds competitive with a\nnative python environment. This talk will demonstrate the combination of\ntechnologies that make such a thing possible, the results that have been\nachieved so far, and the challenges that still remain when trying to\ntake python onto javascript's home turf.\n\nWe'll cover: an overview of PyPy and why it's a good fit for this type\nof project; an introduction to asmjs and the rise of javascript as a\ncompile target; what it looks like when you smoosh these two\ntechnologies together; a comparison with other approaches such as\nbrython; and some concrete suggestions for how the result might be\nuseful in practice.\n\n**Slides**\n\nhttps://speakerdeck.com/nzpug/ryan-kelly-pypy-dot-js-what-how-why\n",
  "duration": 1800,
  "id": 3218,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-09-14",
  "related_urls": [
    "https://speakerdeck.com/nzpug/ryan-kelly-pypy-dot-js-what-how-why"
  ],
  "slug": "pypyjs-what-how-why",
  "speakers": [
    "Ryan Kelly"
  ],
  "summary": "",
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/pt-e-X_q-dk/hqdefault.jpg",
  "title": "PyPy.js: What? How? Why?",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtu.be/pt-e-X_q-dk"
    }
  ]
}
