{
  "copyright_text": "This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n",
  "description": "Build GraphQL schema, queries, and mutations in Django using graphene library\n\nGraphQL technology has become popular nowadays. While developing REST APIs, there are many things that developers need to take into consideration. There are multiple endpoints and over-fetching is the main problem of REST. GraphQL offers a unique approach and architecture for developing APIs. How is that efficient?\r\n\r\nWhile using GraphQL, a client can request the data which is needed. It is an alternative for building APIs in place of REST. It\u2019s a query language that can work as a medium between the frontend and backend. \r\n\r\nThe journey to develop GraphQL APIs in python needs some requirements and knowledge. We will be building APIs in the Django framework using a graphene library which includes many features of GraphQL such as ObjectTypes, Queries, Mutations, etc. We will start by understanding these concepts followed by some code. This includes detailed information about the Query class, what are resolvers, and where to write business logic, how pagination can be incorporated with queries would be included. Also, it will include the information about the Mutation class, arguments needed for mutation, and what type of response can be returned on successful operations. \r\n\r\nLearning outcomes would be the understanding of code and building GraphQL APIs using graphene in a proper and structured way.",
  "duration": 1933.0,
  "language": "eng",
  "recorded": "2020-07-23",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2020.europython.eu/schedule/"
    },
    {
      "label": "Conference Website",
      "url": "https://ep2020.europython.eu/"
    },
    {
      "label": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/"
    },
    {
      "label": "https://ep2020.europython.eu/events/speaker-release-agreement/",
      "url": "https://ep2020.europython.eu/events/speaker-release-agreement/"
    },
    {
      "label": "Talk URL",
      "url": "https://ep2020.europython.eu/schedule/23-july?selected=9jDYNVR-developing-graphql-api-in-django-using-graphene"
    },
    {
      "label": "Slides",
      "url": "/media/conference/slides/9jDYNVR-developing-graphql-api-in-django-using-graphene.pdf"
    }
  ],
  "speakers": [
    "Nisarg Shah"
  ],
  "tags": [
    "europython",
    "europython-2020",
    "europython-online",
    "APIs",
    "Databases",
    "Django",
    "PostgreSQL",
    "Python 3"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/voR_YknH6uo/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLC4h1l8pR_sVPTZVXxJwli_p7LMPQ",
  "title": "Developing GraphQL API in Django using Graphene",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=voR_YknH6uo"
    }
  ]
}
