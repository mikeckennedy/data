{
  "alias": "video/1962/accessing-the-virtual-observatory-from-python-sc",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 1962,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-02",
  "slug": "accessing-the-virtual-observatory-from-python-sc",
  "speakers": [],
  "summary": "Authors: Plante, Raymond, NCSA/UofIL; Fitzpatrick, Mike, NOAO; Graham,\nMatthew, Caltech; Tody, Doug, NRAO\n\nTrack: Astronomy and Astrophysics\n\nOne of the goals of the Virtual Astronomical Observatory (VAO) project\nis to enable developers to integrate access to astronomical archives and\nservices into applications through standardized interfaces. As part of\nthis effort, we have developed two packages for accessing the Virtual\nObservatory through Python. The first tool, VAOpy, is a package built on\nAstroPy which provides enables discovery of data archive services\nthrough the VAO registry service as well as the searching of the\narchives for individual datasets such as images, spectra, and source\ncatalogs. The purpose of this module is to provide the developer an easy\nto use interface that reflects knowledge of the standards upon which\nservices are based. The second tool, VOClient, supports the same\nlow-level API provided by VAOpy but adds additional higher-level\ncapabilities and \"book-keeping\" that make it easier to develop\nsophisticated applications. This includes support for searching multiple\narchives, finding data for a list of sources, and collaborating with\nother desktop tools. Long running tasks are supported through\nasynchronous access to the underlying services and data caching.\nVOClient can send retrieved data records and datasets to other\napplications on the desktop through VO standard protocol known as SAMP.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/gm7p5ztkOZs/hqdefault.jpg",
  "title": "Accessing the Virtual Observatory from Python; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=gm7p5ztkOZs"
    }
  ]
}
