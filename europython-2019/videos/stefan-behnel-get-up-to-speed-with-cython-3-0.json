{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Processing lots of data, in need of more speed, or struggling to make\nuse of native code? The Cython compiler for Python solves all of these\nproblems in a pythonic way, by compiling Python code to optimised C\ncode.\n\nCython [1] has a very long history of faithfully helping users to solve\ntheir Python performance problems and integrating native code into\nPython in production critical settings, while stimulating somewhat less\nconfidence with its 0.x versioning scheme. For the next Cython version,\na stable 3.0 release, we are planning to clean up several historically\ngrown issues in the language to make the Cython compiler more friendly\nfor modern Python users to work with.\n\nIn this talk, I will show how Cython can be used for compiling and\nspeeding up Python code, using fast native data structures and\nlibraries. I will then give an overview of the changes that are on their\nway for the 3.0 release and how they will affect the user experience.\n\n[1] https://cython.org",
  "duration": 2789,
  "language": "eng",
  "recorded": "2019-07-11",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2019.europython.eu/schedule/"
    },
    {
      "label": "slides",
      "url": "https://ep2019.europython.eu/media/conference/slides/hNddSQJ-get-up-to-speed-with-cython-30.pdf"
    }
  ],
  "speakers": [
    "Stefan Behnel"
  ],
  "tags": [
    "C-Languages",
    "Compiler and Interpreters",
    "Cython",
    "Performance",
    "Programming"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/lxh4lsvEBhI/maxresdefault.jpg",
  "title": "Get up to speed with Cython 3.0",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=lxh4lsvEBhI"
    }
  ]
}
