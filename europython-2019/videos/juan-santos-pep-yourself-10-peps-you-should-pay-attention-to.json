{
  "description": "Reading standards documents can be a dull task. But like in other\nfields, standards in Python play a big part. Python Enhancement\nProposals (PEPs) are defined, improved, and eventually implemented by\nthe community. They apply to mostly anything related to Python, from the\nmore abstract and general to the more concrete and specific. Paying\nattention to them, and knowing which ones to read beforehand is a vital\ntask that should take place prior to writing the first lines of code in\na project.\n\nIn this talk we will go over a condensed list of the most important PEPs\nto this date and see how they influence everyday coding. From style\nguides and docstring conventions to data classes and assignment\nexpressions, we will see how these PEPs affect (or can affect) the code\nwe write, and how can we use them to improve our code and make\ndeveloping easier and more fun.\n\nAfter this talk, attendees will have a better grasp on why PEPs are\nimportant to Python, which are a must read, and which ones they should\nuse as a guide in the future, both for coding and refactoring.",
  "recorded": "2019-07-12",
  "related_urls": [
    {
      "label": "slides",
      "url": "https://ep2019.europython.eu/media/conference/slides/LEhyYaK-pep-yourself-10-peps-you-should-pay-attention-to.pdf"
    }
  ],
  "speakers": [
    "Juan Santos"
  ],
  "tags": [
    "Clean Code",
    "Python Skills",
    "Python general"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/yRVnTrp9dcY/hqdefault.jpg",
  "title": "PEP yourself: 10 PEPs you should pay attention to",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=yRVnTrp9dcY"
    }
  ]
}
