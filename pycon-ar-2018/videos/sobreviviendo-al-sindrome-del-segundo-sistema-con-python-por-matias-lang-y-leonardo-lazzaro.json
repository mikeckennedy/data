{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Reescribir una gran parte de un proyecto para saldar una deuda t\u00e9cnica puede ser un trabajo muy cansador y arriesgado, que muchas veces puede terminar en la nada. Vamos a contar los aciertos y errores que experimentamos haciendo un cambio de este tipo en nuestro proyecto de software libre. En particular, c\u00f3mo nos movimos de una base de datos NoSQL a una SQL, desarrollamos un framework propio para APIs RESTful e hicimos uso intensivo de unit tests.\n\nFaraday es un proyecto open source que originalmente usaba CouchDB con una gran cantidad de usuarios. A lo largo del tiempo la aplicacion se hizo cada vez mas dificil mantener y CouchDB estaba pronto a deprecar la version que utilizabamos. En esta charla te contamos como encaramos y que herramientas de ingenier\u00eda utilizamos para sobrevivir a un viaje que parecia no terminar nunca. Tambien contaremos cuando conviene utilizar una base de datos relacional y cuando una NoSQL. Mostraremos como hicimos una API Rest al estilo DjangoRestful framework usando Flask (codigo en https://github.com/infobyte/faraday).\n",
  "language": "spa",
  "recorded": "2018-11-24",
  "speakers": [
    "Matias Lang",
    "Leonardo Lazzaro"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/gPuqrHuRD0U/hqdefault.jpg",
  "title": "Sobreviviendo al s\u00edndrome del segundo sistema con Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=gPuqrHuRD0U"
    }
  ]
}
