{
  "alias": "video/2132/pyop2-a-framework-for-performance-portable-unstr-1",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2132,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-01",
  "slug": "pyop2-a-framework-for-performance-portable-unstr-1",
  "speakers": [],
  "summary": "Authors: Rathgeber, Florian, Imperial College London, UK; Markall,\nGraham R., Imperial College London, UK; Mi\n\nTrack: General\n\nWe present PyOP2, a high-level domain-specific language embedded in\nPython for mesh-based simulation codes. Through a simple interface,\nnumerical kernels are efficiently scheduled and executed over\nunstructured meshes in parallel. Without any code changes required, an\napplication can run on a range of hardware platforms, while\nimplementation details of the parallel execution are abstracted from the\nprogrammer. Performance portability is achieved by generating optimized\nlow-level OpenMP, MPI, CUDA or OpenCL code for multi-core CPUs or GPUs\nat runtime and just-in-time compiling the generated code.\n\nPyOP2 is suitable as an intermediate representation for scientific\ncomputations, which we demonstrate with a finite-element tool chain\nusing the domain-specific Unified Form Language UFL and the form\ncompiler FFC from the FEniCS project. Finite-element methods are widely\nused to approximately solve partial differential equations on\nunstructured domains. The local assembly operation executes the same\nkernel for every entity of the mesh and is therefore a natural fit for\nthe PyOP2 computation model. We show how these kernels are generated\nautomatically from the weak form of an equation given in UFL. Global\nassembly and linear solves are passed through to platform-specific\nlinear algebra backends integrated into PyOP2 through a modular\ninterface. Using this tool chain, scientists can drive finite-element\ncomputations from an input notation very close to the mathematical model\nand transparently benefit from performance-portable parallel execution\non their hardware architecture of choice without requiring specialist\nknowledge in numerical analysis or parallel programming.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/W0u4vW_eJc4/hqdefault.jpg",
  "title": "PyOP2: a Framework for Performance-Portable Unstructured Mesh-based Simulations, SciPy 2013",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=W0u4vW_eJc4"
    }
  ]
}
