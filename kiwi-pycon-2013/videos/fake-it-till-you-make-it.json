{
  "alias": "video/2439/fake-it-till-you-make-it",
  "category": "Kiwi PyCon 2013",
  "copyright_text": "",
  "description": "@ Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1\n\n**Audience level**\n\nIntermediate\n\n**Abstract**\n\nIn practise most of us have found testing to be much harder to achieve\nin the \"real world\". That is often because the application architecture\nis modular with some level of service abstraction, and the ensuing\nlayers of code.\n\nThe premise of this talk is: do not test someone else's code. They are a\ngood developer. They would have tested it so it must work.\n\nTaking this perspective allows us to develop fast and compact unit tests\nfor our application functionality while ignoring bigger picture\nintegration issues (these can be addresses using other types of tests!).\nIn our experience this unburdens developers so they can really practice\ntest-driven development much more diligently.\n\nImplementation of this approach is simplified thanks to the mock\nlibrary. Mock provides a core MagicMock class that obviates the need for\ncustom stubs throughout the code. Moreover, its supports patching\nspecific methods, properties, and more. Mocking is used to patch calls\nto external code within our unit tests, since we don't need to test\nthem, in a non-non-invasive way to our application.\n\n**Slides**\n\nhttps://speakerdeck.com/nzpug/ravi-chandra-fake-it-till-you-make-it\n",
  "duration": null,
  "id": 2439,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-09-14",
  "related_urls": [
    "https://speakerdeck.com/nzpug/ravi-chandra-fake-it-till-you-make-it"
  ],
  "slug": "fake-it-till-you-make-it",
  "speakers": [
    "Ravi Chandra"
  ],
  "summary": "A practical introduction to unit testing decoupled, service-oriented,\nPython applications using with Mock library. A three-tiered (server,\nclient, and view) Flask web application is used as a motivating example\nacross the talk. Mock helps to isolate functionality specific to a layer\nto facilitate fast, compact, unit testing while avoiding writing\nspecific mock classes or using fixtures.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/HbJZu2qcC-s/hqdefault.jpg",
  "title": "Fake it till you make it",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=HbJZu2qcC-s"
    }
  ]
}
