{
  "copyright_text": "Standard YouTube License",
  "description": "One often encounters the following situation(s):\n\n- I want to represent my data,\n- I want to read/write, load/dump or somehow get/save data,\n- I want to iterate over data.\n\nInstead of inventing a completely new class that provides required functionality, it may make sense to mimic or subclass an already existing collection, e.g. a dict, add custom dunder (double underscore) methods and quickly end up with a container that not only serves your purpose but is also very natural to use.\n\nAfter a short introduction in which we clarify some notions, we focus on two sample use cases:\n\n- How to extend a tuple to represent data?\n- How to implement a dict-like container for data handling?\n\nThroughout the talk we will discover some of the most often needed dunder methods that define a container's behaviour.",
  "duration": 1423,
  "language": "eng",
  "recorded": "2017-10-26T14:30:00+01:00",
  "related_urls": [
    {
      "label": "event schedule",
      "url": "http://2017.pyconuk.org/schedule/"
    },
    {
      "label": "talk slides",
      "url": "https://github.com/caichinger/slides/blob/master/2017-10-26__PyCon_UK/CustomCollections.ipynb"
    }
  ],
  "speakers": [
    "Claus"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/OrbwNQeBFeQ/hqdefault.jpg",
  "title": "Implementing Custom Containers",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OrbwNQeBFeQ"
    }
  ]
}
