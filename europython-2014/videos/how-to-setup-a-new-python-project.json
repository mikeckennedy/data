{
  "alias": "video/2992/how-to-setup-a-new-python-project",
  "category": "EuroPython 2014",
  "copyright_text": "http://creativecommons.org/licenses/by/3.0/",
  "description": "Whenever a Python beginner starts with its own project he or she is\nconfronted with the same technical questions. Questions about a well\nthought out directory structure to hold all the files. How setup.py\nneeds to be configured and even what it is capable of like specifying\nentry\\_points and other goodies. We show from the experience of our\nyearslong work with Python how to structure your Python project in terms\nof folders, files, modules and packages. How to configure setup.py to\nspecify your requirements, to use it with nosetests, with Sphinx and so\non. We also elaborate on the usage of Git and Versioneer\n(https://github.com/warner/python-versioneer) to help you version your\npackage.\n",
  "duration": null,
  "id": 2992,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-23",
  "related_urls": [
    "https://github.com/warner/python-versioneer)"
  ],
  "slug": "how-to-setup-a-new-python-project",
  "speakers": [
    "Felix Wick"
  ],
  "summary": "Setting up a new Python project from scratch can be quite hard. How to\nstructure your files and directories. Where should my packages, modules,\ndocumentation and unit tests go? How do I configure setup.py, Sphinx and\nso on? We provide proven answers!\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/GeYis4ZuluY/hqdefault.jpg",
  "title": "How to Setup a new Python Project",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=GeYis4ZuluY"
    }
  ]
}
