{
  "copyright_text": null,
  "description": "Objects and classes are part of Python since version 1 -- not an\nafterthought. But all languages implement and support OOP in different\nways. \"Classic\" patterns that make sense elsewhere may not be as useful\nin Python, and Python provides unique solutions to some familiar\nproblems.\n\nThis tutorial is about modern, idiomatic OOP in Python 3.7. Most of the\ndiscussion will be relevant to previous versions all the way to Python\n2.7, but newer features will be highlighted.\n",
  "duration": 12135,
  "language": "eng",
  "recorded": "2019-05-01T09:00:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/76/"
    }
  ],
  "speakers": [
    "Luciano Ramalho"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/mUu_4k6a5-I/maxresdefault.jpg",
  "title": "Pythonic Objects: idiomatic OOP in Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=mUu_4k6a5-I"
    }
  ]
}
