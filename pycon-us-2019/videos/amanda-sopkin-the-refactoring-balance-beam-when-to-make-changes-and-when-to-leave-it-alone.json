{
  "copyright_text": null,
  "description": "Many developers struggle to find the balance between striving to improve\nexisting code and letting good enough alone by accepting certain\nshortcomings. As a new developer to a team it can be difficult to\nunderstand existing strategies and patterns that are sometimes flat out\nbad (and often openly acknowledged as such). Often the result of tight\ndeadlines or unclear specifications, even the best developers write code\nthey later look back upon with shudders. So how do we decide when\nrefactoring is worth it? Come learn strategies for refactoring with\nminimal impact, methods for working with bad code you can\u2019t change, and\nstrategies for knowing the difference between what is fixable and what\nis better left alone.\n",
  "duration": 1703,
  "language": "eng",
  "recorded": "2019-05-05T13:50:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/213/"
    }
  ],
  "speakers": [
    "Amanda Sopkin"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/sze4yunoxU0/maxresdefault.jpg",
  "title": "The Refactoring Balance Beam: When to Make Changes and When to Leave it Alone",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=sze4yunoxU0"
    }
  ]
}
