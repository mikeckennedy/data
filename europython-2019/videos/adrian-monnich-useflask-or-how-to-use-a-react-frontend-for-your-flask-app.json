{
  "description": "Many Flask projects nowadays still use mostly static HTML, WTForms and\njust a bit of AJAX. All the JavaScript is usually included straight from\n.js files or just minified with Python tools like webassets.\n\nBut the JavaScript ecosystem has evolved a lot - one can now use tools\nlike Babel to write modern JS even when targeting older browsers and a\nWebpack+Babel build is very straightforward and allows for advanced\npreprocessing of JavaScript code.\n\nIn this talk we'll even go one step further and not only use Webpack to\nbuild the assets, but also integrate a small demo Flask app with a React\nfrontend where the Flask app only serves the static HTML page and uses a\nRESTful API to communicate with the React app.\n\nWe'll also look into how to keep convenient Flask features such as URL\nbuilding in client-side code (using the js-flask-urls package) and of\ncourse React hooks will be used!",
  "language": "eng",
  "recorded": "2019-07-12",
  "related_urls": [
    {
      "label": "slides",
      "url": "https://ep2019.europython.eu/media/conference/slides/45EWZZz-useflask-or-how-to-use-a-react-frontend-for-your-flask-app.pdf"
    }
  ],
  "speakers": [
    "Adrian M\u00f6nnich"
  ],
  "tags": [
    "JavaScript Web Frameworks",
    "Web Servers and MicroFWs"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/r0_n9d9x97Y/hqdefault.jpg",
  "title": "useFlask() - or how to use a React frontend for your Flask app",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=r0_n9d9x97Y"
    }
  ]
}
