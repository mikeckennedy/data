{
  "description": "This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.\n\nDescription\nIn 2017, CPython codebase was moved to GitHub from Mercurial, an effort that took more than three years of planning and lots of volunteer coordination. The move proved to be successful and well-appreciated. New contributors face less barriers when contributing to Python. Core developers are benefiting from personal assistants in the form of GitHub bots and automations. Can the workflow be even better? In this talk, we'll look into other problems in CPython's workflow: the issue tracker itself.\n\nThe acceptance of PEP 581, by Python steering council means that another big workflow change is impending. Let's hear about some of the proposed plans on improving CPython's workflow, and learn how you can help and take part in this process.\n\nAbstract\nOutline\n\nBrief introduction to core Python workflow. It's complicated. (5 minutes)\nThe issue tracker is called bpo (an instance of Roundup) https://bugs.python.org\nCodebase and pull requests are done in GitHub: github.com/python/cpython\nContributing guide: devguide.python.org\nCPython discussions aren't normally not on GitHub, but on mailing list (python-dev, core-mentorship) and discourse discuss.python.org\n\nGitHub is a new thing for Python (3 minutes)\n\nPEP 512: Migrating source code from Mercurial to GitHub\nSome pain points: core devs and Python release managers have to learn and adjust to a workflow. (it was not an overnight success)\nOn the good side: it opens up oppurtunities to contribute to core workflow improvements, and still making big impact: devguide improvements, bots(bedevere, and miss-islington), toolings like blurb and cherry-picker. Contributing to Python is easier on GitHub.\n\nShould I stay or should I go? (3 minutes)\n\nbpo works, but it is not up to date with recent advancements: no emoji support, unintuitive UI, not mobile-friendly.\nbpo's development is hindered and stagnated.\nwe're losing potential contributors just because the tracker is bpo.\nlack of existing API from bpo making it hard to automate things.\n\nLet's Use GitHub Issues already! (7 minutes)\n\nIt is not as simple as \"just copy over a bunch of tickets to GitHub\"\nSome of us fear the uncertainties: GitHub is not open source, corporation owned, it could one day disappear without notice?\nWhat we're already doing: daily backup of GitHub data. starting to use CLA Assistant. We've asked GitHub to grant us early access to the \"issue triage\".\n\nWhat we still need help with (7 minutes) -- A professional project manager, similar to how PyPI/Warehouse project was handled. Steering council has opened this discussion with The PSF. -- We will have a \"trial\" issue tracker repo. We need to port 100s of tickets from bpo to GitHub. We need experiments and feedback. -- You can help update Devguide on how to use GitHub issue tracker and how to triage/add labels etc. -- We need more people to help triage issues. We've been able to grant bug triage permission more easily than granting commit privilege. Hear Emily's talk on being a core developer. -- If you have other ideas of improvements: write to python-dev, Use PEP 581 or PEP 588 in subject (to get my attention) -- Donate to The PSF. You can now donate directly for CPython's development: https://www.python.org/psf/donations/python-dev/\n\nOriginal slides: https://t.ly/gLZ9W\n\nSponsor Acknowledgement\nThis and other PyBay2019 videos are via the help of our media partner AlphaVoice (https://www.alphavoice.io/)!\n\n#pybay #pybay2019 #python #python3",
  "language": "eng",
  "recorded": "2019-08-17",
  "speakers": [
    "Mariatta"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/6TxDyDPSZzs/hqdefault.jpg",
  "title": "PEP 581 and PEP 588: Migrating CPython's Issue Tracker",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=6TxDyDPSZzs"
    }
  ]
}
