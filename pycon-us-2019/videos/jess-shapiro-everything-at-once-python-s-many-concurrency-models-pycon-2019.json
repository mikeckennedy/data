{
  "copyright_text": null,
  "description": "Python makes it incredibly easy to build programs that do what you want.\nBut what happens when you want to do what you want, but with more input?\nOne of the easiest things to do is to make a program concurrent so that\nyou can get more performance on large data sets. But what's involved\nwith that?\n\nRight now, there are any number of ways to do this, and that can be\nconfusing! How does ``asyncio`` work? What's the difference between a\nthread and a process? And what's this Hadoop thing everyone keeps\ntalking about?\n\nIn this talk, we'll cover some broad ground of what the different\nconcurrency models available to you as a Python developer are, the\ntradeoffs and advantages of each, and explain how you can select the\nright one for your purpose.\n",
  "duration": 1544,
  "language": "eng",
  "recorded": "2019-05-03T14:35:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/222/"
    }
  ],
  "speakers": [
    "Jess Shapiro"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/w2nKIGhXPAM/maxresdefault.jpg",
  "title": "Everything at Once: Python's Many Concurrency Models",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=w2nKIGhXPAM"
    }
  ]
}
