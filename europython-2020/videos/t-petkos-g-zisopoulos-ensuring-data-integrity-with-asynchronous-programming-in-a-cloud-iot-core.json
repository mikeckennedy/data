{
  "copyright_text": "This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n",
  "description": "Python3.6, AsyncIO, Flask, RabbitMQ. A simple and powerful combination for IoT data integrity.\n\nUndoubtedly this will be the decade of low-cost and high-performance cloud IoT core development.\r\nAll cloud IoT solutions will have to meet the same two fundamental requirements: Performance and Data Integrity. Having said that,  AsyncIO comes to mind.\r\nWhile researching similar topics on cloud IoT solutions, we noticed that the vast majority of such solutions primarily includes performance. In this discussion we would like to demonstrate how you can ensure that a low-cost, fast developed cloud IoT core can ensure that its data is not corrupted and is accurate  for the user.\r\nTechnically speaking, it is very interesting to analyze how a bucket of async/await tasks can handle (consume or even produce) messages from or to message queues, interact with other (even non pythonic) modules inside the core, manage socket connections and many other functionalities that make Python3.6+ the heart of any IoT core. Note that it is equally important to check imported data with periodic tasks, acquire statistics from devices and sanitize database data in order to ensure data integrity.\r\nOur goal: Firstly, to encourage new developers to get involved with cloud IoT cores and use Python and AsyncIO as the heart of their core. Secondly, as new developers we would like to show our logic and our prefered python libraries and techniques in order to receive feedback from more experienced developers.\r\nWe are a team of software engineers located in Athens, Greece working for a fast growing startup in San Francisco (https://www.veturilo.io). We have developed our own cloud IoT core for a vehicle fleet management SaaS.",
  "duration": 1601.0,
  "language": "eng",
  "recorded": "2020-07-23",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2020.europython.eu/schedule/"
    },
    {
      "label": "Conference Website",
      "url": "https://ep2020.europython.eu/"
    },
    {
      "label": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/"
    },
    {
      "label": "https://www.veturilo.io",
      "url": "https://www.veturilo.io"
    },
    {
      "label": "https://ep2020.europython.eu/events/speaker-release-agreement/",
      "url": "https://ep2020.europython.eu/events/speaker-release-agreement/"
    },
    {
      "label": "Talk URL",
      "url": "https://ep2020.europython.eu/schedule/24-july?selected=8CTSrw6-ensuring-data-integrity-with-asynchronous-programming-in-a-cloud-iot-core"
    },
    {
      "label": "Slides",
      "url": "/media/conference/slides/8CTSrw6-ensuring-data-integrity-with-asynchronous-programming-in-a-clo_LoymoG2.pdf"
    }
  ],
  "speakers": [
    "Theofanis Petkos",
    "George Zisopoulos"
  ],
  "tags": [
    "europython",
    "europython-2020",
    "europython-online",
    "ASYNC / Concurreny",
    "Internet of Things (IoT)",
    "Python 3",
    "Software Design",
    "Use Case"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/NuBTiOwMv6o/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLA8GF-IMeXFGPHLMyK85u1C1cnGJw",
  "title": "Ensuring data integrity with asynchronous programming in a cloud IoT core",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=NuBTiOwMv6o"
    }
  ]
}
