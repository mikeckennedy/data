{
  "description": "Lazy evaluation, also known as \"call by need\", is an evaluation strategy\nwhere values are produced only when needed. Lazy evaluation is the\nopposite of eager evaluation, Python's normal evaluation model, where\nfunctions are executed as seen and values are produced immediately.\n\nIn this talk we will define lazy evaluation and contrast it with eager\nevaluation. We will discuss tools that exist in Python for using lazy\nevaluation and show how we can build on the primitives to better\nrepresent computations. We will introduce common vocabulary for\ndiscussing evaluation models, and compare different systems for\nimplementing lazy evaluation. Finally, we will discuss optimizations\nthat can be made to optimize lazily evaluated expressions.\n",
  "duration": 1898,
  "recorded": "2017-05-19",
  "speakers": [
    "Joe Jevnik"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/7SH3zWHdGoc/hqdefault.jpg",
  "title": "Title Available On Request: An Introduction to Lazy Evaluation",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=7SH3zWHdGoc"
    }
  ]
}
