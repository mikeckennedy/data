{
  "description": "The Python language\u2019s memory model can be deduced from first principles: simply take modern C++ conventions and drive their safety and generality to infinity. But this limiting case generates its own compromises and opens its own categories of possible runtime errors. We will explore the position Python has staked out in the language design space of correctness versus performance, the choices Python programmers make when they need to move closer to C++, and the ways that the C++ community keeps adopting conventions that look suspiciously like Python.",
  "duration": 3701,
  "language": "eng",
  "recorded": "2018-11-07",
  "speakers": [
    "Brandon Rhodes"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/9ZxtaccqyWA/hqdefault.jpg",
  "title": "Python as C++\u2019s limiting case",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=9ZxtaccqyWA"
    }
  ]
}
