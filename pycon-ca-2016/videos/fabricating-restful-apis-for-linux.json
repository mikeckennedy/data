{
  "description": "Designing a HTTP-RESTful-API-based infrastructure provisioning system is\nchallenging. Concurrent users, race conditions, erroneous OS responses,\nquota mechanisms etc. need to be wrapped up under a consistent and\nresponsive CRUD interface. The talk is about a few design patterns and\nabout the \"lessons learnt\" in building/operating/iterating a large scale\nAPI-driven infra- provisioning system.\n\nSachin Agarwal Bio\n------------------\n\nIn Brief\n~~~~~~~~\n\nPython hacker with a day job in the infra/platform cloud space: devops\nautomation, monitoring, capacity planning, data mining logs,\nvirtualization/LXC-docker containerization, software-defined-\\*\n(networking/storage/compute).\n\nFormal Stuff\n~~~~~~~~~~~~\n\nCurrent\n^^^^^^^\n\nI work as an engineering manager for a infrastructure/platform software\ndevelopment team at TD @ Waterloo. Shameless plug - I am hiring Python\ndevelopers, especially those with infra/cloud/config management/devops\nexperience - in Waterloo.\n\nPrevious\n^^^^^^^^\n\n-  Storage architect at blackberry - developer of a large scale\n   software-defined-storage all-flash system: Backend for 1000+ node\n   Cassandra cluster(s).\n-  Researcher at NEC Labs (Heidelberg, Germany) and Deutsche Telekom\n   Labs (Berlin, Germany), PhD - Boston University.\n",
  "duration": 1597,
  "language": "eng",
  "recorded": "2016-11-12",
  "speakers": [
    "Sachin Agarwal"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/3GNnVSTtl-o/maxresdefault.jpg",
  "title": "\u201cFabric\u201dating RESTful APIs for Linux",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=3GNnVSTtl-o"
    }
  ]
}
