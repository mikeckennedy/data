{
  "alias": "video/1219/domain-specific-languages-for-partial-differentia",
  "category": "SciPy 2012",
  "copyright_text": "CC BY-SA",
  "description": "As scientific computing pushes towards extreme scales, the programming\nwall is becoming more apparent. For algorithms to scale on new\narchitectures, they often must be rewritten accounting for completely\ndifferent performance characteristics. A handful of the communities\nfastest codes have already turned to automatic code generation to tackle\nthese issues. Code generation gives a user the ability to use the\nexpressiveness of a domain specific language and promises for better\nportability as architectures rapidly change.\n\nIn this presentation, I will show Ignition, a project for creating\nnumerical code generators. Python and SymPy make exceptional languages\nfor developing these code generators in a way that domain experts can\nunderstand and manipulate. I show examples how Ignition can generate\nseveral different parts of geophysical simulations.\n",
  "duration": null,
  "id": 1219,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2012-07-18",
  "slug": "domain-specific-languages-for-partial-differentia",
  "speakers": [
    "Andy Terrel"
  ],
  "summary": "",
  "tags": [
    "Geophysics Mini-Symposia"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/Dpc-bGwyJmk/hqdefault.jpg",
  "title": "Domain Specific Languages for Partial Differential Equations using Ignition",
  "videos": [
    {
      "type": "mp4",
      "url": "http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/Domain_Specific_Languages_for_Partial_Differential_Equations_using_Ignition.mp4?Signature=wUghS1%2BLg%2FG7V4eI0CClg6aLnCc%3D&Expires=1346382037&AWSAccessKeyId=FEWGReWX3QbNk0h3"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtube.com/watch?v=Dpc-bGwyJmk"
    }
  ]
}
