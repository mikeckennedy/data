{
  "alias": "video/1381/cryptography-for-django-applications",
  "category": "DjangoCon 2012",
  "copyright_text": "Creative Commons Attribution license (reuse allowed",
  "description": "Introduction\n============\n\nThe web is a hostile place, and isn't showing any signs of becoming less\nso. In order to mitigate this, many developers turn to cryptography.\nUnfortunately, cryptography can be complicated, and is easily\ncircumvented if not properly handled. This presentation will provide an\nintroduction to cryptographic tools available to Python/Django\napplications, appropriate use cases for each, proper usage, and\noperational concerns necessary to operate in a certified environment.\nFinally, we will also demonstrate a reusable application that wraps this\nall up, providing secure key-management capabilities to a running Django\nenvironment via the Django admin.\n\nWhy Encrypt?\n============\n\nRules of Encryption\n===================\n\n-  Don't do it if you don't need it.\n-  Don't write your own.\n-  Understand what you're doing if you do.\n\nWhen to encrypt?\n================\n\nUnderstand what you're protecting\n---------------------------------\n\n-  Data\n-  User records\n-  Code\n-  Systems\n\nUnderstand your attack vectors\n------------------------------\n\n-  Data (backups, revision control)\n-  Systems\n-  Application\n-  Transport\n-  Client\n\nUnderstand the types of encryption you might use:\n-------------------------------------------------\n\n-  Hashing\n\nPasswords are a special case. Use a key derivation function\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  PBKDF2 \u2013 Upgrade to Django 1.4!\n\nHashing Algorithms\n~~~~~~~~~~~~~~~~~~\n\n-  MD5 - fine as a checksum. not fine as a cryptographic hash.\n-  SHA1 - fine as a checksum. becoming less fine as a cryptographic hash\n   every day\n-  SHA2 - so far so good. use as many bits as you can handle.\n\nSymmetric Encryption\n--------------------\n\n-  Fast\n-  Reversible\n\nAlgorithms (Symmetric)\n~~~~~~~~~~~~~~~~~~~~~~\n\n-  Caesar Cipher (for fun puzzles)\n-  DES (don't use)\n-  AES (certified)\n-  Blowfish\n\nAsymmetric Encryption\n---------------------\n\n-  Slow\n-  One-way\n\nAlgorithms (Asymmetric)\n~~~~~~~~~~~~~~~~~~~~~~~\n\n-  RSA\n-  DSA\n\nUses\n^^^^\n\nSigning\n'''''''\n\nWeb of Trust\n            \n\n-  PGP\n\nPKI\n   \n\nEncryption\n''''''''''\n\n-  PGP\n-  SSL\n-  TLS\n\nDoing it right\n==============\n\nUse known-good algorithms\n-------------------------\n\n-  AES-256\n-  SHA2\n-  RSA\n-  DSA\n\nUse known-good implementations\n------------------------------\n\n-  Open Source is good\n\nExtra Credit\n------------\n\n-  FIPS 140 certified implementations\n-  FIPS 140 / NIST configurations\n\nTransport (always use HTTPS)\n----------------------------\n\n-  Use good algorithms AES-256\n\nAt Rest (insecure servers or backups)\n-------------------------------------\n\n-  Understand the ramifications of key management\n\nExamples\n========\n\nHashing\n-------\n\n-  Use a key-derivation function\n\nDon't be linked-in\n~~~~~~~~~~~~~~~~~~\n\n-  Salt your hashes (with a secret).\n-  Salt and pepper your hashes if possible (with a known unique value)\n\nSSL\n---\n\n-  Forced connections\n-  Making the application aware\n-  Hardened cipher selection\n\nRobust PKI\n~~~~~~~~~~\n\n-  Client authentication\n-  SSL Test Page\n\nAsymmetric Encryption.\n----------------------\n\nKey Management\n~~~~~~~~~~~~~~\n\n-  Using GPG Agent\n-  GPG Manager App\n\nPGP Files\n~~~~~~~~~\n\nSymmetric Encryption.\n---------------------\n\nKey Management.\n~~~~~~~~~~~~~~~\n\n-  Use Asymmetric Encryption\n\nUse a unique Initialization Vector if possible\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  LoopBack Devices\n\n",
  "duration": null,
  "id": 1381,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2012-09-05",
  "slug": "cryptography-for-django-applications",
  "speakers": [
    "Erik Labianca"
  ],
  "summary": "A review of encryption in the context of a web application storing\nsensitive information. Topics covered include choosing whether to use\ncrypto, selection of tools, proper usage (including examples), and\noperational considerations with respect to security assessment.\n",
  "tags": [
    "cryptography",
    "django"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/pWCAADXd-DI/hqdefault.jpg",
  "title": "Cryptography for Django Applications",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=pWCAADXd-DI"
    }
  ]
}
