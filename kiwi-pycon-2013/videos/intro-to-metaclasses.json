{
  "alias": "video/2445/intro-to-metaclasses",
  "category": "Kiwi PyCon 2013",
  "copyright_text": "",
  "description": "@ Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2\n\n**Audience level**\n\nIntermediate\n\n**Abstract**\n\nPython's Metaclasses are an \"advanced\" technique, but once you get\nstarted they're surprisingly approachable.\n\nStarting with the basics, we'll:\n\n-  figure out what a metaclass does\n-  point out some existing metaclasses you might already have used\n-  see where you might use one in your own code.\n\nWe'll compare use of a metaclass with some alternatives that don't use\nmetaclasses, to better understand why you'd want to use them.\n\nThen we'll take a look at a couple of use-cases where using a metaclass\nhelps us achieve a much more friendly and intuitive API than we\notherwise could.\n\n**Slides**\n\nhttps://speakerdeck.com/nzpug/craig-de-stigter-intro-to-metaclasses\n",
  "duration": null,
  "id": 2445,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-09-16",
  "related_urls": [
    "https://speakerdeck.com/nzpug/craig-de-stigter-intro-to-metaclasses"
  ],
  "slug": "intro-to-metaclasses",
  "speakers": [
    "Craig de Stigter"
  ],
  "summary": "Metaprogramming is a valuable technique for putting complexity where it\nbelongs: behind a clean, friendly API. This talk goes over the basics of\nmetaclasses and introspection in Python, and covers how and when you\nshould use them to make your code more approachable.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/OCDbLcCB-uA/hqdefault.jpg",
  "title": "Intro to Metaclasses",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OCDbLcCB-uA"
    }
  ]
}
