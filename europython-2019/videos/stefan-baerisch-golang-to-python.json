{
  "description": "Python and Go are a great combination. Like Python, Go is easy to learn,\npowerful to use and has many useful libraries. Go and Python work great\ntogether: Go has better performance and parallelism, while Python is\nmore expressive. Wouldn't it be nice if you could combine the benefits\nof Go and Python in one program? This talk shows you how.\n\n| Why you may want to attend\n| Extension modules written in C/C++ or other languages are one of the\n  major strength Python. Go is a useful language to extend Python. This\n  talk explains to you how to implement extension modules in Go.\n\n| Content of the Talk\n| The talk shows how to use CGO to make Go code available as a C library\n  and then to use Cython to make this library available as a Python\n  extension module.\n\n| We start by building a wrapper for simple Go code that adds some\n  numbers and returns the results. This program is our end-to-end\n  example to demonstrate the steps necessary to create a Python\n  extension module in Go.\n| Next, we move to more complex use cases. We look at different ways to\n  share complex data and to use Python callbacks from Go.\n| Then, we see how to how to handle Go's Garbage Collector when exposing\n  with Go Objects.\n| Finally, the talk goes into the advantages and disadvantages of Go as\n  an extension language for Python. We also look at some of the\n  alternative ways to make Go code available in Python.\n\n| Recommended Prerequisites\n| To get the most out of the talk, you should know about the difference\n  between native Python modules and extension modules written in other\n  languages. Some background on concepts like garbage collection, stack\n  and heap, and dynamic/shared libraries are beneficial. Knowledge of\n  the Python C API is not required.\n| You do not need to know how to write Go code to follow the talk - the\n  talk explains all the required Go.",
  "recorded": "2019-07-12",
  "related_urls": [
    {
      "label": "slides",
      "url": "https://ep2019.europython.eu/media/conference/slides/Zktoaai-golang-to-python.pdf"
    }
  ],
  "speakers": [
    "Stefan Baerisch"
  ],
  "tags": [
    "Cython",
    "Go-Lang",
    "Tooling"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/ILfPgkqdSYc/hqdefault.jpg",
  "title": "Go(lang) to Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ILfPgkqdSYc"
    }
  ]
}
