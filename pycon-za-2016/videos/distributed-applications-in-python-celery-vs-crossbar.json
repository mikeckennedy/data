{
  "description": "In this talk I will discuss two specific methods of implementing\ndistributed applications in Python. Distributed applications allow one\nto improve resiliency and performance, although this can come at the\ncost of increased complexity. The trick is to apply a distributed\napplication framework in situations where that complexity is less\nsignificant than the benefits it provides.\n\nOf the two systems I will be covering, Celery is by far the better known\nand more mature, with version 0.1.0 having been released in 2009. Celery\nis currently at version 3.1.23 and has come a long way in that time.\nToday it provides a stable and mature distributed task queue with a\nfocus on real-time execution although it is also capable of cron-like\nscheduled operations. Celery is extremely flexible and configurable,\nalthough this comes at the cost of some complexity. Thankfully the\ndocumentation is rock solid and the community large.\n\nCrossbar is a newer project that was first released in 2013. Compared to\nCelery it's less well known, has a smaller community and the\ndocumentation is definitely lacking in terms of quality and robustness.\nDespite these flaws Crossbar is a very exciting project that is very\npleasant to work with once you've gotten past the initial learning\ncurve. While Celery provides a distributed task queue, Crossbar\nfunctions as a WAMP router. WAMP is a routed messaging protocol built on\nWebSockets that provides RPC and PubSub. As such it targets a slightly\ndifferent space from Celery. That said, there is enough overlap for\ndiscussion.\n\nPicking a distributed application framework can be tricky as there are a\nvariety of options available. My aim with this talk is to compare and\ncontrast two specific frameworks that I have some experience with,\nillustrating their similarities, differences, strengths and weaknesses.\nI will cover some basic examples for each framework and hopefully\nprovide the audience with a better idea of why they might choose to use\none or the other (or even both!).\n\nThere is no specific audience focus for this talk as I imagine\ndistributed applications can be of benefit to many different use-cases.\nWith that said, my background is in web development and hence my\ndiscussion of the two frameworks in question will probably draw on that\nexperience. Regardless, I think that anyone with an interest in\ndistributed applications could benefit from this talk.\n",
  "duration": 2150,
  "language": "eng",
  "recorded": "2016-10-07",
  "related_urls": [
    "https://2016.za.pycon.org/talks/15/"
  ],
  "speakers": [
    "Adam Jorgensen"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/WijEe0Vkj3Y/hqdefault.jpg",
  "title": "Distributed Applications in Python: Celery vs Crossbar",
  "videos": [
    {
      "type": "youtube",
      "url": "http://youtu.be/WijEe0Vkj3Y"
    },
    {
      "type": "archive",
      "url": "https://archive.org/details/pyconza2016-Distributed_Applications_in_Python_Celery_vs_Crossbar"
    }
  ]
}
