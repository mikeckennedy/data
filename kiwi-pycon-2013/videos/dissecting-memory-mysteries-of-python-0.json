{
  "alias": "video/2359/dissecting-memory-mysteries-of-python-0",
  "category": "Kiwi PyCon 2013",
  "copyright_text": "",
  "description": "@ Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2\n\n**Audience level**\n\nIntermediate\n\n**Abstract**\n\nPython is a dynamically typed language. Applications leave task of\nobject memory management to Python VM. Python automatically manages\nmemory using reference counting and garbage collection. But, Python\nmemory manager may bloat the VM size, and sometimes it may consume\ncomplete main memory. It causes applications to deliver low performance\nand encounter unexpected memory errors.\n\nThis talk dissects the internals of CPython memory manager, its\nlimitations and negative impact on application behavior. We demonstrate\nthe problem of memory leaks by learning Python heap pattern, object\ngraphs and memory profiling. Next, we suggest solutions to reduce memory\nfootprints of applications, tools to diagnose and fix memory leaks and\nlesson learned as best development practices.\n\n**Slides**\n\nhttps://speakerdeck.com/nzpug/vishal-kanaujia-dissecting-memory-mysteries-of-python\n",
  "duration": null,
  "id": 2359,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-09-12",
  "related_urls": [
    "https://speakerdeck.com/nzpug/vishal-kanaujia-dissecting-memory-mysteries-of-python"
  ],
  "slug": "dissecting-memory-mysteries-of-python-0",
  "speakers": [
    "Chetan Giridhar",
    "Vishal Kanaujia"
  ],
  "summary": "Memory leak has been perennial problem for Python applications. This\ncauses application to behave erroneously with Memory error and very slow\noperation. What is wrong with the application? How to find out the cause\nand fix it? This is the motivation for this talk.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/7glw_5YFU-Q/hqdefault.jpg",
  "title": "Dissecting memory mysteries of Python",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=7glw_5YFU-Q"
    }
  ]
}
