{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Cette pr\u00e9sentation introduira les notions de \"micro-service design\npattern\" et comment ils peuvent etre exploites pour d\u00e9ployer les\nservices a base de Python (ou autre) sur Kubernetes ou Docker.\n\nNous regarderons comment exposer et scaler le service, puis le faire\n\u00e9voluer en nouvelle version via les \"rolling upgrades\" prenant en compte\ndes d\u00e9tails pratiques tel que le besoin d'haute disponibilite, capacity,\ningress controllers, monitoring et load balancing.\n\nNous verrons comment les \"health checks\" permettent de valider l'\u00e9tat de\nsant\u00e9 d'une nouvelle version d'un service pour pouvoir faire un\n\"rollback\" en cas de besoin.\n\nTous ces concepts seront d\u00e9montr\u00e9s visuellement avec un deploiement de\nbout en bout sur un cluster Kubernetes.\n",
  "duration": 2951,
  "language": "fra",
  "recorded": "2018-10-06",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://www.pycon.fr/2018/program/"
    }
  ],
  "speakers": [
    "Michael Bright"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/SxBJxOa7Y-g/maxresdefault.jpg",
  "title": "Design Patterns pour Python Micro-services",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=SxBJxOa7Y-g"
    }
  ]
}
