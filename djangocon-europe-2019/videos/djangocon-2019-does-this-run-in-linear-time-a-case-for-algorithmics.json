{
  "description": "Algorithms are fun to learn and their usefulness goes beyond getting that good grade or acing a coding interview. This talk aims to showcase some the hidden benefits of keeping your algorithmic skills sharp, as well as the speaker\u2019s personal recommendations in keeping up the good work without feeling like studying for an exam.\nHow many sorting methods can you name out of your head? What is greedy? If these terms sound familiar, you\u2019ve probably heard of algorithmics. For the everyday developer, algorithms are either the scare of all the technical interviews, or that one course you took in university which they vaguely remember. It seems that if you\u2019re not working for one of the big companies, you will never use them. So you might ask yourself: Why do I need to know about linear time when the libraries I\u2019m using already optimise for this?\nWhile you might not implement binary search in that new feature you\u2019re working on, or use dynamic programming, diving a bit deeper into this world could prove useful in training your mind to see patterns you might have a harder time seeing otherwise, or to write code that is better optimised and will give the end users a better experience. I am going to try to dispel some of the myths surrounding the study of algorithms and competitive programming, and argue that sharpening this skill is something that benefits us, as software developers, outside of passing technical tests.\n",
  "language": "eng",
  "recorded": "2019-04-21",
  "speakers": [
    "Iulia Avram"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/jmx0iNJxliI/hqdefault.jpg",
  "title": "Does this run in linear time? A case for algorithmics",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=jmx0iNJxliI"
    }
  ]
}
