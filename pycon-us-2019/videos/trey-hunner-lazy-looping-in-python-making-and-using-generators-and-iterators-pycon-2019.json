{
  "copyright_text": null,
  "description": "When processing large amounts of data in Python, we often reach for\nlists. Unfortunately, processing data using large lists make for ugly\ncode that can be memory inefficient and slow. Python's solution to this\nproblem is lazy looping using generators and iterators.\n\nDuring this tutorial we'll learn a number of lazy looping techniques\nwhich will help you write more efficient and more readable Python code.\nWe'll get practice creating generators, playing with iterators, and\nusing generators and iterators to drastically restructure our code in a\nmore descriptive data-centric way.\n\nYou'll walk out of this tutorial with hands-on experience with Python's\nvarious lazy looping constructs and a greater appreciation for how\nlooping works under the hood in Python.\n",
  "duration": 12895,
  "language": "eng",
  "recorded": "2019-05-01T13:20:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/80/"
    }
  ],
  "speakers": [
    "Trey Hunner"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/YWFbR8mTcAY/maxresdefault.jpg",
  "title": "Lazy Looping in Python: Making and Using Generators and Iterators",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=YWFbR8mTcAY"
    }
  ]
}
