{
  "alias": "video/2010/the-dynd-library-scipy-2013-presentation",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2010,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-02",
  "slug": "the-dynd-library-scipy-2013-presentation",
  "speakers": [],
  "summary": "Authors: Wiebe, Mark, Continuum Analytics\n\nTrack: General\n\nThe DyND library is a component of Blaze, providing an in-memory data\nstructure which is dynamic, multidimensional, and array-oriented. It\ngeneralizes the data model of NumPy and Python's buffer protocol by\ndynamically composing data types and associated metadata like dimension\nsizes and strides. This adds flexibility to the system without requiring\nsignificant performance compromises. For example, variable-sized\ndimensions can be used to create ragged arrays, operated on just like\nfixed-size dimensions. DyND supports the NumPy set of data types,\ntogether with a growing list of additions like variable-sized strings,\npointers, and a categorical type. Expression data types allow for both\nreading and writing from one type stored as another type under the hood.\nA date, with all its associated functions and properties, may be stored\nas a string or a struct. Expressions are evaluated in a lazy fashion, so\nmultiple element-wise operations are fused similar to the numexpr\nlibrary. DyND is written as a pure C++ library, with bindings for Python\nas a separate component. Its usage syntax is quite similar in Python and\nC++, making it easier for programmers to switch between the languages\nwith code in the same high level style, only delving into the lower\nlevel details when necessary.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/BduIKN5mgvU/hqdefault.jpg",
  "title": "The DyND Library; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=BduIKN5mgvU"
    }
  ]
}
