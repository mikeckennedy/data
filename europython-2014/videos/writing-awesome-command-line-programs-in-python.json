{
  "alias": "video/2971/writing-awesome-command-line-programs-in-python",
  "category": "EuroPython 2014",
  "copyright_text": "http://creativecommons.org/licenses/by/3.0/",
  "description": "Python is a great language for writing command-line tools - which is why\nso much of Linux is secretly written in Python these days.\nUnfortunately, what starts as a simple script can quickly get out of\nhand as more features are added and more people start using it!\n\nThe talk will consist of a tour through various useful libraries and\npractical code showing how each can be used, and include advice on how\nto best structure simple and complex command-line tools.\n\nThings to consider when writing command-line apps:\n\n-  Single-file vs Multiple-file\n-  Standard library only vs. 3rd party requirements\n-  Installation - setup.py vs. native packaging\n\nThe different parts of a command-line program:\n\n-  Option Parsing:\n\n   -  Libraries: getopt, optparse, argparse, docopt\n   -  Sub-commands\n\n-  Configuration:\n\n   -  Formats: Ini file, JSON, YAML\n   -  Where should it be stored (cross-platform);\n   -  Having multiple configuration files, and allowing user config to\n      override global config\n\n-  Output:\n\n   -  Colour - colorama\n   -  Formatting output for the user\n   -  Formatting output for other programs\n   -  How do you know when your output is being piped to another\n      program?\n   -  Managing logging and verbosity\n\n-  Managing streamed input\n-  Exit values: What are the conventions?\n-  Interactive apps - REPL\n-  Structuring a bunch of programs/commands around a shared codebase.\n-  Command-line frameworks: clint, compago & cliff\n-  Testing command-line apps\n-  Writing command-line tools in Python 3 vs Python 2\n\n",
  "duration": null,
  "id": 2971,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-24",
  "slug": "writing-awesome-command-line-programs-in-python",
  "speakers": [
    "Mark Smith"
  ],
  "summary": "Command-Line programs can have a lot to them - usually more than you\nthink, yet often suffer from a lack of thought.\n\nThis is a tour through how to structure your code, tools in the standard\nlibrary and some 3rd party libraries. Take your command-line programs to\nthe next level!\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/gR73nLbbgqY/hqdefault.jpg",
  "title": "Writing Awesome Command-Line Programs in Python",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=gR73nLbbgqY"
    }
  ]
}
