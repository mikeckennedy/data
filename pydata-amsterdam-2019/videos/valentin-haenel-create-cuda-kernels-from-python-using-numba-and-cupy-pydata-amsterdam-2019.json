{
  "description": "We'll explain how to do GPU-Accelerated numerical computing from Python using the Numba Python compiler in combination with the CuPy GPU array library. Numba is an open-source compiler that can translate Python functions for execution on the GPU without requiring users to write any C or C++ code. Numba's just-in-time compilation ability makes it easy to interactively experiment with GPU computing in the Jupyter notebook. Combining Numba with CuPy, a nearly complete implementation of the NumPy API for CUDA, creates a high productivity GPU development environment. Learn the basics of using Numba with CuPy, techniques for automatically parallelizing custom Python functions on arrays, and how to create and launch CUDA kernels entirely from Python. Access to appropriate hardware will be provided in the form of access to GPU based cloud resources.",
  "duration": 6369,
  "recorded": "2019-05-10",
  "speakers": [
    "Valentin Haenel"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/CQDsT81GyS8/hqdefault.jpg",
  "title": "Create CUDA kernels from Python using Numba and CuPy",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CQDsT81GyS8"
    }
  ]
}
