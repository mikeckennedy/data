{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "A couple years ago I was approached by a client to help them improve the\nperformance and maintainability of their code.\n\nThat code was filled with very long functions, some of them with very\nsimilar code and the project was really hard to understand as a whole.\n\nMy first reflex was to refactor this code code to make it more\nunderstandable. In my opinion, it did fit part of my assignment as\nunderstandable code is easier to maintain but it was also very helpful\nlater in letting me make small changes with full knowledge of what was\ngoing to be affected by those changes.\n\nLarge methods and functions is something that creeps into our code\nwhether we plan for it or not. This talk is about one way to deal with\nit.\n\nThis talk will be based on code provided by the GildedRose Refcatoring\nKata: https://github.com/emilybache/GildedRose-Refactoring-Kata\n\nPrerequisites: - Basic knowledge of Python - Basic knowledge of OOP\n\nGoals: - Demonstrate one approach for refactoring code - Show how to\nleverage Python\u2019s dynamic nature to make code simpler\n",
  "duration": 3130,
  "language": "eng",
  "recorded": "2018-07-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Emmanuelle Delescolle"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/UHF4AG5se1o/maxresdefault.jpg",
  "title": "A tale of refactoring",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=UHF4AG5se1o"
    }
  ]
}
