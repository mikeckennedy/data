{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "This tutorial is for Python users who would like to create nice 2d plots\nwith Python.\n\nAudience Level\n==============\n\nStudents should have a working knowledge of Python. NumPy knowledge is\nhelpful but not required.\n\nPrerequisites\n=============\n\nPlease bring your laptop with the operating system of your choice\n(Linux, Mac OS X, Windows). In addition to Python 3.6 (2.7 works if\nreally want to use it), we need:\n\n-  a current versions of matplotlib (http://matplotlib.sourceforge.net)\n-  Jupyter (http://jupyter.org/) and\n-  NumPy (http://numpy.scipy.org).\n\nIf you use Anaconda you should have all requirements installed. If you\nuse a new ``conda`` environment install with:\n\n``conda install jupyter numpy matplotlib``\n\nThe same goes for ``pip``:\n\n``pip install jupyter numpy matplotlib``\n\nMethod\n------\n\nThis is a hands-on course. Students are strongly encouraged to work\nalong with the trainer at the interactive prompt. There will be\nexercises the students need to do on their own. Experience shows that\nthis active involvement is essential for an effective learning.\n\nContent\n-------\n\n| The library matplotlib provides many different types of diagrams from\n  within Python with only few lines of code. Examples are used to\n  exercise the use of this library. The tutorial provides an overview\n  how to create plots . Using matplotlib from Jupyter Notebook provides\n  an interactive environment for fast testing of ideas. We will be using\n  this for most of the tutorial.\n| With a simple plot we learn how to add axis labels, titles and a\n  legend. The GUI offers zooming, panning, changing of plot sizes and\n  other interactive ways to modify the plot. We will use Python to\n  change properties of existing plots such as line colors, marker\n  symbols, or line styles. There are several ways how to place text on\n  plots. You will learn about the different coordinate systems relative\n  to the plot, the canvas or the figure. Another topic are ticks, where\n  to put them and how to format them to achieve publication-quality\n  plots. The concepts of figures, subplots, and axes and how they relate\n  to each other will be explained with examples.\n| Matplotlib offers many different types of plots. The tutorial\n  introduces several of them with an example. A more advanced topic will\n  be creating your own plot types. Finally, we will create a small\n  animation to explore the possibilities to visualize changes.\n\nOutline\n-------\n\n-  Introduction\n-  Jupyter\n-  Simple plots\n-  Properties\n-  Text\n-  Ticks\n-  Figures, subplots, and axes\n-  Other types of plots\n-  The class library\n-  Creating New Plot Types\n-  Animations\n\nAudience level: Novice\n~~~~~~~~~~~~~~~~~~~~~~",
  "duration": 5252,
  "language": "eng",
  "recorded": "2017-08-31",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://www.euroscipy.org/2017/program.html"
    }
  ],
  "speakers": [
    "Mike M\u00fcller"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/YrnHdgZ8n1U/maxresdefault.jpg",
  "title": "Matplotlib",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=YrnHdgZ8n1U"
    }
  ]
}
