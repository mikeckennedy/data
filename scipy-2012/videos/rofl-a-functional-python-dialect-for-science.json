{
  "alias": "video/1191/rofl-a-functional-python-dialect-for-science",
  "category": "SciPy 2012",
  "copyright_text": "CC BY-SA",
  "description": "Current parallel programming models leave a lot to be desired and fail\nto maintain pace with improvements in hardware architecture. For many\nscientific research groups these models only widen the gap between\nequations and scalable parallel code. The Resilient Optimizing Flow\nLanguage (ROFL) is a data-flow language designed with the purpose of\nsolving the problems of both domain abstraction and efficient\nparallelism. Using a functional, declarative variant of the Python\nlanguage, ROFL takes scientific equations and optimizes for both scalar\nand parallel execution.\n\nROFL is closely tied to Python and the SciPy libraries. ROFL uses Python\nexpression syntax, is implemented in Python, and emits optimized Python\ncode. ROFL's implementation in Python allows ROFL to be embedded in\nPython. Using Python as a target language makes ROFL extensible and\nportable. By removing imperative loop constructs and focusing on\nintegration with the NumPy and SciPy libraries, ROFL both supports and\nencourages data parallelism.\n\nIn this presentation, we introduce the ROFL language, and demonstrate by\nexample how ROFL enables scientists to focus more on the equations they\nare solving, and less on task and data parallelism.\n",
  "duration": null,
  "id": 1191,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2012-07-18",
  "slug": "rofl-a-functional-python-dialect-for-science",
  "speakers": [
    "Jonathan Riehl"
  ],
  "summary": "",
  "tags": [
    "hpc"
  ],
  "thumbnail_url": "https://i4.ytimg.com/vi/OF3CYqj4H9U/hqdefault.jpg",
  "title": "ROFL: a functional Python dialect for science",
  "videos": [
    {
      "type": "mp4",
      "url": "http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/ROFL_a_functional_Python_dialect_for_science.mp4?Signature=s%2FDUCoB4OybZmEOzK2fg9hTBccw%3D&Expires=1346445141&AWSAccessKeyId=FEWGReWX3QbNk0h3"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OF3CYqj4H9U"
    }
  ]
}
