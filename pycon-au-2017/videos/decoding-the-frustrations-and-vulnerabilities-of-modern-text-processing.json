{
  "description": "When it comes to processing text, Python is easily one of the best languages for the job. However, in today's modern world, with emojis\ud83d\udc4c\ud83c\udffb, \u0192\u03bf\u044f\u03b5\u03b9g\u03b7 \u2113\u03b1n\u03b3u\u03b1g\u03b5s, and \nm\u0315a\u0328\u0315\u0336l\u0341ic\u0337i\u0341\u035co\u0336\u035f\u035cus\u0360 \u0489\u035ed\u0334a\u035ct\u031b\u0358\u0335a\u0328\u0489 we are no longer dealing with easy and safe to handle ASCII input.\n\nJoin us as we go through the adventures of battling UnicodeError dragons, working with Python3's I/O, what to do when working with bytes, how to account for data from the web and/or databases nicely, what the different types of string literals are, the new f\"{format_strings}\", and the security vulnerabilities that string formatting and malicious input can possess (and how to prevent it).",
  "duration": 1477,
  "language": "eng",
  "recorded": "2017-08-06",
  "speakers": [
    "Evan Kohilas"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/1pLhQIQelUw/hqdefault.jpg",
  "title": "Decoding the Frustrations and Vulnerabilities of Modern Text Processing",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=1pLhQIQelUw"
    }
  ]
}
