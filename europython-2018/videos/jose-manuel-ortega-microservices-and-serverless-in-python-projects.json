{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Monoliths, microservices and now Serverless. Function as a Service\n(FaaS) platforms give us new ways to attack old problems. The\npossibility of executing functions as a service allows designing\nscalable and highly parallel applications, but on the other hand, this\nkind of applications require a particular programming style. For\nexample, bundling dependencies and managing state is not trivial.\n\nHowever, there are plenty of tools and frameworks to help you code\nserverless applications with Python, and once you get started it is not\ncomplicated.\n\nIn this talk we will mention the advantages of Serverless and we will\nfocus on the situations in which we can introduce it into our Python\nprojects. We will use AWS Lambda for the examples.\n\nThese could be the main talking points:\n\nIntroducing Serverless and Function as a Service (FaaS) in Python\nprojects Advantages of Microservices and Serverless AWS Lambda functions\nwith chalice Testing AWS lambda with docker\n",
  "duration": 2649,
  "language": "eng",
  "recorded": "2018-07-26",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Jose Manuel Ortega"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/CoIMfOeREdY/maxresdefault.jpg",
  "title": "Microservices and Serverless in Python projects",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CoIMfOeREdY"
    }
  ]
}
