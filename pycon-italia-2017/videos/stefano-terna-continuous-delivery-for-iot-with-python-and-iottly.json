{
  "description": "We know, continuous delivery is one of the current buzzwords (much like\nIoT was a couple of years ago). But think of an industrial IoT project\nconnecting thousands of remote and inaccessible devices which should be\nkept secure and updated over time. Now, imagine you can just write\nPython code for your devices, test it over-the-internet both locally in\nthe lab, and in a real test environment simply by pushing your code to\nspecific branches and finally just pushing to master to update the\nentire fleet.\n\nDuring the talk we will use Iottly to showcase this continuous delivery\npattern for the internet of things, with live code and connected devices\n(Raspberry Pi).\n\nIottly is a Development and Management Cloud Service for IoT Projects,\nbuilt by TomorrowData. Iottly is written in Python and is open source\n(github). It features a Python sandbox for the devices, an online editor\nto program the devices over-the-internet, and the integration with git\nas the base for continuous delivery.\n",
  "duration": 1782,
  "language": "eng",
  "recorded": "2017-04-07",
  "related_urls": [],
  "speakers": [
    "Stefano Terna"
  ],
  "tags": [
    "raspberrypi",
    "git",
    "continuous-delivery",
    "iot",
    "over-the-air firmware upgrade",
    "InternetOfThings",
    "InternetDelleCose",
    "github",
    "IDE"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/3R-k8pf63o4/hqdefault.jpg",
  "title": "Continuous Delivery for Iot with Python and Iottly",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=3R-k8pf63o4"
    }
  ]
}
