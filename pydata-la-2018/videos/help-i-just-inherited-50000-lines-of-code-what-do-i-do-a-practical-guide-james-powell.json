{
  "abstract": "There are a couple of common themes when trying to quickly become\nfamiliar with a large code base. Such code bases are not necessarily\nwell-documented, their documentation may be incorrect or out of date,\ntheir structuring may not lend itself to easy analysis, their original\nauthors may not be available, they may not no tests, and they may be\ndifficult to actually run.\n\nThis talk will try to present some practical strategies for what to do\nwhen inheriting a large code base, focusing on what productive steps can\nbe done by someone inheriting such a code base and what steps the\noriginal authors could have taken to improve their ability to onboard\nnew coders.\n",
  "copyright_text": null,
  "description": "Help! I just inherited 50,000 lines of Python code from someone who no\nlonger works here. What do I do?\n\nThis talk will cover some practical strategies for dealing with large\nPython code bases.\n",
  "duration": 3524,
  "language": "eng",
  "recorded": "2018-10-22",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://pydata.org/la2018/schedule/"
    }
  ],
  "speakers": [
    "James Powell"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/mr2SE_drU5o/maxresdefault.jpg",
  "title": "Help! I Just Inherited 50,000 Lines of Code! What Do I Do? \u2014 A Practical Guide",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=mr2SE_drU5o"
    }
  ]
}
