{
  "abstract": "If you\u2019re a law firm, when you get a new client, they\u2019re going to send\nyou a giant zip file with hundreds or thousands of documents. You might\nthen sic a team of highly educated, highly paid paralegals to read each\ndocument and painstakingly enter the counterparty, date of execution,\netc. into a spreadsheet. But what if an algorithm could do it for free?\n\nIn this talk, we\u2019ll cover extracting this information from a legal\ndocument using an extension of a Hidden Markov Model called a CRF, or\nConditional Random Field. We\u2019ll go through the math behind the model in\nsome depth. We\u2019ll give some tips for feature selection. And we\u2019ll talk\nabout how to vectorize a legal document. We\u2019ll close with a description\nof the pluses and minuses of using CRFs in lieu of more complex deep\nlearning-type models.\n\nThe target audience is anyone who\u2019s ever heard of Bayes\u2019 Rule.\n",
  "copyright_text": null,
  "description": "You\u2019ll learn how to take a never-before-seen legal document, like a\ncontract or a convertible note, and use machine learning to \u201cread\u201d the\ndocument and answer questions like \u201cWho\u2019s the investor\u201d and \u201cWhat\ninterest rate did the parties agree to?\u201d\n",
  "duration": 2662,
  "language": "eng",
  "recorded": "2018-10-22",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://pydata.org/la2018/schedule/"
    }
  ],
  "speakers": [
    "Zack Witten"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/KrXJmaSHBJU/maxresdefault.jpg",
  "title": "Extracting Structured Data from Legal Documents",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=KrXJmaSHBJU"
    }
  ]
}
