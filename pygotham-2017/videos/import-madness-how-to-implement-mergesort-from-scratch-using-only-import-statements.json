{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Recently I had trouble importing a module. So I started actually reading the documentation of the Python import\nsystem and realized that I had been writing Python for years without understanding basics like \"a module is a file\"\nor \"importing a module executes it\".\n\nA few days later I had a terrible realization -- it's possible to implement a mergesort algorithm in Python using\nonly the `import` statement.\n\nActually making it work requires learning (and subverting) almost all of the import system's underlying machinery.\nSo walking through how it's done creates an excellent (and entertaining) opportunity to shine some light on the\ndarker corners of a system that Python programmers use nearly every day but can work for years without ever really understanding.\n\nThis talk starts off with an explanation of the basic fundamentals of the import system, i.e.\n\n1) What does the word \"module\" actually mean?\n2) How does Python find the source code I'm importing?\n3) What is Python actually doing when I import code?\n\nFrom there, things get pretty weird.\n\nThe rest of the talk explains how the import system alone gives us the tools to emulate function evaluation\nand how that means that we can (but shouldn't!) write algorithms using import statements instead of functions.\n\nI describe the classic mergesort algorithm and then I show how to actually implement it using imports\n(under the theory that nothing helps retain knowledge like watching it applied to a trainwreck.)\n\nI briefly discuss how \"computation\" is an abstract process that can be accomplished in more ways\nthat we might intuitively realize. And then I wrap up with some practical advice on how users can avoid ImportErrors\nand a warning about the serious but non-obvious security risks of importing Python code.",
  "duration": 1500,
  "language": "eng",
  "recorded": "2017-10-07",
  "related_urls": [
    "https://2017.pygotham.org/talks/import-madness-how-to-implement-mergesort-from-scratch-using-only-import-statements/"
  ],
  "speakers": [
    "George London"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/gB1FrBodsik/maxresdefault.jpg",
  "title": "import madness  # how to implement mergesort from scratch using only import statements",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=gB1FrBodsik"
    }
  ]
}
