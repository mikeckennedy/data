{
  "copyright_text": null,
  "description": "Key takeaways:\n\n1. Set operations enable simpler and faster solutions for many tasks;\n2. Python's set classes are lessons in elegant, idiomatic API design;\n3. A set class is a suitable context for implementing operator\n   overloading.\n\nBoolean logic and set theory are closely related. In practice, we will\nsee cases where set operations provide simple and fast declarative\nsolutions to programming problems that otherwise require complicated and\nslow procedural coding.\n\nPython's set built-ins and ABCs provide a rich and well designed API. We\nwill consider their interfaces, and how they can inspire the creation of\nPythonic APIs for your own classes.\n\nFinally, we will discuss operator overloading \u2014 a technique that is not\nsuitable everywhere, but certainly makes sense with sets. Taking a few\noperators as examples, we will study their implementation in a new\n``UintSet`` class for integer elements. ``UintSet`` fully implements the\n``MutableSet`` interface over a totally different internal\nrepresentation based on a bit array instead of a hash table. Membership\ntests run in *O(1)* time like the built-in sets (however, ``UintSet`` is\ncurrently pure Python, so YMMV). Using bit arrays allow core set\noperations like intersection and union to be implemented with fast\nbitwise operators, and provides compact storage for dense sets of\nintegers.\n",
  "duration": 1755,
  "language": "eng",
  "recorded": "2019-05-03T10:50:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/180/"
    }
  ],
  "speakers": [
    "Luciano Ramalho"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/tGAngdU_8D8/maxresdefault.jpg",
  "title": "Set Practice: learning from Python's set types",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=tGAngdU_8D8"
    }
  ]
}
