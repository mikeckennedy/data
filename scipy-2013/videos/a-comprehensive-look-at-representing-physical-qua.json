{
  "alias": "video/2012/a-comprehensive-look-at-representing-physical-qua",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "Authors: Bekolay, Trevor, University of Waterloo\n\nTrack: General\n\nCode that properly tracks the units associated with physical quantities\nis self-documenting and far more robust to unit conversion errors. Unit\nconversion errors are common in any program that deal with physical\nquantities, and have been responsible for several expensive and\ndangerous software errors, like the Mars Climate Orbiter crash. Support\nfor tracking units is lacking in commonly used packages like NumPy and\nSciPy. As a result, a whole host of packages have been created to fill\nthis gap, with varying implementations. Some build on top of the\ncommonly used scientific packages, adding to their data structures the\nability to track units. Others packages track units separately, and\nstore a mapping between units and the data structures containing\nmagnitudes.\n\nI will discuss why tracking physical quantities is an essential function\nfor any programming language heavily used in science. I will then\ncompare and contrast all of the packages that currently exist for\ntracking quantities in terms of their functionality, syntax, underlying\nimplementation, and performance. Finally, I will present a possible\nunification of the existing packages that enables the majority of use\ncases, and I will discuss where that unified implementation fits into\nthe current scientific Python environment.\n",
  "duration": null,
  "id": 2012,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-02",
  "slug": "a-comprehensive-look-at-representing-physical-qua",
  "speakers": [
    "Trevor Bekolay"
  ],
  "summary": "Why tracking physical quantities is an essential function for any\nprogramming language heavily used in science and a possible unification\nof the existing packages that enable the majority of use cases.\n",
  "tags": [
    "scipy"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/N-edLdxiM40/hqdefault.jpg",
  "title": "A comprehensive look at representing physical quantities in Python",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=N-edLdxiM40"
    }
  ]
}
