{
  "alias": "video/2734/pymc-markov-chain-monte-carlo-in-python",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "`PyMC <http://pymc-devs.github.io/pymc/>`__ is a Python module that\nimplements Bayesian statistical models and fitting algorithms, including\nMarkov chain Monte Carlo (MCMC). Its flexibility and extensibility make\nit applicable to a large suite of problems. Along with core sampling\nfunctionality, PyMC includes methods for summarizing output, plotting,\ngoodness-of-fit and convergence diagnostics. PyMC seeks to make Bayesian\nanalysis as painless as possible, so that it may be used by a range of\ndata analysts. Its key features include:\n\n-  Fits Bayesian statistical models with Markov chain Monte Carlo and\n   other algorithms.\n-  Includes a large suite of well-documented statistical distributions.\n-  Uses NumPy for numerics wherever possible.\n-  Includes a module for modeling Gaussian processes.\n-  Sampling loops can be paused and tuned manually, or saved and\n   restarted later.\n-  Creates summaries including tables and plots.\n-  Traces can be saved to the disk as plain text, Python pickles, SQLite\n   or MySQL database, or hdf5 archives.\n-  Several convergence diagnostics are available.\n-  Extensible: easily incorporates custom step methods and unusual\n   probability distributions.\n-  MCMC loops can be embedded in larger programs, and results can be\n   analyzed with the full power of Python.\n\nThe upcoming release of `PyMC 3 <https://github.com/pymc-devs/pymc>`__\nfeatures an expanded set of MCMC samplers, including Hamiltonian Monte\nCarlo. For this, we tap into the power of Theano to provide automatic\nevaluation of mathematical expressions, including gradients used by\nmodern MCMC samplers.\n\nThe `source <https://github.com/pymc-devs/pymc>`__ and\n`documentation <http://pymc-devs.github.io/pymc/>`__ for PyMC can be\nfound on GitHub.\n",
  "duration": null,
  "id": 2734,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-09",
  "related_urls": [
    "http://pymc-devs.github.io/pymc/",
    "https://github.com/pymc-devs/pymc"
  ],
  "slug": "pymc-markov-chain-monte-carlo-in-python",
  "speakers": [
    "Chris Fonnesbeck"
  ],
  "summary": "PyMC is a Python module that implements Bayesian statistical models and\nfitting algorithms, including Markov chain Monte Carlo (MCMC). Its\nflexibility, extensibility, and clean interface make it applicable to a\nlarge suite of statistical modeling applications. The upcoming release\nof PyMC 3 features an expanded set of MCMC samplers, including\nHamiltonian Monte Carlo.\n",
  "tags": [
    "markov",
    "monte carlo"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/XbxIo7ScVzc/hqdefault.jpg",
  "title": "PyMC: Markov Chain Monte Carlo in Python",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=XbxIo7ScVzc"
    }
  ]
}
