{
  "copyright_text": null,
  "description": "While high-level security concepts may transcend languages, each\nlanguage has its own sets of tools and edge cases that are worth\nknowing. Python is one of many popular languages that is rarely the\nfocus in security training, but that doesn't mean python code is\nautomatically secure (no matter what the internet tells you). Learn why\npeople who say \u201cpylint will help you with security\u201d aren\u2019t doing you any\nfavours, how to use Bandit for security-focused linting and talk about\nother options for static analysis. Take a deeper look at why scanning\nfor publicly known vulnerabilities is complicated, and how to use Pyup\nSafety to make it easier. We\u2019ll also explore some language myths and\nbest practices.\n",
  "duration": 1705,
  "language": "eng",
  "recorded": "2019-05-04T17:10:00",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Conference slides (github)",
      "url": "https://github.com/PyCon/2019-slides"
    },
    {
      "label": "Conference slides (speakerdeck)",
      "url": "https://speakerdeck.com/pycon2019"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/208/"
    }
  ],
  "speakers": [
    "Terri Oda"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/e7zzdl8OXCU/maxresdefault.jpg",
  "title": "Python Security Tools",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=e7zzdl8OXCU"
    }
  ]
}
