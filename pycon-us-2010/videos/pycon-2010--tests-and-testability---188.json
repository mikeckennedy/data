{
  "alias": "video/310/pycon-2010--tests-and-testability---188",
  "category": "PyCon US 2010",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "Tests and Testability\n\nPresented by Ned Batchelder\n\nTesting software is difficult. Large complex systems don't lend\nthemselves naturally to automated testing. This isn't just because they\nare large, it's because developers often don't consider how testable\ntheir code is. Testability is as important as all the other -ilities in\nyour code (portability, maintainability, efficiency, etc).\n\nTestability is a characteristic of your code that makes it easier to\ntest. Increased testability can give you better tests, but it also gives\nyou just plain better code. Improving testability generally means\nconsidering the interfaces to your internal modules and improving them\nto provide better modularity. This improvement often has benefits in\nyour product code.\n\nI'll discuss specific examples to demonstrate how code can be made more\ntestable. Mocks, dependency injection, and crisp API design are just a\nfew of the techniques that can improve your code's testability and make\nyou a happier person.\n",
  "duration": null,
  "id": 310,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2010-02-19",
  "slug": "pycon-2010--tests-and-testability---188",
  "speakers": [
    "Ned Batchelder"
  ],
  "summary": "",
  "tags": [
    "pycon",
    "pycon2010",
    "testing"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_310___tests-and-testability-188",
  "title": "Tests and Testability (#188)",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_310___tests-and-testability-188"
    }
  ]
}
