{
  "copyright_text": "Standard YouTube License",
  "description": "GitHub provides a great platform for collaborating. You can take it to the next level by creating custom GitHub bots. By delegating some of the chores to a bot, you get to spend more time developing your project and collaborating with others.\n\nLearn how to automate your workflow by building a personal GitHub assistant for your own project. We'll use libraries called `gidgethub` and `aiohttp` to write a GitHub bot that does the following:\n\n- Greet the person who created an issue in your project.\n\n- Say thanks when a pull request has been closed.\n\n- Apply a label to issues or pull requests.\n\n- Gives a thumbs up reaction to comments **you** made. (becoming your own personal cheer squad).\n\nThe best part is, you get to do all of the above using Python 3.6! F-strings included!",
  "duration": 6961,
  "language": "eng",
  "recorded": "2018-05-10",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2018/schedule/talks/"
    },
    {
      "label": "Conference slides (Github)",
      "url": "https://github.com/PyCon/2018-slides"
    },
    {
      "label": "Conference slides (SpeakerDeck)",
      "url": "https://speakerdeck.com/pycon2018"
    },
    {
      "label": "talk schedule",
      "url": "https://us.pycon.org/2018/schedule/presentation/41/"
    }
  ],
  "speakers": [
    "Mariatta Wijaya"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/ZwvjtCjimiw/maxresdefault.jpg",
  "title": "Build-a-GitHub-Bot Workshop",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ZwvjtCjimiw"
    }
  ]
}
