{
  "copyright_text": "Standard YouTube License",
  "description": "If you\u2019ve spent much time writing (or debugging) Python performance problems, you\u2019ve probably had a hard time managing memory with its limited language support.\n\nIn this talk, we venture deep into the belly of the Rust Language to uncover the secret incantations for building high performance and memory safe Python extensions using Rust.\n\nRust has a lot to offer in terms of safety and performance for high-level programming languages such Python, Ruby, Js and more with its easy Foreign Function Interface capabilities which enables developers to easily develop bindings for foreign code.",
  "duration": 1840,
  "language": "eng",
  "recorded": "2018-05-13",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2018/schedule/talks/"
    },
    {
      "label": "Conference slides (SpeakerDeck)",
      "url": "https://speakerdeck.com/pycon2018"
    },
    {
      "label": "talk schedule",
      "url": "https://us.pycon.org/2018/schedule/presentation/82/"
    }
  ],
  "speakers": [
    "vigneshwer dhinakaran"
  ],
  "tags": [
    "rust"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/UYpWVfTng4s/maxresdefault.jpg",
  "title": "Pumping up Python modules using Rust",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=UYpWVfTng4s"
    }
  ]
}