{
  "alias": "video/2134/import-without-a-filesystem-scipy-2013-presentat-1",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2134,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-01",
  "slug": "import-without-a-filesystem-scipy-2013-presentat-1",
  "speakers": [],
  "summary": "Presenter: Pat Marion\n\nAuthors: Pat Marion, Kitware; Aron Ahmadia; Bradley M. Froehle,\nUniversity of California, Berkeley\n\nTrack: General\n\nScientific Python is growing in popularity among HPC and supercomputing\ncommunities, but suffers from a seemingly simple and fundamental\nproblem: importing modules from a shared network filesystem at extreme\nscale will cripple the performance of a parallel Python program.\n\nAt SciPy '12, the presentation titled \"Solving the import problem:\nScalable Dynamic Loading Network File Systems\" analyzed the issue and\nproposed several remedies, but concluded there was more work to be done.\nNow, this talk introduces a new technique that leverages the linker to\nembed C-extension modules, and uses Python freeze to embed pure python\nmodules. The result is a program that imports the Python standard\nlibrary and scientific Python modules such as NumPy without accessing\nthe filesystem. It achieves near-instant, and always-constant, import\ntime even at full machine scale on today's largest supercomputers. The\nsame technique is also relevant to Python app developers on mobile and\nembedded systems where filesystem access and dynamic loading inflate app\nstartup time.\n\nThis talk will discuss the concepts involved using a simple hello-world\ndemonstration, and overview a real-world example where Python was used\nto compute at full machine scale on Argonne's Intrepid BlueGene/P\nsupercomputer.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/EOiEIWMYkwE/hqdefault.jpg",
  "title": "Import without a filesystem, SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=EOiEIWMYkwE"
    }
  ]
}
