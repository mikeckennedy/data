{
  "alias": "video/2788/measuring-rainshafts-bringing-python-to-bear-on",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "Remote sensing data is complicated, very complicated! It is not only\ngeospatially tricky but also indirect as the sensor measures the\ninteraction of the media with the probing radiation, not the geophysics.\nHowever the problem is made tractable by the large number of algorithms\navailable in the Scientific Python community, what is needed is a common\ndata model for active remote sensing data that can act as a layer\nbetween highly specialized file formats and the cloud of scientific\nsoftware in Python. This presentation motivates this work by asking: How\nbig is a rainshaft? What is the natural dimensionality of rainfall\npatterns and how well is this represented in fine scale atmospheric\nmodels. Rather than being specific to the domain of meteorology we will\nbreak down how we approach this problem in terms what tools across\nnumerous packages we used to read, correct, map and reduce the data to\nforms able to answer our science questions. This is a \"how\"\npresentation, covering signal processing using linear programming\nmethods, mapping using KD Trees, and image analysis using ndimage and,\nof course graphics using Matplotlib.\n",
  "duration": null,
  "id": 2788,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-13",
  "slug": "measuring-rainshafts-bringing-python-to-bear-on",
  "speakers": [
    "Scott Collis"
  ],
  "summary": "This presentation details how Python is being used to extract\ngeophysical insight from active remote sensing data, namely Radars. By\nusing a common data model our work bridges the gap between the domains\nof radar engineering and image analysis.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/1D0aTToHrCY/hqdefault.jpg",
  "title": "Measuring Rainshafts: Bringing Python to Bear on Remote Sensing Data",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=1D0aTToHrCY"
    }
  ]
}
