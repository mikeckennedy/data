{
  "alias": "video/236/pycon-2010--django-deployment-workshop",
  "category": "PyCon US 2010",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "Django Deployment Workshop\n\nPresented by Jacob Kaplan-Moss\n\nSo you've written a Django site... now what? Writing the application is\njust the beginning; now you've got to put it into production! In this\nhands-on workshop we'll walk through the creation of a full Django\ndeployment environment running on a cluster of (virtual) machines.\n\nThis class will introduce students to a wide variety of technologies,\nincluding Amazon's EC2 and S3, Fabric, Varnish, nginx, mod\\_wsgi,\nmemcached, PostgreSQL, pgpool, pg\\_standby, and more.\n\nBy the end of the class, each student will have created an environment\nfeaturing:\n\n-  Multiple levels of caching and load balancing.\n-  Multiple web application servers.\n-  Shared media servers.\n-  Redundant replicated database servers.\n-  Separate caching servers.\n\nWe'll create this whole stack on Amazon EC2 virtual machines, so\nstudents will be able to take home a complete copy of all the deployment\nconfiguration for future review at their leisure.\n\nNote: the example application used in this class with be a Django site,\nand the class assumes at least a moderate comfort level with Django.\nHowever, the tools and techniques apply just as well to other Python web\nframeworks, so users of other tools will likely be able to follow along\nfairly easily.\n\nIntended Audience\n=================\n\nIntermediate to advanced Django users with sites nearing or in\nproduction. Python developers using other web frameworks will likely be\nable to follow along -- see the note in the summary, above.\n\nClass Outline\n=============\n\n-  Introduction: the deployment question\n-  Application server: mod\\_wsgi\n-  Database server: PostgreSQL\n-  Automated deployment with Fabric\n-  Multiple web servers; load balancing with nginx\n-  Adding memcached\n-  Database connection middleware: pgpool\n-  Database redundancy: warm standby\n-  Upstream caching: Varnish\n-  Final load testing: how'd we do?\n\nRequirements\n============\n\nStudents will need a computer and Amazon EC2 and S3 accounts, and will\nbe asked to familiarize themselves with the process of starting and\nstopping EC2 virtual machines before the class.\n\n`http://us.pycon.org/2010/tutorials/kaplanmoss\\_django/ <http://us.pycon.org/20%2010/tutorials/kaplanmoss_django>`__\n",
  "duration": null,
  "id": 236,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2010-02-19",
  "related_urls": [
    "http://us.pycon.org/20%2010/tutorials/kaplanmoss_django",
    "http://us.pycon.org/2010/tutorials/kaplanmoss\\_django/"
  ],
  "slug": "pycon-2010--django-deployment-workshop",
  "speakers": [
    "Jacob Kaplan-Moss"
  ],
  "summary": "",
  "tags": [
    "pycon",
    "pycon2010"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_236___django-deployment-workshop",
  "title": "Django Deployment Workshop",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_236___django-deployment-workshop"
    }
  ]
}
