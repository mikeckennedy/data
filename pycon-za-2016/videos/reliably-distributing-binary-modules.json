{
  "description": "Shipping Python libraries is easy! ...until you want to use a C library.\nHow do you easily and reliably deliver software to users when they may\nnot have the libraries you depend on, or even a compiler? How do you\nhandle the significant differences between linux, OS X, Windows,\nFreeBSD, and other platforms Python runs on?\n\nWe'll walk through:\n\n-  The requirements for building C modules in Python.\n-  Why those requirements contribute to bad UX and create barriers to\n   adoption.\n-  How wheels can be used to surmount many of these challenges.\n-  What kind of infrastructure is required to build these wheels.\n-  The advantages and potential disadvantages of binary distribution.\n\n",
  "duration": 2280,
  "language": "eng",
  "recorded": "2016-10-07",
  "related_urls": [
    "https://2016.za.pycon.org/talks/32/"
  ],
  "speakers": [
    "Paul Kehrer"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/MfDbMC5ktwE/hqdefault.jpg",
  "title": "Reliably Distributing Binary Modules",
  "videos": [
    {
      "type": "youtube",
      "url": "http://youtu.be/MfDbMC5ktwE"
    },
    {
      "type": "archive",
      "url": "https://archive.org/details/pyconza2016-Reliably_Distributing_Binary_Modules"
    }
  ]
}
