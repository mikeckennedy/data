{
  "alias": "video/3782/untangling-twisted-how-we-scaled-a-python-servic",
  "category": "PyGotham 2015",
  "copyright_text": "CC BY-SA",
  "description": "At OpBandit, we built a Python Twisted service that renders different\nversions of news content for rendering on top publishers across six\ncountries. At a high level, whenever a reader requests a page on a\npublisher's website, our service selects from various versions of\nheadlines and photos to deliver the collection of versions that we think\na user is most likely to click. This requires decision making on the fly\nfor each request with hard requirements for speed and reliability. This\ntalk will cover how we used Twisted to scale our service to provide\nhundreds of millions of optimized pages / month for readers, as well as\nwhat it's like to attempt to scale real-time data science recommendation\nalgorithms within Python.\n",
  "duration": 3222,
  "id": 3782,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2015-08-16",
  "slug": "untangling-twisted-how-we-scaled-a-python-servic",
  "speakers": [
    "Brian Muller"
  ],
  "summary": "",
  "tags": [],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_3782___Untangling_Twisted_How_We_Scaled_a_Python_Service_",
  "title": "Untangling Twisted: How We Scaled a Python Service for Online Publishers",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_3782___Untangling_Twisted_How_We_Scaled_a_Python_Service_"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtu.be/yrSQyvrubaI"
    }
  ]
}
