{
  "copyright_text": "Standard YouTube License",
  "description": "A fast paced high-level overview of speed optimisation in Python. What makes a program \"slow\"? How to tell what is making your program slow. Common speed-up paradigms: parallelization, alternatives to the regular Python interpreter and asynchronous processing.\n\n**Abstract**\n\nA fast paced high-level overview of speed optimisation in Python. We will start by looking systematically at the most common causes of poor speed, highlighting which resources are being the bottleneck in each case and giving practical advice on how to find out. We will then discuss parallelism with threads and processes, both in the standard library and using celery. We will discuss Pypy and Cython as alternatives to regular Python for CPU intensive tasks. We finish our tour with asynchronous processing in Python 3 using async.io.\n\n",
  "duration": 1424,
  "language": "eng",
  "recorded": "2017-06-30",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://pydata.org/berlin2017/schedule/"
    }
  ],
  "speakers": [
    "Daniele Rapati"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/KeQjFn8D3Dg/maxresdefault.jpg",
  "title": "Engage the Hyper-Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=KeQjFn8D3Dg"
    }
  ]
}
