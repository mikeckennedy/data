{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Projects that heavily rely on such Python features as metaclasses,\ndecorators, or code-generation face a problem of poor support by static code\nanalysis tools. This results in little to no suggestions in IDE or broken\nmypy tests.\n\nWe'll talk about how we addressed this issue on our open-source\n[https://github.com/Toloka/toloka-kit](https://github.com/Toloka/toloka-kit)\nand [https://github.com/Toloka/crowd-kit](https://github.com/Toloka/crowd-kit)\nprojects.",
  "duration": 1500,
  "language": "eng",
  "recorded": "2021-10-01",
  "related_urls": [
    "https://2021.pygotham.tv/talks/how-we-dealt-with-poor-code-analysis-support-in-our-generator-metaclasses-and-code-generation-heavy-projects/"
  ],
  "speakers": [
    "Vladimir Losev"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/5FCawJNxF40/maxresdefault.jpg",
  "title": "How we dealt with poor code analysis support in our generator, metaclasses, and code generation heavy projects",
  "videos": [
    {
      "type": "youtube",
      "url": "https://youtu.be/5FCawJNxF40"
    }
  ]
}
