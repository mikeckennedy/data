{
  "description": "Filmed at PyData London 2017\n\nDescription\nThis talk discusses static type analysis applied to Python data products, its pros and cons, and overall how to adopt type checking tools (i.e. mypy) in your workflow.\n\nAbstract\nAs a dynamically typed language, Python is an extremely flexible tool that allows to write code quickly and concisely. This flexibility makes Python a popular tool for R&D and prototyping, but what about bringing Data Science in production? When comparing Python to statically typed languages, one of the downsides is that many type-related errors are not captured until runtime.\n\nThis talk discusses the steps taken by the Python community to promote static type analysis, in particular the semantic definition of type hints and the adoption of mypy as type checking tool.\n\nThe audience will learn about static typing for Python, its pros and cons, and how to adopt static type analysis in your workflow. Since the focus is on building and deploying data products, static type analysis is discussed as a mean to improve the robustness of your data products.",
  "duration": 1838,
  "recorded": "2017-05-06",
  "speakers": [
    "Marco Bonzanini"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/pzal01H2KLU/hqdefault.jpg",
  "title": "Static Type Analysis for Robust Data Products",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=pzal01H2KLU"
    }
  ]
}
