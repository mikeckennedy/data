{
  "description": "Testing software is just as important in Python as it is in any other\nprogramming language. Rather than treat testing as a \u201cnecessary evil,\u201d\nPython offers a number of versatile test frameworks to make it fun and\neasy. This talk will cover basic testing best practices and introduce\na few of the popular frameworks, including unittest, doctest, py.test,\nNose, and Avocado.\n\nTesting is vital to the success of any software, including big data\nand analytics code. Unfortunately, it is often regarded as a\n\u201cnecessary evil\u201d \u2013 extra work that slows down progress. In this\nsession, I will highlight how testing in Python can be fun, easy,\nfast, and helpful.\n\nFirst, I will give a brief overview of basic best practices for\ntesting. We will talk about the difference between debugging and\ntesting, different types of tests, how to write good test cases, and\nbasic testing fixtures like assertions and results. I will focus on\nunit testing, but the concepts can be applied to higher levels of\ntesting as well.\n\nThen, for the majority of the session, I will introduce different\nPython test frameworks: - unittest as the standard module for unit\ntest classes. - doctest as a lightweight way to write short, self-\ndocumenting assertions in docstrings. - py.test as a way to write very\nconcise test cases. - Nose as an extension of unittest with added\nfeatures. - Avocado as a comprehensive framework with parameters,\nreplay, and test discovery.\n\nThis talk is designed to be useful to Python programmers of any skill\nlevel. Only a basic understanding of Python is required.",
  "duration": 2441,
  "language": "eng",
  "recorded": "2016-09-15",
  "speakers": [
    "Andrew Knight"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/Sb2tz9Hlbp8/hqdefault.jpg",
  "title": "Testing is Fun in Python!",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Sb2tz9Hlbp8"
    }
  ]
}
