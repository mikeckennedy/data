{
  "alias": "video/109/douglas-bagnall---pyserf---a-shortcut-for-writing",
  "category": "Kiwi PyCon 2009",
  "copyright_text": "No license (All rights reserved)",
  "description": "pyserf - a shortcut for writing C extensions in C\n\nPresented by Douglas Bagnall\n\nAbstract\n\nThere are many clever ways of connecting Python and C code together, and\npyserf is one of those. It is just a short script that parses a module\noutline and produces an idiomatic template for a C extension providing\nthe same signatures, so all you need to do is write the bits that\nactually do stuff.\n\nOutline\n\nPyserf is a tiny project that I wrote for my own use years ago and never\nreleased because it is so obvious that dozens of better versions must\nexist. The idea is simple -- you write an outline of a module like this:\n\n::\n\n    \"\"\"module documentation\"\"\"\n    def top_level_function(int_a, float_b):\n       \"function documentation\"\n       return float_c\n\n    class SomeModule:\n       \"\"\"class documentation\"\"\"\n       def foo(self, int_ants obj_zoo):\n          \"\"\"method documentation\"\"\"\n          return float_frogs\n\nand pyserf uses the parsing modules in the standard library to generate\na C file that will compile to an extension providing the interface it\ndescribes, with the documentation appearing in the right place and the\ntype conversions all properly handled. The generated file is not a\nhideous unreadable mess, rather it is within a few characters of best\npractise according to the official tutorial. Once you have this\ntemplate, you abandon your outline and write the middles of each\nfunction in C. In describing what pyserf does, this talk will\ndemonstrate what is required to write an extension in C by hand, and\nshow you some ways of using the standard libraries parsing modules.\n\n[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]\n",
  "duration": null,
  "id": 109,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2009-11-07",
  "slug": "douglas-bagnall---pyserf---a-shortcut-for-writing",
  "speakers": [
    "Douglas Bagnall"
  ],
  "summary": "",
  "tags": [
    "extensions",
    "kiwipycon",
    "kiwipycon2009",
    "pyserf"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_109___douglas-bagnall-pyserf-a-shortcut-for-writing-c-extensions-in-c",
  "title": "Douglas Bagnall - pyserf - a shortcut for writing C extensions in C",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_109___douglas-bagnall-pyserf-a-shortcut-for-writing-c-extensions-in-c"
    }
  ]
}
