{
  "copyright_text": "Standard YouTube License",
  "description": "Many projects already take advantage of static analysis tools like flake8, PyLint, and MyPy. Can we do better? In this talk, I'll discuss how to take a type checker, bolt on an interprocedural static analyzer, and delight your security team with high quality results.\n\n**Abstract**\n\nIt is incredibly challenging to build a halfway decent static analysis tool for a dynamic language like Python. Fortunately, it gets quite a bit easier with Python type annotations. To explain why, I'll present a tool that finds security vulnerabilities by tracking dangerous flows of information interprocedurally across an entire codebase. **Then,** I'll demonstrate how that tool is really just a slightly slower, more sophisticated, type checker.",
  "duration": 1708,
  "language": "eng",
  "recorded": "2018-05-13",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2018/schedule/talks/"
    },
    {
      "label": "Conference slides (SpeakerDeck)",
      "url": "https://speakerdeck.com/pycon2018"
    },
    {
      "label": "talk schedule",
      "url": "https://us.pycon.org/2018/schedule/presentation/69/"
    }
  ],
  "speakers": [
    "Pieter Hooimeijer"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/hWV8t494N88/maxresdefault.jpg",
  "title": "Types, Deeper Static Analysis, and you",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=hWV8t494N88"
    }
  ]
}