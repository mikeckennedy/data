{
  "alias": "video/380/pycon-2011--optimal-aircraft-engine-tuner-selecti",
  "category": "PyCon US 2011",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "Optimal Aircraft Engine Tuner Selection in Python\n\nPresented by Jeffrey Armstrong\n\nA numerical algorithm for designing on-board aircraft engine diagnostics\nhas been implemented in Python. Employing the optimization techniques\nwithin SciPy, the code performs a search for an optimal vector of\nparameters for estimating engine variables, including exhaust\ntemperatures and thrust. The algorithm exploits the numerical strengths\nof Python and SciPy for speed and interoperability.\n\nAbstract\n\nAn emerging field of aircraft engine diagnostics is the inclusion of\non-board engine performance tracking algorithms. These algorithms\nutilize data provided by a limited number of engine sensors to determine\nthe current engine performance, which tends to degrade over time.\nHowever, estimating engine performance instantaneously is problematic\ndue to the limited number of sensors normally available on a commercial\naircraft engine.\n\nOne common practice is to estimate and track engine performance in\nsoftware using a Kalman filter, a mathematical construct for tuning a\nnumerical model to better track actual measurements (1). A new technique\nhas been devised to optimize the design of this filter in aircraft\nengine applications (2). An optimization procedure to aid in the design\nof the filter has been implemented in Python and exercised against the\nsignificant number of minimization and optimization strategies available\nin SciPy. The talk focuses on the design of this optimization procedure\nin Python. The object-oriented nature of Python offers benefits over\nalternative numerical languages; speed, availability, and\nmaintainability played central roles in the selection of Python as the\nimplementation language. The availability of the multiprocessing module\nallowed for full utilization of modern multi-core CPUs, in contrast with\noften limited commercial numerical computing packages, further improving\ncomputational speed.\n\nSome difficulties were encountered during this design exercise.\nDiscussion of these obstacles and their eventual solution is presented.\nSpecifically, iterative solvers for the discrete algebraic Riccati\nequation and the discrete Lyapunov equation had to be authored in Python\n(3,4). Additional framework for working with discrete state-space\ncontrol systems was created, exploiting the object-oriented features of\nthe language (5).\n\nThe Python implementation was able to verify the solution of the\noptimization problem. Comparison with an alternative, reference MATLAB\nimplementation will be presented briefly. The results of this research\nis planned to be presented at the American Society for Mechanical\nEngineers Turbo Expo 2011 Conference in June, 2011 (6). The algorithm\ndesign in Python is meant to showcase the ability to perform controls\nengineering tasks in the Python language efficiently.\n\n1. \u201cKalman Filter,\u201d Wikipedia:\n   `http://en.wikipedia.org/wiki/Kalman\\_filter <ht%20tp://en.wikipedia.org/wiki/Kalman_filter>`__\n\n2. Simon, D. L. and Garg, S., \u201cOptimal Tuner Selection for Kalman\n   Filter-Based Aircraft Engine Performance Estimation\u201d. Journal of\n   Engineering for Gas Turbines and Power. March 2010, Vol. 132.\n\n3. \u201cAlgebraic Riccati Equation,\u201d Wikipedia:\n   `http://en.wikipedia.org/wiki/Alge\n   braic\\_Riccati\\_equation <http://en.wikipedia.org/wiki/Algebraic_Riccati_equatio%20n>`__\n\n4. \u201cLyapunov Equation,\u201d Wikipedia:\n   `http://en.wikipedia.org/wiki/Lyapunov\\_equa\n   tion <http://en.wikipedia.org/wiki/Lyapunov_equation>`__\n\n5. \u201cState Space,\u201d Wikipedia: `http://en.wikipedia.org/wiki/State-\n   space <http://en.wikipedia.org/wiki/State-space>`__\n\n6. Simon, D. L., Armstrong, J. B., \"Application of an Optimal Tuner\n   Selection Approach for On-Board Self-Tuning Engine Models,\"\n   Proceedings of the ASME Turbo Expo 2011, GT2011-46408, 2011 (To Be\n   Published).\n\n\n",
  "duration": null,
  "id": 380,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2011-03-11",
  "related_urls": [
    "http://en.wikipedia.org/wiki/Alge",
    "http://en.wikipedia.org/wiki/Algebraic_Riccati_equatio%20n",
    "http://en.wikipedia.org/wiki/Kalman\\_filter",
    "http://en.wikipedia.org/wiki/Lyapunov\\_equa",
    "http://en.wikipedia.org/wiki/Lyapunov_equation",
    "http://en.wikipedia.org/wiki/State-",
    "http://en.wikipedia.org/wiki/State-space"
  ],
  "slug": "pycon-2011--optimal-aircraft-engine-tuner-selecti",
  "speakers": [
    "Jeffrey Armstrong"
  ],
  "summary": "",
  "tags": [
    "aircraftenginetuning",
    "casestudy",
    "pycon",
    "pycon2011",
    "scipy"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_380___optimal-aircraft-engine-tuner-selection-in-python",
  "title": "Optimal Aircraft Engine Tuner Selection in Python",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_380___optimal-aircraft-engine-tuner-selection-in-python"
    }
  ]
}
