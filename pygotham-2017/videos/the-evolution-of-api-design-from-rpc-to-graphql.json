{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Over the last 60 years, API designs have changed to respond to everything from new network topologies and new languages, to the pressures of managing ever larger code bases. Today\u2019s most popular API pattern, REST, was developed in a time where the cost of making API requests was plummeting. At the time, bandwidth was getting cheaper, latency was dropping, and the computing power of devices was still tracking Moore\u2019s Law. Mobile turned this on its head. The environments in which apps and APIs need to perform today have effectively regressed a decade. \n \nThis talk will explore some of the new client-server interaction models that address today\u2019s pressures and use history to understand the tradeoffs that we made at the transition between the previous designs. I will introduce major tools that are attempting to change the API landscape including GraphQL and Falcor. Since GraphQL is the dominant technology in this space, I will examine some of its functionality, touch on some of its syntax and present a live coding demo that shows off a GraphQL server from 0 to 1. Demonstrating a complete implementation in under 10 minutes will give a strong sense of what\u2019s possible, and what kind of complexity burden a tool like this would impose. Spoiler: There is no silver bullet.",
  "duration": 1500,
  "language": "eng",
  "recorded": "2017-10-06",
  "related_urls": [
    "https://2017.pygotham.org/talks/the-evolution-of-api-design-from-rpc-to-graphql/"
  ],
  "speakers": [
    "Eric Baer"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/chbrZwX_72o/maxresdefault.jpg",
  "title": "The Evolution of API Design: from RPC to GraphQL",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=chbrZwX_72o"
    }
  ]
}
