{
  "alias": "video/2764/multi-purpose-particle-tracking",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "Tracking the motion of many particles is an established technique\n[`Crocker, J.C., Grier,\nD.G. <http://dx.doi.org/10.1006/jcis.1996.0217>`__\\ ], but many\nphysicists, biologists, and chemical engineers still (make their\nundergraduates) do it by hand.\n`Trackpy <https://github.com/soft-matter/trackpy>`__, is a flexible,\nhigh-performance implementation of these algorithms in Python using the\nscientific stack -- including pandas, numba, the IPython notebook, and\nmpld3 -- which scales well to track, filter, and analyze tens of\nthousands of feature trajectories. It was developed collaboratively by\nresearch groups at U. Chicago, U. Penn, Johns Hopkins, and others.\n\nResearchers with very different requirements for performance and\nprecision collaborate on the same package. Some original \"magic\" manages\nhigh-performance components, including numba, using them if they are\navailable and beneficial; however, the package is still fully functional\nwithout these features. Accessibility to new programmers is a high\npriority.\n\nBiological data and video with significant background variation can\nconfound standard feature identification algorithms, and manual curation\nis unavoidable. Here, the high-performance group operations in pandas\nand the cutting-edge notebook ecosystem, in particular the interactive\nIPython tools and mpld3, enable detailed examination and discrimination.\n\nThe infrastructure developed for this project can be applied to other\nwork. Large video data sets can be processed frame by frame, out of\ncore. Image sequences and video are managed through an abstract class\nthat treats all formats alike through a handy, idiomatic interface in a\ncompanion project dubbed `PIMS <https://github.com/soft-matter/pims>`__.\n\nA suite of over 150 unit tests with automated continuous integration\ntesting has ensured stability and accuracy during the collaborative\nprocess. In our experience, this is an unusual but worthwhile level of\ntesting for a niche codebase from an academic lab.\n\nIn general, we have lessons to share from developing shared tools for\nresearchers with separate priorities and varied levels of programming\nskill and interest.\n",
  "duration": null,
  "id": 2764,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-14",
  "related_urls": [
    "http://dx.doi.org/10.1006/jcis.1996.0217",
    "https://github.com/soft-matter/pims",
    "https://github.com/soft-matter/trackpy"
  ],
  "slug": "multi-purpose-particle-tracking",
  "speakers": [
    "Daniel B. Allan"
  ],
  "summary": "In many scientific contexts it is necessary to identify and track\nfeatures in video. Several labs with separate projects and priorities\ncollaborated to develop a common, novice-accessible package of standard\nalgorithms. The package manages optional high-performance components,\nsuch as numba, and interactive tools to tackle challenging data, while\nprioritizing testing and easy adoption by novices.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/MxK7Fe4xfXM/hqdefault.jpg",
  "title": "Multi Purpose Particle Tracking",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=MxK7Fe4xfXM"
    }
  ]
}
