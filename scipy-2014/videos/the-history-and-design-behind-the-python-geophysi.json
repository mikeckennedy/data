{
  "alias": "video/2780/the-history-and-design-behind-the-python-geophysi",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "The Council for Geoscience (CGS) is the so called \"Geological Survey\" of\nSouth Africa. Like many similar institutions around the world, financial\nrestrictions play a significant role in limiting what tools are\navailable to scientists. It was from this need to stay scientifically\ncurrent, while keeping the software inexpensive, that the examination of\nPython first started and ultimately ended up in the PyGMI project.\n\nThe origins of PyGMI started with two separate projects. The first was a\njoint project where the CGS was responsible for the creation of a\nsoftware interface for cluster analysis code, developed by the\nUniversity of Potsdam (Paasche et al 2009). The resulting project was\ndone entirely in Python. Data could be imported, filtered, analyzed and\ndisplayed in graph form using Matplotlib.\n\nThe second project stemmed from the need to perform 3D modelling on\ngeophysical data. The creation of 3D models can be extremely\ntime-consuming. Packages available tend to follow either the modelling\nof individual 2.5D profiles, which are then joined up into 3D sections,\nor modelling fully in three dimensions using polygonal based models. The\ninitial idea was to use the VTK library as the means to create, display\nand interrogate the model, while using the Scipy and Numpy libraries to\nperform the actual potential field calculations. It soon became apparent\nthat editing the resulting mesh quickly became complex and time\nconsuming. The ability to easily create and change a model is the very\nbasis of forward modelling and for this reason a new approach was\nadopted. The newer 3D modelling package was designed to allow the user\nto model simply by drawing the model, in the same way one would draw\nviews of a house using a paint program. This implies the need to have a\nfront view, as well as a top view. The model is therefore voxel based\nrather than polygonal. The final model can be displayed either within\nthe PyGMI software, or exported to Google Earth for examination.\n\nUltimately these two projects formed the basis of what is now the actual\nPyGMI package -- which is a modular collection of various techniques,\nincluding multivariate statistical analysis and potential field\nmodelling. The interface follows a flow diagram approach and the\nindividual modules are independent enough to ensure that they do not\ninterfere with code which has preceded them in previous modules.\n\nThe PyGMI software is available for free download at:\nhttps://code.google.com/p/pygmi/\n",
  "duration": null,
  "id": 2780,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-14",
  "related_urls": [
    "https://code.google.com/p/pygmi/"
  ],
  "slug": "the-history-and-design-behind-the-python-geophysi",
  "speakers": [
    "Patrick Cole"
  ],
  "summary": "The development of geophysical software by individual scientists is\nachievable through languages such as Python. All goals behind developing\na geophysical potential field interpretation and modelling software have\nbeen achieved to date. The implication of this is that innovation can be\na driving force in projects, rather than waiting for commercial vendors\nto provide appropriate scientific tools.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/5kM3tKkjoSw/hqdefault.jpg",
  "title": "The History and Design Behind the Python Geophysical Modelling and Interpretation (PyGMI) Package",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=5kM3tKkjoSw"
    }
  ]
}
