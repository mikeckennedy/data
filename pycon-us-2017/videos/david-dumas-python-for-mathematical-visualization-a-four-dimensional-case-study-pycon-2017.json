{
  "description": "This is a talk about creating pictures of a mathematical\nobject---specifically, a 4-dimensional fractal \"dust\" that has been the\nsubject of mathematical research in hyperbolic geometry since the 1980s.\nIn the end this is accomplished using a little algebra, a little\ngeometry, and a healthy dose of Python.\n\nThat is, I will present a case study of using Python in several aspects\nof a mathematical visualization project, from the computation itself, to\ntransforming and converting data, and finally for scripting the process\nof generating the images. Along the way I'll explain how Python's\nconvenient idioms and containers (e.g. sets and set comprehensions) are\na good fit for some of the algebraic and geometric questions that come\nup, how Scipy and Numpy enable fast numerical calculations, and how\nPython's strength as a language for scripting and automation allows easy\norchestration of rendering of still images and frames of animations.\n\nThe mathematical visualization project we describe is a collaboration\nwith Fran\u00e7ois Gu\u00e9ritaud (Universit\u00e9 de Lille).\n",
  "duration": 1854,
  "recorded": "2017-05-20",
  "speakers": [
    "David Dumas"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/HYVr-b46VJo/hqdefault.jpg",
  "title": "Python for mathematical visualization: a four-dimensional case study",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=HYVr-b46VJo"
    }
  ]
}
