{
  "alias": "video/325/pycon-2010--turtles-all-the-way-down--demystifyin",
  "category": "PyCon US 2010",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "Turtles all the way down: Demystifying deferreds, decorators and\ndeclarations\n\nPresented by Glyph Lefkowitz\n\nPython's flexible object model allows library and framework authors to\nadd very flexible declarations. Metaclasses, decorators, callable\nobjects, and operator overloading practically allow libraries to\nre-define the language in order to provide a more concise, natural style\nfor that library. Unfortunately, the library user's first experience of\nsuch conveniences is often confusing, because it's not clear what's\ngoing on.\n\nIn this talk, I will try to convince you that all of this wonderful\nmagic isn't all that weird. This is not a typical how-to session on how\nto use a particular feature, either of Python or of Twisted, but will\nrather draw examples from Python, Twisted, and Zope to illustrate\ntechniques you can use to read and understand \"magical\" Python code.\n",
  "duration": null,
  "id": 325,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2010-02-19",
  "slug": "pycon-2010--turtles-all-the-way-down--demystifyin",
  "speakers": [
    "Glyph"
  ],
  "summary": "",
  "tags": [
    "decorators",
    "deferreds",
    "delcarations",
    "pycon",
    "pycon2010"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_325___turtles-all-the-way-down-demystifying-deferreds-decorators-and-declarations-169",
  "title": "Turtles All The Way Down: Demystifying Deferreds, Decorators, and Declarations (#169)",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_325___turtles-all-the-way-down-demystifying-deferreds-decorators-and-declarations-169"
    }
  ]
}
