{
  "alias": "video/2784/prototyping-a-geophysical-algorithm-in-python",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "A geophysics paper by Spitz has a long paragraph that describes a model,\nan algorithm, and the results of applying the algorithm to the model. I\nwanted to implement and test the algorithm to ensure I fully understood\nthe method. This is a good illustration of Python for geophysics because\nthe implementation requires:\n\n1. Fourier transforms provided by numpy.fft\n2. Setting up linear equations using numpy.array and numpy.matrix\n3. solving the linear equations using scipy.linalg.solve\n4. Applying convolutional filters using scipy.signal.lfilter\n\nA bandlimited flat event model is created using array slicing in numpy\nand is bandlimited in the frequency domain. Another component of the\nmodel is created by convolving a short derivative filter on a similar\nflat event model. After Fourier transform, linear equations are set up\nto compute a prediction filter in the FX domain. These equations are\ncreated using data slicing, conjugate transpose, matrix multiple (all\navailable in numpy). Scipy.linalg.solve is used to solve for the\nprediction error filter. A final filter is computed using the recursive\nfilter capability in scipy.signal.lfilter. Results are displayed using\nmatplotlib.\n\nThis is quite a tour of scipy and numpy to implement an algorithm\ndescribed in a single paragraph. Many operations commonly used in\ngeophysics are illustrated in the program. The resulting program is less\nthan 200 lines of code. I will describe the algorithm and share the\nprototype code.\n\nReferences:\n\nSpitz, S. (1999). Pattern recognition, spatial predictability, and\nsubtraction of multiple events. The Leading Edge, 18(1), 55-58. `doi:\n10.1190/1.1438154 <http://dx.doi.org/10.1190/1.1438154>`__\n",
  "duration": null,
  "id": 2784,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-13",
  "related_urls": [
    "http://dx.doi.org/10.1190/1.1438154"
  ],
  "slug": "prototyping-a-geophysical-algorithm-in-python",
  "speakers": [
    "Karl Schleicher"
  ],
  "summary": "Spitz' paper on FX pattern recognition contains a long paragraph that\ndescribes a model, an algorithm, and the results of applying the\nalgorithm to the model. The algorithm requires Fourier transforms,\nconvolutional filtering, matrix multiplication, and solving linear\nequations. I describe how to use numpy, scipy, and mapplotlib to\nprototype the algorithm and display the processed model.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/kFXVOaZZr-E/hqdefault.jpg",
  "title": "Prototyping a Geophysical Algorithm in Python",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=kFXVOaZZr-E"
    }
  ]
}
