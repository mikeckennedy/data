{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "| Why would you ever need to use decorators in Python?\n| Have you ever had the task when you need to use one function in few\n  places and you really wanted to avoid of code duplicating? For example\n  to add some logging into functions or timers, etc. Decorators in\n  Python are super powerful with these tasks, but at the same time they\n  are super complicated, sometimes even magical. When I started learning\n  Python, Decorators were really like a magic: how to use them, how are\n  they working, lots of questions. The goal is to make the things easier\n  and clear to answer a question: to use or not to use Decorators in\n  your project.\n| What\u2019s in the Talk:\n| - Functions nature in Python\n| - Magic of a Decorator\n| - Basics\n| - When to use Decorators\n| - Examples\n| - Even more Python magic\n\n| My slides are here:\n  https://atymo.me/projects/presentations/GiftOrPoison/\n| Code examples: https://github.com/atymoshchuk/python\\_tutorials\n",
  "duration": 1670,
  "language": "eng",
  "recorded": "2018-07-25",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Anastasiia Tymoshchuk"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/JiikQ6Hg-Ac/maxresdefault.jpg",
  "title": "Python Decorators: Gift or Poison?",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=JiikQ6Hg-Ac"
    }
  ]
}
