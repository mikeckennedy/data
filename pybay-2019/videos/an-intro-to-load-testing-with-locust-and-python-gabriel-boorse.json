{
  "description": "This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.\n\nDescription\nPuzzling over performance problems in production? Baffling backend bugs bending your brain? Unleash a plague of Locusts on your web app to devour performance problems, permanently! In this talk, you will learn how to leverage Locust for load testing RESTful services and more.\n\nAbstract\nOverview:\n\nLocust is an open source Python library that you can use to identify bottlenecks in your code by pummeling your programs with tens, hundreds, or even thousands of separate workers. Using Locust, we can simulate the kinds of continuous traffic that web applications experience out in the wild. This kind of load testing, like any other contraption in the tester's toolbox, plays a critical role in the process of delivering robust, stable, and battle-tested software.\n\nCome to this talk for a practical, ground-level intro to load testing, writing a locustfile.py, and debugging the kinds of problems that arise while hammering an application with hundreds or even thousands of requests per minute for the very first time. Additionally, we will dig into ways that you can get the most out of Locust's built-in reporting mechanisms and randomize incoming traffic for more realistic testing scenarios. Finally, I will demonstrate a distributed load test using multiple agent servers and a controller.\n\nSo what are you waiting for? Create a calamity of Biblical scale and arrange your application's apocalypse... for science!\n\nWarning: bad puns and ample alliteration are fair game during this talk.\n\nOutline:\n\nWhat is load testing, and why do I need to use it?\nSimulating users\nDiscovering operational capacity and breaking points\nKnowing the consequences of your code!\nWhat are the differences between functional and load testing?\nPerfect results are secondary\nThe secret to successful load testing: You don't want these tests to pass!\nWhy is load testing so important when developing software today?\nRunning applications at scale and knowing when to allocate resources\nGraceful failures and fault tolerance\nBREAK ALL THE THINGS.\nWriting your first locustfile.py\nDefining a set of tasks\nRandomizing tasks and setting weights\nExecuting tasks in sequence\nUnderstanding the results of a load test and debugging common problems\nDistributed load testing\nUsing an agent/controller architecture to coordinate requests\nOptions for monitoring applications at scale\nA brief intro to testing applications that aren't RESTful services\n\nOriginal slides: https://drive.google.com/file/d/1AJmop4PXVGjTkWTLptDluEMChjTFgAnG/view?usp=sharing\n\nAbout the speaker\nGabriel works remotely for a San Francisco startup as a Senior Software Engineer and primarily uses JVM languages to get the job done. He has been, however, a longtime supporter of the Python community and enjoys writing Python wherever possible. Ask him about the pros and cons of Java versus Python and why he thinks that light themes are truly the better choice!\n\nSponsor Acknowledgement\nThis and other PyBay2019 videos are via the help of our media partner AlphaVoice (https://www.alphavoice.io/)!\n\n#pybay #pybay2019 #python #python3 #gdb",
  "recorded": "2019-08-17",
  "speakers": [
    "Gabriel Boorse"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/uvs4cq6JCeU/hqdefault.jpg",
  "title": "An Intro to Load Testing with Locust and Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=uvs4cq6JCeU"
    }
  ]
}
