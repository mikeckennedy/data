{
  "description": "GRR Rapid Response (https://github.com/google/grr) is an incident\nresponse framework focused on remote live forensics.\n\nIt consists of a Python client (agent) that is installed on target\nsystems, and Python server infrastructure that can manage and talk to\nclients. The goal of GRR is to support forensics and investigations in a\nfast, scalable manner to allow analysts to quickly triage attacks and\nperform analysis remotely.\n\nGRR was started at Google in 2009 as a simple Python helper script used\nby Incident Response engineers. Eventually a little Python script got a\nlittle server component, was adapted to run on multiple systems (Mac,\nLinux, Windows), then a little UI was added and a few nice features were\nintroduced (large-scale hunts, collection of predefined artifacts,\nmemory analysis). A helper script has eventually evolved into a\nsophisticated framework with 180,000 lines of Python code.\n\n| In the presentation we\u2019ll talk about the process of evolving a small\n  prototype-like Python project into a production-ready system, using\n  GRR as an example. The topics that we\u2019ll cover are:\n| \\* Taking shortcuts - both in terms of design and implementation.\n  Reasons for taking them and their eventual costs.\n| \\* Relying on Python\u2019s power features (i.e. meta-classes, mixins)?\n  Long-term consequences on maintainability and readability.\n| \\* Organising the project into separate PyPI packages - benefits of\n  doing that.\n| \\* Continuous integration, testing and automated builds for various\n  platforms - implementation costs and maintainability effects.",
  "recorded": "2019-07-12",
  "speakers": [
    "Mikhail Bushkov",
    "Max Vogler"
  ],
  "tags": [
    "Databases",
    "Deployment/Continuous Integration and Delivery",
    "Development",
    "Open-Source",
    "Security"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/hlqwf6lkPj0/hqdefault.jpg",
  "title": "Evolving a helper script into a 180,000-lines-of-Python-code project",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=hlqwf6lkPj0"
    }
  ]
}
