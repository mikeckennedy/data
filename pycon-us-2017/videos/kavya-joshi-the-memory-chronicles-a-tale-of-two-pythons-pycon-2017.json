{
  "description": "MicroPython is the leanest, meanest full Python implementation. Designed\nfor microcontrollers, this variant of Python runs in less than 300KB of\nmemory, *and* retains support for all your favorite Python features.\n\nSo what does it take to make the smallest Python? Put differently, why\ndoes CPython have a large memory footprint?\n\nThis talk will explore the internals of MicroPython and contrast it with\nCPython, focusing on the aspects that relate to memory use. We will\ndelve into the Python object models in each and the machinery for\nmanaging them. We will touch upon how the designs of the bytecode\ncompiler and interpreter of each differ and why that matters.\n",
  "duration": 1728,
  "recorded": "2017-05-20",
  "speakers": [
    "Kavya Joshi"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/d7qEzpnkWaY/hqdefault.jpg",
  "title": "The Memory Chronicles: A Tale of Two Pythons",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=d7qEzpnkWaY"
    }
  ]
}
