{
  "alias": "video/2243/unleash-the-ponies-using-feincms-to-add-content",
  "category": "DjangoCon AU 2013",
  "copyright_text": "CC-BY-SA",
  "description": "",
  "duration": 45,
  "id": 2243,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-05",
  "slug": "unleash-the-ponies-using-feincms-to-add-content",
  "speakers": [
    "Dr. Greg Turner"
  ],
  "summary": "Site editors often struggle with editing rich content and managing\nvariations in layout in Django admin. By rich content we mean text,\nimages, video, tables, and so on. Trying to squeeze all this content\ninto a single rich-text editor is like trying to jam a magical pony into\na dog kennel. A better approach is to use a rich content framework like\nFeinCMS. FeinCMS is a sensible, flexible framework which allows rich\ncontent of any shape to be manipulated within any Django model in your\nproject.\n\nThis talk describes what FeinCMS does and how it works, and most\nimportantly whether it should be pronounced to rhyme with \"Vein\" or\n\"Vine\". The talk is supported with working example code that shows the\nprogression of a FeinCMS project through several levels of\nfunctionality, plus some real-world demonstrations of fully-developed\nfunctionality.\n\nA FeinCMS Document model is just like any Django model, except it has\none or more 'templates'. Each 'template' has one or more regions, and\neach region is a place where an unlimited amount of rich content types\ncan be added, removed or rearranged to form the content in that region.\nThis is all wrapped up in a nifty lightweight Javascript interface for\nDjango's admin, and a surprisingly simple implementation at the database\nlevel.\n\nThe types of content available in a given region is defined by a\ncollection of abstract Django models (e.g. one model to represent a\npassage of text, another model to represent an image, and so on).\nDevelopers are free to define their own FeinCMS content types, using all\nthe usual features of Django models.\n\nAt the HTML template level, each FeinCMS content item renders a standard\ntemplate, and can optionally render different templates in different\ncircumstances.\n\nThis flexibility allows Django developers to quickly design and build\nCMSes that match the content and layout perfectly, meaning happier\ncontent editors, fewer maintenance headaches and greater magical pony\nfreedom.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/RnMsobX3soE/hqdefault.jpg",
  "title": "Unleash the ponies! Using FeinCMS to add content tools that users love to any Django model",
  "videos": [
    {
      "type": "mp4",
      "url": "http://s3.us.archive.org/ndvpyconau2013/Unleash_the_ponies_Using_FeinC.mp4"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=RnMsobX3soE"
    }
  ]
}
