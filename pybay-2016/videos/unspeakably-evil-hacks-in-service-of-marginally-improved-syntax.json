{
  "description": "One of Python's strengths as a dynamic language is its suite of powerful metaprogramming tools. What happens, however, when you want to move beyond the tools provided by \"traditional\" metaprogramming techniques? This talk will take the audience on a brief tour of projects and techniques that stretch the boundaries of what's possible in Python.\n\u200b\nAbstract\nIn this talk, we provide an introduction to several lesser-known techniques for hacking extending the functionality of Python. Along the way, we consider the costs (in clarity, portability, or otherwise) of employing nonstandard tools to work around limitations of Python.\n\nTopics may include:\n- Runtime Bytecode Rewriting (https://github.com/llllllllll/codetransformer)\n- Hooking the Lexer with Custom Encodings (https://github.com/dropbox/pyxl)\n- Import Hooks (https://github.com/hylang/hy, http://cython.org/)\n\n**Bio:**\nScott Sanderson is an engineer at Quantopian, where he is responsible for the design of Quantopian's backtesting and research APIs. He is a core developer on the open source backtesting library Zipline, and he is a contributor to several projects in the PyData ecosystem, including IPython and the Jupyter Notebook. Scott graduated from Williams College in 2013 with bachelor's degrees in Mathematics and Philosophy.\n\nhttps://speakerdeck.com/pybay2016/scott-sanderson-unspeakably-evil-hacks-in-service-of-marginally-improved-syntax-compile-time-python-programming\n\u200b",
  "duration": 2455,
  "language": "eng",
  "recorded": "2016-08-20",
  "speakers": [
    "Scott Sanderson"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/CcfZeZNJC4E/hqdefault.jpg",
  "title": "Unspeakably Evil Hacks in Service of Marginally Improved Syntax",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CcfZeZNJC4E"
    }
  ]
}
