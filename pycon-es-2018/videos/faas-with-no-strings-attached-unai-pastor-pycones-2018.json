{
  "copyright_text": null,
  "description": "Desde que se empezaron a abandonar las aplicaciones monol\u00edticas la tendencia ha ido hacia una separaci\u00f3n en servicios cada vez m\u00e1s peque\u00f1os que ofreciesen mejor escalabilidad, separaci\u00f3n de responsabilidades y agilidad a la hora de desplegar. Estos \u00faltimos a\u00f1os ha aparecido una nueva evoluci\u00f3n de estas arquitecturas, las Functions as a Service, que son piezas de c\u00f3digo que escalan de manera autom\u00e1tica y reducen los costes ya que no consumen ning\u00fan recurso mientras est\u00e1n en reposo.\n\nComo contrapartida este tipo de funciones necesitan una gran infraestuctura a nivel de cantidad de servidores y virtualizaci\u00f3n que solo unos pocos proveedores de gran tama\u00f1o pueden ofrecer. Actualmente los proveedores que disponen de estas infraestructuras imponen unas limitaciones y requisitos como que est\u00e9n atados a una plataforma privada, el soporte a solo algunos lenguajes o tiempos de ejecuci\u00f3n limitados. Estas condiciones pueden dificultar el desarrollo o quitar libertad al producto que depende de un proveedor.\n\nEn la charla explicar\u00e9 el patr\u00f3n FaaS y las ventajes e inconvenientes de su uso. Tambi\u00e9n hablar\u00e9 de OpenFaas, una plataforma de c\u00f3digo abierto que permite eliminar las dependencias de los proveedores y da total libertad respecto a lenguajes y modo de uso.\n",
  "duration": 1360,
  "language": "spa",
  "recorded": "2018-10-06",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://2018.es.pycon.org/#schedule"
    }
  ],
  "speakers": [
    "Unai Pastor"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/5w4Ir1mxkcI/maxresdefault.jpg",
  "title": "FaaS with no strings attached",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=5w4Ir1mxkcI"
    }
  ]
}
