{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Dask is a pure python library for parallel and distributed computing. It's designed with flexibility in mind, making it easy to parallelize the complicated workflows often found in science. However, once you get something working, how do you debug or profile it? In this talk we'll cover the various tools Dask provides for diagnosing bugs and bottlenecks, as well as tips for resolving these issues.\n\n**Abstract**\n\nDask is a pure python library for parallel and distributed computing. It's designed with simplicity and flexibility in mind, making it easy to parallelize the complicated workflows often found in science. However, once you get something working, how do you debug or profile it? Debugging and profiling parallel code is notoriously hard! In this talk we'll cover the various tools Dask provides for diagnosing bugs and performance bottlenecks, as well as tips and techniques for resolving these issues.\n\nStarting with an example single-threaded probram, we'll walk through adding Dask to parallelize it, and then iterate on this example to gradually improve performance throughout the talk. Attendees should leave having a better understanding of:\n\n- What tools Dask provides for debugging on a single machine\n- How Dask uses IPython to make debugging distributed computations easy\n- How to profile Dask code both on a single machine and on a cluster\n- How to interpret the graphs presented in the Dask Dashboard\n- Performance techniques for attacking bottlenecks once they've been identified.",
  "duration": 2200,
  "language": "eng",
  "recorded": "2017-07-06",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://pydata.org/seattle2017/schedule"
    }
  ],
  "speakers": [
    "Jim Crist"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/JoK8V2eWFPE/maxresdefault.jpg",
  "title": "Make it Work, Make it Right, Make it Fast Debugging and Profiling in Dask",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=JoK8V2eWFPE"
    }
  ]
}
