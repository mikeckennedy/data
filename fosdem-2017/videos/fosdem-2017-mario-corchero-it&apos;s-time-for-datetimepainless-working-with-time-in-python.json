{
  "description": "Working with time is not a trivial challenge. Python includes a native module in the standard library to work with it but datetime keeps being together with unicode a common source of errors. This often leads to the widespread of many other libraries in the attempt of easing the work of working with datetime. Datetime is one of those API that looks easy to use but given the many concepts around time, is it easy to get backfired if the developer has not solid knowledge about the them.In this talk we will overview the main concepts about timestamps represented through datetime objects, the limitations on the standard library and some simple steps to try to avoid the common mistakes that everyone can fall into.Naive datetimes (which the datetime API works by default with) are a great tool to represent calendar times, but when talking about timestamps (focus of this talk) timezones is n essential part of it and the datetime module can be tricky to use for that use cases.We will also speak about different standards of time, time zones, Daylight Saving Times, leap seconds, serialization and datetime arithmetics.The talk will be focused on giving the foundations that everyone knows to be able to understand and work efficiently and without making painful mistakes when dealing with time related algorithms.",
  "language": "eng",
  "recorded": "2017-02-05",
  "speakers": [
    "Mario Corchero"
  ],
  "thumbnail_url": null,
  "title": "It&apos;s time for datetime. Painless working with time in python",
  "videos": [
    {
      "type": "webm",
      "url": "https://video.fosdem.org/2017/H.1308/python_datetime.vp8.webm"
    }
  ]
}
