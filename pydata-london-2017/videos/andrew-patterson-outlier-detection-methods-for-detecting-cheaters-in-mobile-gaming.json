{
  "description": "Filmed at PyData London 2017\nwww.pydata.org\n\nDescription\nBy coming to this tutorial you will learn:\n\nWhat event-driven Python Frameworks are and why they are useful\nHow to overcome any fears you may have about event-driven Python programming\nEnough examples to be able to consider projects like Dask/Distributed and Tornado for your next project\nAbstract\nAt some point in a career in data science, software development or data engineering you will be looking to develop a piece of code that runs alongside another piece of code. For example, you might want to:\n\nUse all of your processors when running a script\nConsume social media data as it is created\nCreate a super simple task scheduler without an ugly while True loop\nUnderstand how Jupyter notebooks work\nWrite to a database and move on to the next task without waiting for confirmation\nCall a function and throw an exception if it takes too long\nThere are numerous ways of achieving such concurrency. If creating a project to run on one or a few machines which needs good exception handling then I find tools like Twisted, Tornado and Dask/Distributed ideal for the above tasks.\n\nAs a python developer I have always tended to work with Celery and felt intimidated by the different flow control when using async tools like Twisted and Tornado. In this tutorial I will walk through the examples above and talk about how I went from Async novice to Dask/Distributed contributor in 6 months. The tutorial will concentrate mainly on practical use cases. Along the way we will encounter some bumps in the road which will hopefully aid attendees' understanding of the basic dos and don'ts around these tools.\n\nBy coming to this tutorial you will learn:\n\nWhat event-driven Python Frameworks are and why they are useful\nHow to overcome any fears you may have about event-driven Python programming\nEnough examples to be able to consider projects like Dask/Distributed and Tornado for your next project\n\nPyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.\n\nWe aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.",
  "duration": 2522,
  "recorded": "2017-05-07",
  "speakers": [
    "Andrew Patterson"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/Q2HLPCBStLQ/hqdefault.jpg",
  "title": "Outlier detection methods for detecting cheaters in mobile gaming",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Q2HLPCBStLQ"
    }
  ]
}
