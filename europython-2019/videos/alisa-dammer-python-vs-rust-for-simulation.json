{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "| Both Python and Rust are getting more and more popularity. Although it\n  is unfair to compare them directly, this talk aims to provide a clear\n  comparison with a pre-defined criteria applied to a specific use-case.\n| Writing a simulation engine is very similar to writing a game engine\n  and requires certain features from a language or framework.\n| Possible comparison criteria:\n| 1. Performance\n| 2. Simplicity\n| 3. Amount of code necessary for a MVP\n| 4. Utilities: docs, tests, profile\n| 5. Compatibility\n\n| Tl;dr\n| Do I want to go back to Python after Rust? Maybe+)",
  "duration": 1737,
  "language": "eng",
  "recorded": "2019-07-10",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2019.europython.eu/schedule/"
    },
    {
      "label": "slides",
      "url": "https://ep2019.europython.eu/media/conference/slides/4CrJBFA-python-vs-rust-for-simulation.pdf"
    }
  ],
  "speakers": [
    "Alisa Dammer"
  ],
  "tags": [
    "Code Analysis",
    "Development",
    "Rust",
    "python"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/kytvDxxedWY/maxresdefault.jpg",
  "title": "Python vs Rust for Simulation",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=kytvDxxedWY"
    }
  ]
}
