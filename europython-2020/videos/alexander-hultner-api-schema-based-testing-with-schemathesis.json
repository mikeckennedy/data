{
  "copyright_text": "This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n",
  "description": "Automatically generate test-cases based on your API-schemas.\n\nThe goal with this talk is to introduce the audience to property-based testing for API\u2019s using schemas to automatically generate test scenarios, enabling them to write more powerful tests faster. \r\n\r\nThe talk will focus on a subset of the field of property-based testing where we focus on testing by automatically generating properties and test strategies from the API Schemas that we often already have. These tests ensure that our APIs conform to their specified schema and enables us to write a much larger amount of tests in less time. \r\n\r\nI will focus on the schemathesis library which leverages the strong hypothesis library as well as the hypothesis-JSONSchema extension strategies, and will in the future also support GraphQL via the hypothesis-graphql strategies. I\u2019m a contributor to schemathesis and currently working on the future GraphQL support with schemathesis creator, Dmitry Dygalo. \r\n\r\nI will also compare it with its predecessor \u201cswagger-conformance\u201d, pure property-based testing through hypothesis, schema strategies with hypothesis-graphql and hypothesis-jsonschema, and discuss their advantages and disadvantages. I will also briefly talk about \u201cQuickREST: Property-based Test Generation of OpenAPI-Described RESTful APIs\u201d (https://arxiv.org/abs/1912.09686), the research paper that\u2019s part of the inspiration for these tools. \r\n\r\nBy focusing on property-based test generation using schemas we already have, I will show that a field like property-based testing, which can seem quite daunting at first, actually can have a low barrier to entry while yielding large amounts of value in return and is useful for most common web projects today. \r\n\r\nThe talk will show how formal schemas for APIs can and will continue to provide additional value outside the scope of documentation.",
  "duration": 1693.0,
  "language": "eng",
  "recorded": "2020-07-23",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2020.europython.eu/schedule/"
    },
    {
      "label": "Conference Website",
      "url": "https://ep2020.europython.eu/"
    },
    {
      "label": "https://arxiv.org/abs/1912.09686",
      "url": "https://arxiv.org/abs/1912.09686"
    },
    {
      "label": "https://ep2020.europython.eu/events/speaker-release-agreement/",
      "url": "https://ep2020.europython.eu/events/speaker-release-agreement/"
    },
    {
      "label": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/"
    },
    {
      "label": "Talk URL",
      "url": "https://ep2020.europython.eu/schedule/23-july?selected=8XYc942-api-schema-based-testing-with-schemathesis"
    },
    {
      "label": "Slides",
      "url": "https://slides.com/hultner/europython-2020-schemathesis/"
    }
  ],
  "speakers": [
    "Alexander Hultn\u00e9r"
  ],
  "tags": [
    "europython",
    "europython-2020",
    "europython-online",
    "APIs",
    "RESTful",
    "Test Libraries (pytest/nose/...)",
    "Testing",
    "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/9FHRwrv-xuQ/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLDE1CBrxsL6q8EbCHXdpe2Vjujrlw",
  "title": "API-schema-based testing with schemathesis",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=9FHRwrv-xuQ"
    }
  ]
}
