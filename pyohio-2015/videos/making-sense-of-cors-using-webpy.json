{
  "alias": "video/3704/making-sense-of-cors-using-webpy",
  "category": "PyOhio 2015",
  "copyright_text": "CC BY",
  "description": "Cross-Origin Resource Sharing is the bane of Javascript API clients\nexistence. It is possible to easily implement CORS support in your\nPython server code with just a few simple request headers. Once your API\nis talking CORS, you are free from the tyranny of browsers' same-origin\nsecurity policies. This talk will explain what CORS is, why should care,\nand work through an example using web.py.\n",
  "duration": 2746,
  "id": 3704,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2015-08-02",
  "slug": "making-sense-of-cors-using-webpy",
  "speakers": [
    "Zach Wick"
  ],
  "summary": "",
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_3704___Making_sense_of_CORS_using_webpy",
  "title": "Making sense of CORS using web.py",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_3704___Making_sense_of_CORS_using_webpy"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtu.be/gZelOtYjYv8"
    }
  ]
}
