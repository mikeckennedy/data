{
  "alias": "video/426/pycon-2011--deploying-applications-with-zc-buildo",
  "category": "PyCon US 2011",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "Deploying Applications with zc.buildout\n\nPresented by JIm Fulton\n\nThis talk described using zc.buildout for application deployment to\nproduction environments. It presents building self-contained source\nreleases, and using these to create RPM distributions. It shows how to\nuse buildout to configure services, including web servers, cron jobs,\nmonitoring and so on. Finally, it presents ongoing efforts to deploy\napplications that span many machines.\n\nAbstract\n\nWe build and deploy large Python applications for our customers. These\napplications are built from many component parts including Python\npackages and non-python applications and tools. Assembling these pieces\ncan be a tedious and error-prone process. The zc.buildout (Buildout)\npackage was developed to automate this process.\n\nAs our use of buildout has matured, we've integrated it with system\npackaging tools and developed techniques for managing software\ndeployemnt and service configuration. I'll provide a detailed\ndescription of the techniques and tools used.\n\nOutline:\n\n-  Buildout\n\n   -  Motivation\n   -  History\n   -  Configuration files\n   -  Recipes\n\n-  Deployment pholisophy: keeping software and service configuration\n   separate\n-  System Packaging\n\n   -  Making self-contained source releases (tar balls)\n   -  Creating system packages from source releases with RPM\n\n-  Service configuration -- system build outs\n\n   -  Scope: Python processes, cron, log rotation, run scripts,\n      monitoring, etc.\n   -  Place files in \"standard\" locations.\n   -  Run by root\n   -  examples\n\n-  Meta recipes\n\n   -  Goal: provide only essential information.\n   -  Recipes provide basic level of abstraction.\n   -  Buildout provides basic tools to build on these abstractions, but\n      these tools only scale so far.\n   -  Buildout configuration language is *not* a programming language.\n   -  Meta-recipes provide a much more powerful way to build high-level\n      abstractions over basic recipes.\n\n-  Next step: Make me a ...\n\n   -  Model based definition of complete systems spanning multiple hosts\n      with interlocking services\n   -  Automatic management of resources\n   -  Implemented with ssh, system packaging tools (e.g. yum) and\n      buildout-based tools.\n   -  Four levels of abstraction\n   -  Current status\n\n\n",
  "duration": null,
  "id": 426,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2011-03-11",
  "slug": "pycon-2011--deploying-applications-with-zc-buildo",
  "speakers": [
    "JIm Fulton"
  ],
  "summary": "",
  "tags": [
    "deployment",
    "pycon",
    "pycon2011",
    "zc.buildout"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_426___deploying-applications-with-zc-buildout",
  "title": "Deploying Applications with zc.buildout",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_426___deploying-applications-with-zc-buildout"
    }
  ]
}
