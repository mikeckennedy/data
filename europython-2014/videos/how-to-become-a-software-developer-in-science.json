{
  "alias": "video/2952/how-to-become-a-software-developer-in-science",
  "category": "EuroPython 2014",
  "copyright_text": "http://creativecommons.org/licenses/by/3.0/",
  "description": "**Goal**: give practical tools for improving skills and software quality\nto people with a background other than IT.\n\nEight years ago, as a plant biologist, I knew almost nothing about\nprogramming. When I took a course in python programming, I found myself\nso fascinated that it altered my entire career. I became a scientific\nsoftware developer. It was long and hard work to get from the level of\n'Hello world' to the world of software development. The talk will cover\nhow to embrace a non-IT education as a strength, how and why to atomize\nprogramming tasks and the importance of doing side projects.\n\n1. Embrace your background\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHaving domain specific knowledge from a field other than IT helps you to\ncommunicate with the team, the users and the group leader. It prevents\nmisunderstandings and helps to define features better. A key step you\ncan take is systematically apply the precise domain specific language to\nthe code e.g when naming objects, methods or functions. Another is to\ndescribe the underlying scientific process step by step as a Use Case\nand write it down in pseudocode.\n\n2. Atomisation\n~~~~~~~~~~~~~~\n\nHaving a set of building block in your software helps to define\nresponsibilities clearly. Smaller parts are easier to test, release and\nchange. Modular design makes the software more flexible and avoids the\nBlob and Lava Flow Anti-Patterns. When using object oriented programming\na rule of thumb is that an object (in Python also a method) does only\none thing. You can express this Single Responsibility Principle as a\nshort sentence for each module. Another practical action is to introduce\nDesign Patterns that help to decouple data and its internal\nrepresentation. As a result, your software becomes more flexible.\n\n3. Participating in side projects\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLearning from others is a great opportunity to grow. Through side\nprojects you gain a fresh perspective and learn about best practices in\nproject management. You gain new ideas for improvement and become aware\nof difficulties in your own project. You can easily participate in a\nscientific project by adding a small feature, writing a test suite or\nprovide a code review on a part of a program.\n\nSummarizing, in scientific software development using domain-specific\nknowledge, atomisation of software, and participation in side projects\nare three things that help to create high quality software and to\ncontinuously improve as a developer.\n\nThe talk will address challenges in areas where science differs from the\nbusiness world. It will present general solution one might use for\nsoftware developed in a scientific environment for research projects\nrather then discussing particular scientific packages.\n\nQualifications\n~~~~~~~~~~~~~~\n\nDuring my PhD I developed a software on 3D RNA modeling\n(www.genesilico.pl/moderna/) that resulted in 7 published articles. I am\ncoauthor on a paper on bioinformatic software development. Currently I\nam actively developing a system biology software in Python at the\nHumboldt University Berlin (www.rxncon.org).\n",
  "duration": null,
  "id": 2952,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-24",
  "slug": "how-to-become-a-software-developer-in-science",
  "speakers": [
    "Magdalena Rother"
  ],
  "summary": "My path from *'Hello world'* to software development was long and hard.\nThe approach I learned during my research may help you to create high\nquality software and improve as a developer. The talk covers how you can\nbenefit from your non-IT knowledge, atomize your project and how\ncollaboration accelerates your learning.\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/z0xglZQ-CZk/hqdefault.jpg",
  "title": "How to become a software developer in science?",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=z0xglZQ-CZk"
    }
  ]
}
