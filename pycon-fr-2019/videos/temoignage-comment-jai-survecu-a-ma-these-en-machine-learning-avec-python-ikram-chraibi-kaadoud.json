{
  "description": "Je propose un t\u00e9moignage sur mon utilisation de Python durant mes travaux de th\u00e8se pour d\u00e9velopper un r\u00e9seau de neurones r\u00e9currents dot\u00e9 d'unit\u00e9s LSTM, Long Short Term Memory. \nFace \u00e0 des outils comme Keras, Tensorflow, pytorch etc., j'ai choisi d'impl\u00e9menter ma propre solution avec Python, sans solliciter de solutions existantes car ces solutions ne me semblaient pas satisfaisante pour r\u00e9pondre \u00e0 la question de l'interpr\u00e9tabilit\u00e9 dominante dans mes travaux de th\u00e8se.\nJ'ai donc d\u00e9cid\u00e9 de \"mettre les mains dans le cambouis \" pour mieux comprendre les boites noires que sont les r\u00e9seaux de neurones et ainsi mener a bien ma th\u00e8se et acqu\u00e9rir la l\u00e9gitimit\u00e9 n\u00e9cessaire pour parler de Machine Learning.\n\nCe beau challenge s'est alors accompagn\u00e9 de nombreuses p\u00e9rip\u00e9ties : 1) Comprendre ce qu'est un LSTM. Pour cela, j'ai surtout impl\u00e9ment\u00e9 ce que j'en comprenais : d'abord un bloc \u00e0 une cellule, puis un r\u00e9seau dot\u00e9 d'une couche d'entr\u00e9e et de sortie, puis un r\u00e9seau avec plusieurs blocs et cellules. 2) Ecrire des \u00e9quations en python. J'ai ainsi d\u00e9couvert les math\u00e9matiques en python lors de mon impl\u00e9mentation de matrices de d\u00e9riv\u00e9es partielles n\u00e9cessaire \u00e0 l'apprentissage du r\u00e9seau de neurones. 3) D\u00e9velopper en Python des concepts pouss\u00e9s, tels que : utiliser une structure de classe pour l'architecture, d\u00e9velopper des distances math\u00e9matiques entre des vecteurs num\u00e9riques, impl\u00e9menter et g\u00e9n\u00e9rer des graphes, etc..  \n\nUne fois mon r\u00e9seau neuronal fonctionnel  (qui apprend et qui pr\u00e9dit avec de bonnes performances), je me suis ensuite int\u00e9ress\u00e9e \u00e0 comment Python pouvait m'aider \u00e0 expliciter ce qui se passe dans mon r\u00e9seau avec par exemple Matplotlib, numpy, la librairie sickit learn... Et souvent j'ai pass\u00e9 des semaines \u00e0 v\u00e9rifier mes r\u00e9sultats ! En effet, un code qui compile n'est pas synonyme de r\u00e9seau qui apprend, et cela est une r\u00e9alit\u00e9 dont j'ai surtout pris la mesure lors de mes d\u00e9veloppements.\n\nDans cette d\u00e9marche d'exp\u00e9rience et de challenge, j'ai d\u00fb par cons\u00e9quent pers\u00e9v\u00e9r\u00e9 de nombreuses fois, ce qui est encore le cas aujourd'hui (dans la mesure du possible). En effet, partir de z\u00e9ro permet d'aborder les questions autrement. Certes il m'a fallu plus de temps et d'\u00e9nergie pour construire mon r\u00e9seau mais une fois cela r\u00e9alis\u00e9, j'en ma\u00eetrisais toutes les briques et je pouvais aller plus loin dans son exploitation, sa modification et fouiller son raisonnement (les valeurs d'activation) plus profond\u00e9ment. Tel est le sentiment que j'en avais.",
  "duration": 2849,
  "language": "fra",
  "recorded": "2019-11-02",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://www.pycon.fr/2019/fr/schedule.html"
    }
  ],
  "speakers": [
    "Ikram Chraibi Kaadoud"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/oTPX654m4l8/hqdefault.jpg",
  "title": "T\u00e9moignage\u202f: comment j'ai surv\u00e9cu \u00e0 ma th\u00e8se en machine learning avec Python\u202f?",
  "videos": [
    {
      "size": 173346502,
      "type": "webm",
      "url": "https://dl.afpy.org/pycon-fr-19/Ikram%20Chraibi%20Kaadoud/Ikram%20Chraibi%20Kaadoud.webm"
    },
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=oTPX654m4l8"
    },
    {
      "type": "peertube",
      "url": "https://bittube.video/videos/watch/61a220ee-fd55-4e65-871b-d057d8eaa2bd"
    }
  ]
}
