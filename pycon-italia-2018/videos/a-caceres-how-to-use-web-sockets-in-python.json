{
  "copyright_text": null,
  "description": "Modern web-apps require bi-directional communication, reacting not only\nto user actions but also to server events. This can be achieved\nelegantly using Web Sockets, a protocol standardized by W3C to be a\ndefault tool for full- duplex connections on the Web.\n\nAlthough most of web-frameworks do not support Web Socket integration\nout of the box, Python has multiple options available making it a piece\nof cake. This talk showcases running Web Sockets with Python web-apps,\nstarting from situations that can make a good use of it, and followed by\nan implementation with most practical frameworks: Tornado and Django\nChannels. We will explore a similar style but different underlying\ntechnologies of both, and finish with a live demo.\n\nin \\_\\_on **sabato 21 aprile** at 12:00 `**See\nschedule** </p3/schedule/pycon9/>`__\n",
  "duration": 1942,
  "language": "eng",
  "recorded": "2018-04-21",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://www.pycon.it/p3/schedule/pycon9/"
    }
  ],
  "speakers": [
    "Anton Caceres"
  ],
  "tags": [
    "tornado",
    "javascript",
    "websockets",
    "web-applications",
    "web development",
    "asyncio"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/bO2lrE3gzFo/maxresdefault.jpg",
  "title": "How to use Web-Sockets in Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=bO2lrE3gzFo"
    }
  ]
}
