{
  "description": "Large codebases need not be tragedies of the commons so riddled with complexity and technical debt, but so many are. How does that happen? By what mechanisms and pathologies do a large number of locally reasonable decisions by intelligent authors add up to unmaintainable software? How can it be that the end result of everyone doing everything right is a system \u201ctoo dangerous to touch\u201d that can\u2019t be modified without likely breaking something?\n\nI\u2019ve written that software, I\u2019ve maintained that software and brought it back from the brink, and I\u2019ve trained others in what is required to avoid trouble. I\u2019ll share what practices work, and why and how they do. I\u2019ll dive into the designs of classes, functions, modules, and packages. I\u2019ll evaluate the tradeoffs of global state and other dark magic. I\u2019ll even dig into and get personal about naming.\n\nThe first obligation of code is to run correctly. The second obligation of code usually is to run efficiently. The third obligation of code is to play well with other code and other programmers. Come learn how to write code that makes friends without sacrificing function or performance!\n",
  "duration": 2847,
  "language": "eng",
  "recorded": "2016-07-03",
  "speakers": [
    "Nathaniel Manista"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/jD0VJk9sOeY/hqdefault.jpg",
  "title": "Code Unto Others",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=jD0VJk9sOeY"
    }
  ]
}
