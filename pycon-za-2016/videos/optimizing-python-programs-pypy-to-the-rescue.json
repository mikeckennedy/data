{
  "description": "In this talk I want to show how you can use PyPy for your benefit. It\nwill kick off with a short introduction covering PyPy and its just in\ntime compiler. PyPy is the most advanced Python interpreter around and\nwhile it should generally just speed up your programs there is a wide\nrange of performance that you can get out of PyPy.\n\nThroughout the talk some developer statements and big applications will\nmotivate why PyPy is a viable option to optimize your Python programs.\nIn addition I will present the companies value after switching to PyPy.\n\nThe first part, will cover considerations why one should write Python\nprograms, and only spend fractions of the development time to optimize\nyour program. The second part of this session will be about this small\npart of time: in cases where you need it, I'll show tools that help you\ninspect and change your program to improve it. We will also dive into\none tool more elaborately. VMProf, a platform to inspect your program\nwhile it is running, imposing very little overhead.\n\nAs a result of this talk, an audience member should be equipped with\ntools that helps him to understand performance issues and optimize\nprograms.\n",
  "duration": 1681,
  "language": "eng",
  "recorded": "2016-10-06",
  "related_urls": [
    "https://2016.za.pycon.org/talks/31/"
  ],
  "speakers": [
    "Richard Plangger"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/xEXUUHB-qjQ/hqdefault.jpg",
  "title": "Optimizing Python programs, PyPy to the rescue",
  "videos": [
    {
      "type": "youtube",
      "url": "http://youtu.be/xEXUUHB-qjQ"
    },
    {
      "type": "archive",
      "url": "https://archive.org/details/pyconza2016-Optimizing_Python_programs_PyPy_to_the_rescue"
    }
  ]
}
