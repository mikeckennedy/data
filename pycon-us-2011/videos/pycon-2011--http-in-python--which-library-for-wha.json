{
  "alias": "video/439/pycon-2011--http-in-python--which-library-for-wha",
  "category": "PyCon US 2011",
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0",
  "description": "HTTP in Python: which library for what task?\n\nPresented by Augie Fackler\n\nHTTP is the lingua franca of the web, and many things done in Python\ndepend on it, yet HTTP in Python isn't always as good as one would\nexpect. It's well worth knowing the options and tradeoffs available.\n\nAbstract\n\nHTTP in Python is very much a mixed bag of available technology. What's\nimplemented mostly works well, but there are some frustrating gaps in\ndifferent libraries that are poorly documented. I've gone wading through\nevery HTTP library I can find for Python while trying to fix an obscure\nbug in Mercurial and decided to write my own. I'll cover what's\navailable today and why I'm starting from scratch with a completely new\nimplementation.\n",
  "duration": null,
  "id": 439,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2011-03-11",
  "slug": "pycon-2011--http-in-python--which-library-for-wha",
  "speakers": [
    "Augie Fackler"
  ],
  "summary": "",
  "tags": [
    "httplib",
    "pycon",
    "pycon2011",
    "pycurl",
    "urllib"
  ],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_439___http-in-python-which-library-for-what-task",
  "title": "HTTP in Python: which library for what task?",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_439___http-in-python-which-library-for-what-task"
    }
  ]
}
