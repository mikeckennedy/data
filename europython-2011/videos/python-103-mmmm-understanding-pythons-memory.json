{
  "alias": "video/1035/python-103-mmmm-understanding-pythons-memory",
  "category": "EuroPython 2011",
  "copyright_text": "Standard YouTube License",
  "description": "In Python 101, you learned basic Python syntax, what its flow control\nmechanisms and basic data types are and how they work. You learned how\nto write functions and developed executable Python scripts that actually\nwork! You probably also learned how to create files, how to open, read\nfrom or write to them, and close them. Perhaps you've even learned a\nlittle bit of object- oriented programming, developed a couple of Python\nclasses, most with user- defined methods, and have no problems creating\ninstances to use in your applications.\n\nIn Python 102 (or equivalent in experience), you explored further, using\ndefault values and variable arguments for functions, discovered how to\ncatch exceptions and write handlers for them\u2026 perhaps you've even\ncreated your own exceptions. You have found some useful Python standard\nlibrary modules and using them actively in your own applications. You've\nquite comfortable with OOP, creating classes and using instances\nregularly in your programs. In fact, you've been coding Python for 6\nmonths to a couple of years now. You're much more serious about Python\nnow because you're no longer a \"beginner.\" You've even taken notice at\nthe growing number of jobs requesting or requiring Python skills.\n\nAs an aspiring Python developer, you are starting to be more aware of\nthe entire ecosystem around you, and think you may be ready for\n\"prime-time\" and feel able to take on a full-time position as a Python\nprogrammer. However, if you have experienced one or more of the below\nquestions or problems, this talk may be for you:\n\n-  Throughout this time, you've experienced strange bugs in your code.\n   In particular, you notice that things don't always behave the way you\n   expect and have spent a good amount of time debugging various parts\n   of your software that you thought were actually correct - you work\n   around them but are disturbed and don't have the time nor committment\n   to fully investigate.\n\n-  You've created classes and objects just fine but wish that you could\n   use some of Python's operators (like +, in, len(), etc.) with your\n   objects, which feel like they're \"2nd-class\" citizens compared to the\n   standard data types.\n\n-  Do you know what functional evaluation strategy means? Have you been\n   asked or considered whether Python is \"call-by-value\" or\n   \"call-by-reference\"? It is important to you, and can you clearly\n   explain your answer?\n\n-  What does \"mutability\" mean? What is the difference between mutable\n   and immutable objects? Which Python objects are mutable and which\n   aren't?\n\n-  Can you clearly explain both the output in the two code snippets\n   below, and even more importantly, *why* the output is the way it is?\n\nSNIPPET A x = 42 y = x x += 1 print x print y\n\nSNIPPET B x = [1, 2, 3] y = x x[0] = 4 print x print y\n\n-  Have you seen odd behavior in container or collection objects like\n   lists or dictionaries? For example, you may have copied those types\n   of objects and discovered weird things happening to both the original\n   and the copy, or that you seen something not quite right if you loop\n   through it and remove items from it.\n\nThis is what Python 103 is for\u2026 to fill in all the missing gaps, to\nanswer all the questions (including those above) that do not seem to\nhave easy-to-find answers on Google, but only if you have the desire to\nlearn more about the interpreter to take your Python skills to the next\nlevel.\n",
  "duration": null,
  "id": 1035,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2011-07-21",
  "slug": "python-103-mmmm-understanding-pythons-memory",
  "speakers": [
    "Wesley J. Chun"
  ],
  "summary": "[EuroPython 2011] wesley chun - 22 June 2011 in \"Track Lasagne\"\n",
  "tags": [
    "debugging",
    "exceptions",
    "memory",
    "scripts"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/HHFCFJSPWrI/hqdefault.jpg",
  "title": "Python 103: Mmmm... Understanding Python's Memory Model, Mutability, and Methods",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=HHFCFJSPWrI"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=34LcNUrFe30"
    }
  ]
}
