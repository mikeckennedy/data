{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "| Did you know there are multiple ways to raise and capture exceptions?\n  Have you ever wondered if you should raise a built-in exception or\n  create your own hierarchy? Did you ever find it hard to understand\n  what an exception meant?\n| This talk will go through the decisions needed to raise and capture\n  exceptions when creating a library. We will look at how to translate\n  and handle errors, create your own exceptions, and make exceptions\n  clear and easy to troubleshoot, while also understanding how they\n  actually work, common pitfalls.\n\nThis talk will enable intermediate developers to leave the room with a\nsolid understanding of how to work effectively with exceptions. As the\nexception flow usually goes untested, this will help prevent frustrating\nsituations when errors occur that are not easy to understand or when an\nunexpected result is produced. The talk will delve into the different\nways of working with exceptions. We will illustrate this with a\nreal-world example to which many developers will be able to relate.\n\nFollowing the talk, intermediate developers will leave the room more\ninformed and better prepared to create and handle exceptions, having\nlearned about many utilities that were already available to them, but\nwere never used or were used improperly.\n\nThe not-so-advanced Pythonistas will get an in-depth dive into\nexceptions. Even if they might not be able to grasp all of the content,\nthey will get a sense of the features that most programmers are unaware\nof and learn to use them when the proper situation arrives.\n\nAdvanced programmers will find this to be a humorous talk that will\ncertainly teach them at least one new thing, as I will dive into parts\nof the grammar of Python that even many advanced programmers are not\nused to.\n\n| The talk is also full of niche information like why the variable that\n  catches exceptions doesn\u2019t like outside of the ``except`` scope.\n| The talk is comprised of four main sections preceded by an\n  introduction to the problem and a conclusion with time for questions\n  at the end. We will look at how to raise, capture, create and design\n  exceptions, offering tips and pitfalls in each section.",
  "duration": 1663,
  "language": "eng",
  "recorded": "2019-07-11",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2019.europython.eu/schedule/"
    }
  ],
  "speakers": [
    "Mario Corchero"
  ],
  "tags": [
    "Best Practice",
    "Development",
    "General",
    "Python 3",
    "Python Skills"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/ac5b8LyHJcQ/maxresdefault.jpg",
  "title": "Exceptional Exceptions",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ac5b8LyHJcQ"
    }
  ]
}
