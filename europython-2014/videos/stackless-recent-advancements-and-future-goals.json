{
  "alias": "video/2998/stackless-recent-advancements-and-future-goals",
  "category": "EuroPython 2014",
  "copyright_text": "http://creativecommons.org/licenses/by/3.0/",
  "description": "Stackless: Recent advancements and future goals\n-----------------------------------------------\n\nSince Python release 1.5 Stackless Python is an enhanced variant of\nC-Python. Stackless is best known for its addition of lightweight\nmicrothreads (tasklets) and channels.\n\nLess known are the recent enhancements that became available with\nStackless 2.7.6. In this talk core Stackless developers demonstrate\n\n-  The improved multi-threading support\n-  How to build custom scheduling primitives based on atomic tasklet\n   operations\n-  The much improved debugger support\n\nStackless recently switched the new master repository from\nhg.python.org/stackless to bitbucket to allow for a more open\ndevelopment process. We'll summarise our experience and discuss our\nplans for the future development of Stackless.\n\nThe talk will be help by Anselm Kruis and Christian Tismer. If we are\nlucky, we will also welcome Kristj\u00e1n Valur J\u00f3nsson from Iceland.\n",
  "duration": null,
  "id": 2998,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-23",
  "slug": "stackless-recent-advancements-and-future-goals",
  "speakers": [
    "Anselm Kruis",
    "Christian Tismer"
  ],
  "summary": "Stackless (formerly known as Stackless-Python) is an enhanced variant of\nthe Python-language. Stackless is best known for its lightweight\nmicrothreads. But that's not all. In this talk Stackless core developers\ndemonstrate recent advancements regarding multi-threading,\ncustom-scheduling, debugging with Stackless and explain future plans for\nStackless.\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/H3sQLC40GXU/hqdefault.jpg",
  "title": "Stackless: Recent advancements and future goals",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=H3sQLC40GXU"
    }
  ]
}
