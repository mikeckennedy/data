{
  "description": "Apr\u00e8s avoir d\u00e9ploy\u00e9 un projet, comment contr\u00f4ler que tout est\nop\u00e9rationnel ? Comment v\u00e9rifier le statut d'un service en cours de\nfonctionnement ? Ou bien, quand une erreur appara\u00eet, comment examiner le\nsyst\u00e8me et trier les bugs issus du code, les typos dans la configuration\nou encore les pannes des services tiers ? C'est la raison d'\u00eatre des\n\"healthchecks\".\n\n\"hospital\" introduit les healthchecks pour Python. D\u00e9couvrons ce que\npeut apporter cet outil et comment l'int\u00e9grer d'un c\u00f4t\u00e9 dans les projets\nPython et de l'autre c\u00f4t\u00e9 dans l'\u00e9cosyst\u00e8me du monitoring et de la\nsupervision.\n\nPlus d'informations : https://hospital.readthedocs.org/\n",
  "duration": 1154,
  "language": "fra",
  "recorded": "2015-10-18",
  "speakers": [
    "Beno\u00eet Bryon"
  ],
  "summary": "Bug logiciel, configuration, probl\u00e8me du syst\u00e8me ou service tiers en\npanne ? Hospital s'inspire des tests unitaires pour g\u00e9n\u00e9rer des\ndiagnostics sur des services en cours de fonctionnement.\n",
  "thumbnail_url": "http://dl.afpy.org/pycon-fr-15/117%20-%20Beno%C3%AEt%20Bryon%20-%20Healthchecks%20:%20des%20tests%20en%20prod.mp4.jpg",
  "title": "Healthchecks : des \"tests\" en prod",
  "videos": [
    {
      "type": "ogv",
      "url": "http://dl.afpy.org/pycon-fr-15/117%20-%20Beno%C3%AEt%20Bryon%20-%20Healthchecks%20:%20des%20tests%20en%20prod.ogv"
    },
    {
      "type": "mp4",
      "url": "http://dl.afpy.org/pycon-fr-15/117%20-%20Beno%C3%AEt%20Bryon%20-%20Healthchecks%20:%20des%20tests%20en%20prod.mp4"
    },
    {
      "type": "webm",
      "url": "http://dl.afpy.org/pycon-fr-15/117%20-%20Beno%C3%AEt%20Bryon%20-%20Healthchecks%20:%20des%20tests%20en%20prod.webm"
    }
  ]
}
