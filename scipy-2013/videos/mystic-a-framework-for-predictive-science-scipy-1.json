{
  "alias": "video/2109/mystic-a-framework-for-predictive-science-scipy-1",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2109,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-01",
  "slug": "mystic-a-framework-for-predictive-science-scipy-1",
  "speakers": [],
  "summary": "Authors: Michael McKerns @ California Institute of Technology, Houman\nOwhadi @ California Institute of Technology\n\nTrack: Machine Learning\n\nWe have built a robust framework (mystic) that lowers the barrier to\nsolving complex problems in predictive science. Mystic is built to\nrigorously solve high-dimensional non-convex optimization problems with\nhighly nonlinear complex constraints. Mystic is capable of solving\nglobal optimization problems with thousands of parameters and thousands\nof constraints, and makes it almost trivial to leverage high-performance\nparallel computing. Mystic's unique ability to apply highly complex and\nstatistical constraints can be used to find optimal probability\ndistributions, calculate risk, uncertainty, sensitivity, and probability\nof failure in real-world inverse problems. Mystic is easy to use, open\nsource, and pure python.\n\nBy providing a simple interface to a lot of underlying complexity,\nmystic enables a non-specialist user unprecedented access to optimizer\nconfigurability. Typically, both termination conditions and initial\nconditions are hard-coded into an optimization algorithm -- however, in\nmystic, conditionals are both dynamic and dynamically configurable, and\nthus enable tuning of the optimizer to solve a much broader range of\nproblems. Mystic provides box constraints and penalty functions, as well\nas an advanced toolkit that can directly utilize all available\ninformation as constraints. With the ability to scale up to thousands of\nparameters, mystic can solve optimization problems that are orders of\nmagnitude larger and of greater complexity than conventional solvers are\ncapable of. In mystic, it's easy to create new algorithms to couple\noptimizers or launch multiple optimizers in parallel, thus allowing\nhighly efficient local search algorithms to provide fast global\noptimization.\n\nCalculations of uncertainty, risk, probability of failure,\ncertification, and experiment design are formulated as global\noptimizations -- and are used to directly provide optimal scenarios for\nsuccess or failure. Mystic has been used in calculations of materials\nfailure under hypervelocity impact, elasto-plastic failure in structures\nunder seismic ground acceleration, structure prediction in\nnanomaterials, and risk in financial portfolios.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/o-nwSnLC6DU/hqdefault.jpg",
  "title": "Mystic: a framework for predictive science; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=o-nwSnLC6DU"
    }
  ]
}
