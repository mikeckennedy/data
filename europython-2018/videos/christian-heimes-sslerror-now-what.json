{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "TLS/SSL is the most important and widely-used protocol for secure and\nencrypted communication, e.g. HTTPS. It offers more than just\nencryption. TLS also ensures data integrity and strong authentication\nwith X.509 certificates. But it provides merely a false sense of\nsecurity, if you use it wrong.\n\nHave you ever encountered ssl.SSLError: [SSL: CERTIFICATE *VERIFY*\nFAILED], while connecting to a server, but you didn\u2019t understand what is\ngoing on? Are you running production code without TLS/SSL protection or\nwith certificate validation disabled, because you couldn\u2019t figure out\nhow to make it work correctly?\n\nI\u2019ll give you the rundown of the basic cryptographic building blocks,\nprotocol handshake, inner structure of certificates, and PKI. You\u2019ll\nlearn about the best practices, debugging tools and tips how to diagnose\nTLS/SSL and how to deal with certificates.\n",
  "duration": 2655,
  "language": "eng",
  "recorded": "2018-07-25",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Christian Heimes"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/DDHF_OpQxMI/maxresdefault.jpg",
  "title": "SSLError, now what?",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=DDHF_OpQxMI"
    }
  ]
}
