{
  "description": "Writing code in Python is easier than most other programming languages.\nSo much so, in fact, that it's easy to quickly knock-up something to\nsolve a problem, especially if your code is ultimately \"throw-away\". As\na language, Python's great at not getting in your way: you write your\ncode, it runs, then you move onto something else. But, how easy is it to\nto write robust code in Python? What if your code has to hang around for\na long time? What if you need to write code which not only runs but also\nhas to handle problems should they occur? In this talk, Paul attempts to\nanswer these questions by presenting some working code, which he then\ndissects to highlight some of the things that can go wrong, before\ndescribing how it's possible to handle and survive the identified\nproblems (should they occur).\n",
  "duration": 1961,
  "language": "eng",
  "recorded": "2016-11-05",
  "speakers": [
    "Paul Barry"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/IDPWEotMAXo/hqdefault.jpg",
  "title": "Try, try, and try again",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=IDPWEotMAXo"
    }
  ]
}
