{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "This is a presentation of and call for participation in development and\ntesting of Python bindings to Succinct Data Structure Library.\n\nFrom Wikipedia: Succinct data structures can represent an object (such\nas a bitvector or a tree) in space close to the information-theoretic\nlower bound of the object while supporting operations of the original\nobject efficiently. The theoretical time complexity of an operation\nperformed on the classical data structure and the equivalent succinct\ndata structure are (most of the time) identical.\n\nCurrently bindings are provided for:\n\n-  Mutable bit-compressed vectors\n-  Immutable compressed integer vectors\n-  Immutable compressed bit (boolean) vectors\n-  Rank and select operations on bitvectors\n-  Wavelet trees\n-  Comressed suffix arrays\n\nOriginal library: https://github.com/simongog/sdsl-lite Most of examples\nfrom SDSL cheat sheet and SDSL tutorial are implemented.\n",
  "duration": 1519,
  "language": "eng",
  "recorded": "2018-07-26",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Konstantin Ignatov"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/EVP_xLILirs/maxresdefault.jpg",
  "title": "Succinct data structures for python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=EVP_xLILirs"
    }
  ]
}
