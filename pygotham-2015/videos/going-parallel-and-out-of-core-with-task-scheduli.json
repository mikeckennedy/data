{
  "alias": "video/3819/going-parallel-and-out-of-core-with-task-scheduli",
  "category": "PyGotham 2015",
  "copyright_text": "CC BY-SA",
  "description": "Dask is an open source, pure python library that enables parallel\nlarger-than-memory computation in a novel way. We represent programs as\nDirected Acyclic Graphs (DAG) of function calls. These graphs are\nexecuted by dask's schedulers with different optimizations (synchronous,\nthreaded, parallel, distributed-memory). Dask has modules geared towards\ndata analysis, which provide a friendly interface to building graps. One\nmodule, dask.array, mimics a subset of NumPy operations. With dask.array\nwe can work with NumPy like arrays that are larger than RAM and\nparallelization comes for free by leveraging the underlying DAG.\n",
  "duration": 2553,
  "id": 3819,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2015-08-16",
  "slug": "going-parallel-and-out-of-core-with-task-scheduli",
  "speakers": [
    "Blake Griffith"
  ],
  "summary": "",
  "tags": [],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_3819___Going_parallel_and_outofcore_with_task_scheduling",
  "title": "Going parallel and larger-than-memory with graphs",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_3819___Going_parallel_and_outofcore_with_task_scheduling"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtu.be/yDlCNjtZvLw"
    }
  ]
}
