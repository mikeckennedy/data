{
  "copyright_text": null,
  "description": "When dealing with a real time application in which you are required to\nprocess a lot of data from multiple sources in parallel, system\nresources disappear quickly. Add some CPU intensive processing and you\nare set to fail.\n\nThis talk will illustrate a solution to solve a CPU bound problem with a\ndata stream of tens of megabytes. I will talk about how easy it is to\nfail and how to obtain a working solution.\n\nThe following arguments will be discussed:\n\n-  threading and its limitations\n-  multiprocessing and its limitations\n-  serialization\n-  shared memory\n-  a solution: multiprocessing + shared memory\n\nCode will be provided and shown during the talk.\n\n**Feedback form:** https://python.it/feedback-1656\n\nin \\_\\_on **Sunday 5 May** at 11:45 `**See\nschedule** </en/sprints/schedule/pycon10/>`__\n",
  "duration": 1614,
  "language": "eng",
  "recorded": "2019-05-05",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://www.pycon.it/p3/schedule/pycon10/"
    }
  ],
  "speakers": [
    "Andrei Neagu"
  ],
  "tags": [
    "threading",
    "SharedMemory",
    "#Python",
    "python3",
    "multiprocessing"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/7qxt2CwfzKA/maxresdefault.jpg",
  "title": "Sharing is Caring! - how to free the CPU from message passing hell - shared memory saved the day",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=7qxt2CwfzKA"
    }
  ]
}
