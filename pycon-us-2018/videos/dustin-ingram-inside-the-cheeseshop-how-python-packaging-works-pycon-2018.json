{
  "copyright_text": "Standard YouTube License",
  "description": "Questions and confusion about the Python packaging ecosystem abound. What is this `setup.py` file? What's the difference between wheels and eggs? Do I use setuptools or distutils? Why should I use twine? Do I put my projects dependencies in a `requirements.txt` or in `setup.py`? How do I just get my module up on PyPI? Wait, what is Warehouse?\n\nThis talk will identify the key tools one might encounter when trying to distribute Python software, what they are used for, why they exist, and their history (including where their weird names come from). In addition, we'll see how they all work together, what it takes to make them work, and what the future has in store for Python packaging.",
  "duration": 1514,
  "language": "eng",
  "recorded": "2018-05-12",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2018/schedule/talks/"
    },
    {
      "label": "Conference slides (Github)",
      "url": "https://github.com/PyCon/2018-slides"
    },
    {
      "label": "Conference slides (SpeakerDeck)",
      "url": "https://speakerdeck.com/pycon2018"
    },
    {
      "label": "talk schedule",
      "url": "https://us.pycon.org/2018/schedule/presentation/148/"
    }
  ],
  "speakers": [
    "Dustin Ingram"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/AQsZsgJ30AE/maxresdefault.jpg",
  "title": "Inside the Cheeseshop: How Python Packaging Works",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=AQsZsgJ30AE"
    }
  ]
}
