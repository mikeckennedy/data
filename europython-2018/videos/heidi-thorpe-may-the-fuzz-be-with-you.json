{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "This talk will explore how Long short-term memory (LSTM) recurrent\nneural networks combined with Python can use Artificial Intelligence to\nprovide invalid, unexpected, or random data as inputs for testing\nsoftware and finding network security vulnerabilities. The technique of\nmachine generated test inputs is an established testing approach and is\nsometimes referred to as fuzzing. I will take this idea further by\npresenting how various types of machine learning can provide novel\noutlier test cases to harden software and networks in a way that is\nsuperior to using only randomness. Instead, I will discuss how to train\nneural networks to produce better fuzzing data.This is a natural\nprogression from my work with machine learning and image processing\nusing support vector machines (SVM) and Generative Adversarial Networks\n(GAN) which I have applied to this new domain of software testing. This\na beginner level talk aimed at all software developers and testers with\na goal to giving attendees a basic understanding of fuzz testing.\n\nTiming of presentation 1 Introduction 0-5 minutes 2 What is a neural\nfuzzing 5-10 minutes 3 How does fuzzing work 10-15 minutes 4 Steps to\ntrain a deep neural network 15-20 minutes 5 Implementing a basic LSTM\nneural network for security testing 20-25 minutes 6 Conclusion and\nQuestions 25-30 minutes\n",
  "duration": 1487,
  "language": "eng",
  "recorded": "2018-07-26",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Heidi Thorpe"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/CWShNYqATkY/maxresdefault.jpg",
  "title": "May the Fuzz be with you",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CWShNYqATkY"
    }
  ]
}
