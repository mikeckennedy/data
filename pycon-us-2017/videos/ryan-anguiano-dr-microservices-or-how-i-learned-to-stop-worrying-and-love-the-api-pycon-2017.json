{
  "description": "Assuming that you already know how to build a monolithic app, you must\nbe wondering how you can use all this \"microservice\" stuff that you keep\nhearing about. Well, a good word of advice is that you probably don't\nneed it. If designed properly, a monolithic app should be able to scale\nand fit the needs of most businesses. Even so, you should keep your\ndevelopment as simple as possible until you have proven and solidified\nyour business concepts. But if you do need to grow to Internet scale,\nthen you have a long road ahead of you.\n\nMoving from a monolithic application to microservices is a natural\nevolution that is often of necessity. There are several competing\nschools of thought that are still being battle-tested in these early\ndays of microservice architecture. Among all the competing paradigms,\nmost of the requirements can be agreed upon, but are mostly\ndifferentiated by the tools used to fulfill the requirements.\n\nThis talk will cover setting up the required infrastructure, and\ndemonstrate how to migrate a sample monolithic Django application into a\nmicroservices platform.\n\nThe demo application will use the following technologies: Django, Flask,\nFabric, Terraform, Ansible, CentOS, Docker, Mesos, Consul, Nginx,\nPgbouncer, Kafka\n",
  "duration": 1743,
  "recorded": "2017-05-19",
  "speakers": [
    "Ryan Anguiano"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/OuhCYGLByJg/hqdefault.jpg",
  "title": "Dr. Microservices, Or How I Learned to Stop Worrying and Love the API",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OuhCYGLByJg"
    }
  ]
}
