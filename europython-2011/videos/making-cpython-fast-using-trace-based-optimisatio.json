{
  "alias": "video/1130/making-cpython-fast-using-trace-based-optimisatio",
  "category": "EuroPython 2011",
  "copyright_text": "Standard YouTube License",
  "description": "CPython can be made faster by implementing the sort of optimizations\nused in the PyPy VM, and in my HotPy VM. All the necessary changes can\nbe made without modifying the language or the API.\n\nThe CPython VM can be modified to support optimizations by adding an\neffective garbage collector and by separating the virtual-machine state\nfrom the real- machine state (like Stackless).\n\nOptimizations can be implemented incrementally. Since almost all of the\noptimizations are implemented in the interpreter, all hardware platforms\ncan benefit. JIT compiler(s) can then be added for common platforms\n(intel, ARM, etc.).\n\nFor more information see http://hotpy.blogspot.com/\n",
  "duration": null,
  "id": 1130,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2011-07-13",
  "related_urls": [
    "http://hotpy.blogspot.com/"
  ],
  "slug": "making-cpython-fast-using-trace-based-optimisatio",
  "speakers": [
    "Mark Shannon"
  ],
  "summary": "[EuroPython 2011] Mark Shannon - 24 June 2011 in \"Track Lasagne\"\n",
  "tags": [
    "cpython",
    "jit",
    "pypy",
    "vm"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/3uTnXITm-kA/hqdefault.jpg",
  "title": "Making CPython Fast Using Trace-based Optimisations",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=3uTnXITm-kA"
    }
  ]
}
