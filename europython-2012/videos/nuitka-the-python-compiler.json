{
  "alias": "video/1303/nuitka-the-python-compiler",
  "category": "EuroPython 2012",
  "copyright_text": "Standard YouTube License",
  "description": "With Nuitka, for the first time, there is a consequently executed\napproach to statically translate the full language extent of Python,\nwith all its special cases, without introducing a new or reduced version\nof Python. It is compiled, but with practically 100% compatibility.\nFunction dictionaries work, code objects exist, frame stack works,\nexception tracebacks, eval, exec, closures, nested functions, meta\nclasses, etc. it\u2019s all there, and behaves identical. First, I would like\nto start out and explain how I came to write a Python compiler, why I\nwant it to be 100% compatible, and why I find deviations from Python\nunacceptable and out of scope. Then I would like to describe where\ndifficulties were in the implementation, what Python constructs\nsurprised me, and where the mapping from Python to C++ left things to\ndesire. In this project, I learned a lot about Python, it wasn\u2019t easy to\nget the full CPython test suite to run. In doing that, I have learned\nanecdotes and fine details of Python, that are normally hidden in daily\nprogramming, but are still useful to know. Esp. the work on\nre-formulating \u201cwith\u201d statements, \u201cassert\u201d, \u201cwhile\"/\"for\u201d as generic\nloops, etc. gives an interesting view on Python itself. And I would like\nto present it, also for the insight it gives on Python. I will give an\noverview over newly developed infrastructure, aiming for type inference\nat compile time, and show existing stuff. I will try and explain, why I\nhope to have picked the right approach in this domain. An interesting\nside game, is the approach to use XML representations of the internal\nnode tree of Nuitka to discover regressions/changes in the optimizer.\nThen I will also present a project road map, with the milestones for\nNuitka, and why I believe this is the right plan, and how Nuitka is\ndifferent from projects like \u201cCython\u201d and \u201cPyPy\u201d. To round it up, I\nwould like to make a demonstration of Nuitka, and give an example for\nhow easy it should be to contribute. As this will be the first time,\nNuitka is introduced the PyCON EU (it was only shown on PyCON DE 2011 so\nfar). And to celebrate that, the current GPLv3 license will be lifted,\nand replaced with Apache 2.0 license (ASF), which is entirely liberal.\n",
  "duration": null,
  "id": 1303,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2012-07-05",
  "slug": "nuitka-the-python-compiler",
  "speakers": [
    "K Haye"
  ],
  "summary": "[EuroPython 2012] K Haye - 4 JULY 2012 in \"Track Ravioli\"\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/ZDHkla5rllg/hqdefault.jpg",
  "title": "Nuitka - the Python compiler",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ZDHkla5rllg"
    }
  ]
}
