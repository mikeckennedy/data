{
  "copyright_text": "Standard YouTube License",
  "description": "The PEP 557 dataclasses module is available in starting in Python 3.7.   It will become an essential part of every Python programmer's toolkit.  This talk shows what problem the module solves, explains its key design decisions, and provides practical examples of how to put it to work.\n\nDataclasses are shown to be the next step in a progression of data aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, records, attrs, and then dataclasses. Each builds upon the one that came before, adding expressiveness at the expense of complexity.\n\nDataclasses are unique in that they let you selectively turn-on or turn-off its various capabilities and it lets the user choose the underlying data store (either instance dictionary, instance slots, or an inherited base class).\n\nDataclasses and typing.NamedTuple both use variable annotations which were new in Python 3.6.\n",
  "duration": 2708,
  "language": "eng",
  "recorded": "2018-05-12",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2018/schedule/talks/"
    },
    {
      "label": "Conference slides (Github)",
      "url": "https://github.com/PyCon/2018-slides"
    },
    {
      "label": "Conference slides (SpeakerDeck)",
      "url": "https://speakerdeck.com/pycon2018"
    },
    {
      "label": "talk schedule",
      "url": "https://us.pycon.org/2018/schedule/presentation/94/"
    }
  ],
  "speakers": [
    "Raymond Hettinger"
  ],
  "tags": [
    "dataclasses"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/maxresdefault.jpg",
  "title": "Dataclasses:  The code generator to end all code generators",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=T-TwcmT6Rcw"
    }
  ]
}
