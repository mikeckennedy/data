{
  "alias": "video/2028/matrix-expressions-and-blaslapack-scipy-2013-pr",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 2028,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-07-02",
  "slug": "matrix-expressions-and-blaslapack-scipy-2013-pr",
  "speakers": [],
  "summary": "Authors: Rocklin, Matthew, University of Chicago Computer Science\n\nTrack: General\n\nNumeric linear algebra is important ubiquitous. The BLAS/LAPACK\nlibraries include high performance implementations of DLA algorithms in\na variety of mathematical situations. They are underused because\n\nThe interface is challenging to scientific users The number of routines\nis huge, pressuring users to select general routines rather than finding\nthe one that best fits their situation. I demonstrate a small DSL for\nMatrix Algebra[1] embedded in the SymPy project [2]. I use logic\nprogramming to infer attributes about larger matrix expressions [3]. I\ndescribe the BLAS and LAPACK libraries programmatically [4] and use\nstrategic programming [5] to automatically build directed acyclic graphs\nof BLAS/LAPACK operations to compute complex expressions [6]. From these\nI generate readable Fortran code [7]. I then use f2py to bring this back\ninto Python. The result is a clean mathematical interface that\nefficiently generates mathematically informed numeric code. I compare\nthese results against other popular numeric packages like NumPy and\nTheano.\n\nPhilosophically I'll plug the following ideas\n\nMultiple clean intermediate representations - Aside from a runnable\nPython function this project also generates perfectly readable Fortran90\ncode and a directed acyclic graph. I'll briefly show that the\navailability of the DAG representation opens up the possibility of\nstatic scheduling. Declarative programming - All of the math in this\nproject is defined separately from the algorithms, increasing\nopportunities for independent development. I'll probably talk about\nseparating what code from how code. I may evangelize a bit about small,\nmodular and generally applicable projects.\n",
  "tags": [
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/nVt24G_2VC0/hqdefault.jpg",
  "title": "Matrix Expressions and BLAS/LAPACK; SciPy 2013 Presentation",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=nVt24G_2VC0"
    }
  ]
}
