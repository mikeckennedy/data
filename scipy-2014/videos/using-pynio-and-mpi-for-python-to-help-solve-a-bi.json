{
  "alias": "video/2773/using-pynio-and-mpi-for-python-to-help-solve-a-bi",
  "category": "SciPy 2014",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "Like most climate models, the CESM (Community Earth System Model) steps\nthrough time as a particular model scenario evolves and, at set\nintervals, outputs the state of all the important variables into single\nNetCDF files for each component of the model (atmosphere, ocean, land,\nand sea ice). Each file contains all the variables for a component at a\nsingle time step. Because the data volume is large, it is impractical to\nattempt to handle all the data for a complete model run as a single\naggregation. Therefore, a consensus has evolved to mandate that the data\nbe reorganized to contain single variables over some convenient time\nperiod. Finding a solution that can take advantage of multi-core\narchitectures to do the job efficiently has not been easy. Recently, in\nan effort to determine the best solution, researchers at NCAR have\nconducted a set of benchmark tests to find the best tool for the job.\nContenders included NCO (NetCDF Operators, the current incumbent for the\ntask); an in-house Fortran code using the parallel I/O library PIO; a\nserial Python script using PyNIO; a version of the PyNIO script adapted\nto work with mpi4py in a very simple manner; CDO; NCL; and Pagoda.\nSurprisingly, PyNIO parallelized with mpi4py generally outperformed the\nother contenders by a large margin, and will now be tested as a\nreplacement for the existing NCO scripts. This talk will look at the\nsimple mpi4py and PyNIO code that achieves this result, discuss the\nreasons why the performance gain varies from case to case, and suggest\nways to improve performance in challenging cases. Along the way, PyNIO's\ncapabilities and recent improvements will be explained. In addition,\nother possible contenders for this role, in particular NetCDF4-Python\ncoupled with mpi4py in a similar fashion, will be benchmarked using the\nsame test suite.\n",
  "duration": null,
  "id": 2773,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-07-14",
  "slug": "using-pynio-and-mpi-for-python-to-help-solve-a-bi",
  "speakers": [
    "David Brown"
  ],
  "summary": "The Community Earth System Model produces orders of magnitude more data\nthan earlier models, and the old data handling methods are no longer\nadequate. We discuss how PyNIO together with MPI for Python has provided\nthe most efficient solution yet tested for the task of converting the\nraw output of the model to NetCDF files suitable both for archiving and\nfor convenient use by scientists.\n",
  "tags": [],
  "thumbnail_url": "https://i1.ytimg.com/vi/egqo6NfAEtw/hqdefault.jpg",
  "title": "Using PyNIO and MPI for Python to help solve a big data problem for the CESM",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=egqo6NfAEtw"
    }
  ]
}
