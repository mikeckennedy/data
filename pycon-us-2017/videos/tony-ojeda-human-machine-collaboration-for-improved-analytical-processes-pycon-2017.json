{
  "description": "Over the last several years, Python developers interested in data\nscience and analytics have acquired a variety of tools and libraries\nthat aim to facilitate analytical processes. Libraries such as Pandas,\nStatsmodels, Scikit-learn, Matplotlib, Seaborn, and Yellowbrick have\nmade tasks such as data wrangling, statistical modeling, machine\nlearning, and data visualization much quicker and easier. They have\naccomplished this by automating and abstracting away some of the more\ntedious, repetitive processes involved with analyzing and modeling data.\n\nOver the next few years, we are sure to witness the introduction of new\ntools that are increasingly intelligent and have the ability to automate\nmore complex analytical processes. However, as we begin using these\ntools (and developing new ones), we should strongly consider the level\nof automation that is most appropriate for each case. Some analytical\nprocesses are technically difficult to automate, and therefore require\nlarge degrees of human steering. Others are relatively easy to automate\nbut perhaps should not be due to the unpredictability of results or\noutputs requiring a level of compassionate decision-making that machines\nsimply don\u2019t possess. Such processes would benefit greatly from the\ncollaboration between automated machine tasks and uniquely human ones.\nAfter all, it is often systems that utilize a combination of both human\nand machine intelligence that achieve better results than either could\non their own.\n\nIn this talk, we will discuss human-machine collaboration as it applies\nto analyzing data with Python. We will review a framework for\nexploratory data analysis with the goal of identifying which tasks\nshould be automated, which tasks should not, and which tasks would\nbenefit from a more interactive, symbiotic, and collaborative process\nbetween the human and the machine. We will explore Python libraries that\nwe can use to build tools that allow us to perform different types of\nanalysis. We\u2019ll also introduce the Cultivar project, an example of a\nhybrid analytics tool that combines a Django framework with Javascript\nvisualizations and Celery for task management to facilitate more\nefficient and effective human-machine systems for data analysis.\n",
  "duration": 1766,
  "recorded": "2017-05-20",
  "speakers": [
    "Tony Ojeda"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/s0u_UkVecx0/hqdefault.jpg",
  "title": "Human-Machine Collaboration for Improved Analytical Processes",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=s0u_UkVecx0"
    }
  ]
}
