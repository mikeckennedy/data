{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Does your code smell? Have a weird fragrance? It turns out code smells\nare a real thing and an amazing conceptualization of suboptimal design.\nThis talk helps you identify code smells in Python. It also shows you\nhow to wash them away by the technique of refactoring. You will learn\nthe art of writing Pythonic, clean and maintainable code.\n\nCode smells refer to the symptoms of problematic code design.\nIdentifying different types of code smells is the first step to\nsuccessful refactoring. I will talk through some classic examples:\n\n-  Unnecessary long and complex code\n-  Using mutable data structures\n-  Uncommunicative naming\n-  Coupled code\n\nKnowing what to refactor, I will share a few learnings that lead to good\nquality code:\n\n-  The boy scout rule: always leave the code cleaner than you found it\n-  Pythonic data structures: Enum, Namedtuple\n-  The art of naming\n-  DRY and the separation of concerns principle\n\nI will also share tips on using refactoring at your company, which\nincludes convincing your product manager, looking out for code smells\nduring code reviews, and employing automatic tools.\n\nThe speaker has previously presented on Talk Python To Me Podcast:\nhttps://talkpython.fm/episodes/show/150/technical-lessons-learned-from-\npythonic-refactoring, and at PyCon.DE:\nhttps://www.youtube.com/watch?v=Yq9-b2JKUyU.\n",
  "duration": 1900,
  "language": "eng",
  "recorded": "2018-07-25",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://ep2018.europython.eu/p3/schedule/ep2018/"
    }
  ],
  "speakers": [
    "Yenny Cheung"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/-8ljgLLlyZw/maxresdefault.jpg",
  "title": "Washing away code smells",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=-8ljgLLlyZw"
    }
  ]
}
