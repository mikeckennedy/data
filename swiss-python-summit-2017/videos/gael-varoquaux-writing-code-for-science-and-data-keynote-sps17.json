{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Scientific research or data science need rapid experimentation and building intuitions from data. Yet, in academia or in the industry, the code must live on to be useful for future enquiries or in production. Always experimenting yet writing production-ready robust code may seem a conundrum. However it shares a lot with agile or extreme programming techniques. It is an interesting test bed of programming practices.\n\nI will explore simple, and less simple, practices that I have encountered in my research for fast turn around and consolidation of code. I will discuss how these considerations led to the design of scikit-learn, that enables easy machine learning, yet is used in production. Finally, I will mention some scikit-learn gems, new or forgotten.\n\nTalk recorded at the Swiss Python Summit on February 17th, 2017.\n\nLicensed as Creative Commons Attribution 4.0 International",
  "duration": 2728,
  "language": "eng",
  "recorded": "2017-02-17",
  "related_urls": [
    {
      "label": "schedule",
      "url": "http://www.python-summit.ch/pages/recordings.html"
    }
  ],
  "speakers": [
    "Ga\u00ebl Varoquaux"
  ],
  "tags": [
    "keynote"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/AaqsGRKdoQ0/maxresdefault.jpg",
  "title": "Writing Code for Science and Data",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=AaqsGRKdoQ0"
    }
  ]
}
