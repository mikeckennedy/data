{
  "copyright_text": null,
  "description": "When it takes hours or days to run your computation, it can take a long\ntime before you notice something has gone wrong, so your feedback cycle\nfor fixes can be very slow. If you want to solve problems\nquickly\u2014whether it's inconsistent results, crashes, or slowness\u2014you need\nto understand what was going on in your process as it was running: you\nneed logging.\n\nIn this talk you'll learn how to use the Eliot logging library to create\ncausal traces of your computation, including intermediate inputs and\noutputs. You'll then see how these traces can help you:\n\nEnsure the computation ran as expected. Debug problems that may have\noccurred far along within your computation. Identify and localize\nperformance problems: which parts of your computation were slow, and\nwhat arguments were involved.\n",
  "duration": 1830,
  "language": "eng",
  "recorded": "2019-05-05T13:10:00",
  "related_urls": [
    {
      "label": "Prose version",
      "url": "https://pythonspeed.com/articles/logging-for-scientific-computing/"
    },
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2019/schedule/talks/"
    },
    {
      "label": "Talk schedule",
      "url": "https://us.pycon.org/2019/schedule/presentation/421/"
    }
  ],
  "speakers": [
    "Itamar Turner-Trauring"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/ctYZje9yI-Q/maxresdefault.jpg",
  "title": "Logging for Scientific Computing: Reproducibility, Debugging, Optimization",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ctYZje9yI-Q"
    }
  ]
}
