{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Checking Python code quality by hand can be both tough and tedious. Fortunately, there exist many code quality tools that let you offload these quality checks to a machine. You are likely familiar with many of the popular tools such as `flake8`, `pylint`, and `coverage`. And that\u2019s good! These tools will catch many different code quality issues such as: not following Python standards, code smells, and potential bugs. However, these basic tools won\u2019t catch all potential code quality issues that you care about.  For example, you may want to catch code standard issues outside of PEP 8, bugs related to incorrect type assumptions, and invalid documentation examples. So, does that mean you sit idly by and continue to catch these issues by hand? Of course not! You find ways to offload the quality checks onto a machine because it will be faster, more accurate, and more consistent than you.\n\nBuilding on previous talks about automating code quality, I will be diving into the more advanced types of quality checks that you can use (or even write yourself!) to further automate your development workflow. Using examples from real-world open source projects, you will learn about:\n\n* Usage of more advanced, lesser-known quality checkers such as `mypy`\n* Writing custom checkers for existing code quality tools such as `pylint` and `flake8`\n* Using and writing checkers for documentation quality tools",
  "duration": 1500,
  "language": "eng",
  "recorded": "2018-10-05",
  "related_urls": [
    "https://2018.pygotham.org/talks/automating-code-quality-next-level/"
  ],
  "speakers": [
    "Kyle Knapp"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/iKAaNaVpJFM/maxresdefault.jpg",
  "title": "Automating Code Quality: Next Level",
  "videos": [
    {
      "type": "youtube",
      "url": "https://youtu.be/iKAaNaVpJFM"
    }
  ]
}
