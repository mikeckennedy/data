{
  "description": "Serverside applications are more and more likely to need to run indynamic cloud environments where they can automatically scale asrequired.  One rightfully popular approach is to run the applicationas a Docker container inside a Kubernetes cluster, giving you a lot ofoperational benefits thanks to the Kubernetes folks.For the most part it is rather easy to make your Python applicationwork inside a Docker container.  But there are a number of commonpatterns one can follow to save time by delegating more things to theruntime environment.  Furthermore you can start adding a few simplenon-intrusive features to your application which will help improve theapplication live-cycle in the cluster, ensuring smooth hand-over whenmigrating the container to different nodes or scaling it up or down.This talk will discuss how to write a Python application which willbehave well in this environment, starting with the basics steps youcan rely on the runtime for, covering logging and all the way tosupporting the service life-cycle, health checking and monitoring in aKubernetes environment.  You will see that building a cloud-nativeapplication is not very hard and something you can graduallyintroduce.",
  "language": "eng",
  "recorded": "2017-02-05",
  "speakers": [
    "Floris Bruynooghe"
  ],
  "thumbnail_url": null,
  "title": "Cloud Native PythonThe road to being a first-class Kubernetes application",
  "videos": [
    {
      "type": "webm",
      "url": "https://video.fosdem.org/2017/UD2.120/cloud_native_python.vp8.webm"
    }
  ]
}
