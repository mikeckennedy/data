{
  "alias": "video/3173/high-resolution-reader-for-traffic-signal-control",
  "category": "PyTexas 2014",
  "copyright_text": "CC-BY",
  "description": "see signalengineer.com for a description of this project offered as open\nsource on github\n\ntopics I would like to cover if given 20-25 minutes\n\n1) short background on traffic signal control\n2) the Purdue specification for high resolution (0.1 second) data logs\n3) interfacing the traffic signal controller by writing a Python shell\n   around WinSCP\n4) interfacing SQLite and CSV data using Python\n5) developing a user interface using QtDesigner and Pyside\n6) the need for threading in the Qt user interface and other lessons\n   learned through this project\n7) developing documentation with Sphinx and using WebKit to display it\n   within the Qt interface\n8) wrapping the project with cx\\_freeze\n9) using the Inno Setup Compiler to create a windows setup file for the\n   finished project\n\n",
  "duration": 1500,
  "id": 3173,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-10-04",
  "slug": "high-resolution-reader-for-traffic-signal-control",
  "speakers": [
    "John Black"
  ],
  "summary": "",
  "tags": [],
  "thumbnail_url": "https://archive.org/services/img/pyvideo_3173___High_Resolution_Reader_for_Traffic_Signal_Controll",
  "title": "High Resolution Reader for Traffic Signal Controllers",
  "videos": [
    {
      "type": "archive.org",
      "url": "https://archive.org/details/pyvideo_3173___High_Resolution_Reader_for_Traffic_Signal_Controll"
    },
    {
      "length": 0,
      "type": "youtube",
      "url": "http://youtu.be/q_XrnfMOg_M"
    }
  ]
}
